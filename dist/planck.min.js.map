{"version":3,"sources":["webpack://planck/webpack/universalModuleDefinition","webpack://planck/webpack/bootstrap","webpack://planck/./lib/common/Vec2.js","webpack://planck/./lib/common/Math.js","webpack://planck/./lib/util/common.js","webpack://planck/./lib/common/Rot.js","webpack://planck/./lib/Settings.js","webpack://planck/./lib/common/Transform.js","webpack://planck/./lib/util/create.js","webpack://planck/./lib/util/options.js","webpack://planck/./lib/Body.js","webpack://planck/./lib/common/Sweep.js","webpack://planck/./lib/common/Mat22.js","webpack://planck/./lib/common/Vec3.js","webpack://planck/./lib/Joint.js","webpack://planck/./lib/common/Velocity.js","webpack://planck/./lib/common/Position.js","webpack://planck/./lib/common/Mat33.js","webpack://planck/./lib/Shape.js","webpack://planck/./lib/collision/AABB.js","webpack://planck/./lib/Contact.js","webpack://planck/./lib/Manifold.js","webpack://planck/./lib/shape/PolygonShape.js","webpack://planck/./lib/collision/Distance.js","webpack://planck/./lib/shape/CircleShape.js","webpack://planck/./lib/shape/EdgeShape.js","webpack://planck/./lib/common/stats.js","webpack://planck/./lib/shape/ChainShape.js","webpack://planck/./lib/World.js","webpack://planck/./lib/collision/DynamicTree.js","webpack://planck/./lib/Fixture.js","webpack://planck/./lib/collision/TimeOfImpact.js","webpack://planck/./lib/joint/RevoluteJoint.js","webpack://planck/./lib/joint/PrismaticJoint.js","webpack://planck/./lib/index.js","webpack://planck/./lib/serializer/index.js","webpack://planck/./lib/collision/BroadPhase.js","webpack://planck/./lib/util/Pool.js","webpack://planck/./lib/Solver.js","webpack://planck/./lib/util/Timer.js","webpack://planck/./lib/shape/BoxShape.js","webpack://planck/./lib/shape/CollideCircle.js","webpack://planck/./lib/shape/CollideEdgeCircle.js","webpack://planck/./lib/shape/CollidePolygon.js","webpack://planck/./lib/shape/CollideCirclePolygone.js","webpack://planck/./lib/shape/CollideEdgePolygon.js","webpack://planck/./lib/joint/DistanceJoint.js","webpack://planck/./lib/joint/FrictionJoint.js","webpack://planck/./lib/joint/GearJoint.js","webpack://planck/./lib/joint/MotorJoint.js","webpack://planck/./lib/joint/MouseJoint.js","webpack://planck/./lib/joint/PulleyJoint.js","webpack://planck/./lib/joint/RopeJoint.js","webpack://planck/./lib/joint/WeldJoint.js","webpack://planck/./lib/joint/WheelJoint.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","Math","x","y","this","_serialize","_deserialize","data","obj","zero","neo","clone","v","toString","JSON","stringify","isValid","isFinite","assert","setZero","set","wSet","a","b","w","setCombine","setMul","add","wAdd","addCombine","addMul","wSub","subCombine","subMul","sub","mul","length","lengthOf","lengthSquared","normalize","EPSILON","invLength","normalized","sqrt","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","max","lower","min","clamp","lengthSqr","invSqrt","scaleFn","translateFn","native","math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","random","debug","statement","err","log","Rot","angle","setAngle","setIdentity","rot","identity","sin","cos","getAngle","atan2","getXAxis","getYAxis","qr","mulRot","mulVec2","mulSub","mulT","mulTRot","mulTVec2","Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","Transform","position","rotation","q","xf","Array","isArray","arr","mulAll","mulFn","mulXf","px","py","mulTXf","proto","props","noop","Error","propertyIsEnumerable","to","from","getOwnPropertySymbols","symbols","symbol","Body","options","Sweep","Velocity","Position","Fixture","staticBody","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","type","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","allowSleep","awake","active","userData","world","def","m_world","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_islandFlag","m_toiFlag","m_userData","m_type","m_mass","m_invMass","m_I","m_invI","m_xf","m_sweep","setTransform","c_velocity","c_position","m_force","m_torque","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_jointList","m_contactList","m_fixtureList","m_prev","m_next","m_destroyed","MassData","mass","center","I","fixtures","f","push","restore","body","forEach","fixture","_addFixture","isWorldLocked","isLocked","getWorld","getNext","setUserData","getUserData","getFixtureList","getJointList","getContactList","isStatic","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","getType","resetMassData","forward","synchronizeFixtures","setAwake","ce","ce0","next","destroyContact","contact","broadPhase","m_broadPhase","proxyCount","m_proxyCount","touchProxy","m_proxies","proxyId","isBullet","setBullet","flag","isSleepingAllowed","setSleepingAllowed","isAwake","isActive","setActive","createProxies","destroyProxies","isFixedRotation","setFixedRotation","getTransform","synchronize","synchronizeTransform","advance","alpha","c0","a0","getPosition","setPosition","getWorldCenter","getLocalCenter","localCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","localPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","scale","getMass","getInertia","getMassData","m_density","massData","oldCenter","setLocalCenter","setMassData","applyForce","force","point","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","impulse","applyAngularImpulse","shouldCollide","that","jn","other","joint","m_collideConnected","m_newFixture","createFixture","shape","fixdef","destroyFixture","node","edge","fixtureA","getFixtureA","fixtureB","getFixtureB","m_body","publish","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","alpha0","beta","Mat22","ex","ey","getInverse","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","Vec3","z","Joint","JointEdge","prev","bodyA","bodyB","m_bodyA","m_bodyB","m_index","collideConnected","m_edgeA","m_edgeB","TYPES","context","clazz","getBodyA","getBodyB","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","shiftOrigin","newOrigin","initVelocityConstraints","step","solveVelocityConstraints","solvePositionConstraints","Mat33","ez","solve33","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","Shape","m_radius","_reset","getRadius","_clone","getChildCount","testPoint","rayCast","output","input","transform","childIndex","computeAABB","aabb","computeMass","density","computeDistanceProxy","proxy","AABB","lowerBound","upperBound","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","Infinity","tmax","p1","p2","absD","normal","inv_d","t1","t2","temp","maxFraction","fraction","Manifold","Distance","ContactEdge","Contact","fA","indexA","fB","indexB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","m_friction","mixFriction","m_restitution","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","rA","rB","normalImpulse","tangentImpulse","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","initConstraint","shapeA","getShape","shapeB","getBody","manifold","getManifold","pointCount","localNormal","j","cp","points","vcp","warmStarting","dtRatio","getWorldManifold","worldManifold","setEnabled","isEnabled","isTouching","getChildIndexA","getChildIndexB","flagForFiltering","setFriction","friction","getFriction","resetFriction","setRestitution","restitution","getRestitution","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","xfA","xfB","update","listener","touching","wasTouching","sensorA","isSensor","sensorB","sensor","oldManifold","nmp","omp","id","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","positionB","localCenterA","localCenterB","mA","iA","mB","iB","cA","aA","cB","aB","minSeparation","separation","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","C","rnA","rnB","K","P","initVelocityConstraint","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","addType","type1","type2","callback","typeA","typeB","destroy","destroyFcn","ManifoldPoint","ContactID","cf","ContactFeature","WorldManifold","separations","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","configurable","wm","dist","nullState","PolygonShape","vertices","_super","TYPE","m_centroid","m_vertices","m_normals","m_count","_set","map","getVertex","index","_setAsBox","ps","unique","i0","x0","hull","ih","ie","i1","i2","vs","count","area","pRef","p3","e1","e2","triangleArea","ComputeCentroid","hx","hy","pLocal","numerator","denominator","minX","minY","maxX","maxY","D","ex1","ey1","ex2","ey2","validate","e","Input","DistanceInput","Output","DistanceOutput","Proxy","DistanceProxy","Cache","SimplexCache","stats","proxyA","proxyB","transformA","transformB","useRadii","iterations","metric","cache","gjkCalls","simplex","Simplex","readCache","m_v","k_maxIters","saveA","saveB","saveCount","iter","getClosestPoint","getSearchDirection","vertex","getSupport","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","SimplexVertex","m_v1","m_v2","m_v3","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","CircleShape","m_p","radius","rr","sigma","EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","newline","string","ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","isLoop","hasPrevVertex","hasNextVertex","prevVertex","nextVertex","_setPrevVertex","_setNextVertex","createChain","getChildEdge","World","BroadPhase","Solver","WorldDef","gravity","continuousPhysics","subStepping","velocityIterations","positionIterations","m_solver","m_contactCount","m_bodyList","m_bodyCount","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","m_clearForces","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","m_stepCount","addPair","createContact","bodies","joints","getBodyList","reverse","_addBody","createJoint","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","queryAABB","queryCallback","query","point1","point2","reportFixtureCallback","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","createBody","createDynamicBody","createKinematicBody","destroyBody","je","je0","destroyJoint","f0","s_step","TimeStep","timeStep","findNewContacts","reset","updateContacts","solveWorld","solveWorldTOI","updatePairs","next_c","activeA","activeB","proxyIdA","proxyIdB","_listeners","on","off","listeners","indexOf","splice","arg1","arg2","arg3","postSolve","Pool","TreeNode","parent","child1","child2","height","DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","isLeaf","getFatAABB","allocateNode","allocate","freeNode","release","createProxy","insertLeaf","destroyProxy","removeLeaf","moveProxy","leaf","leafAABB","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","F","G","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","computeHeight","height1","height2","validateStructure","validateMetrics","getMaxBalance","maxBalance","rebuildBottomUp","nodes","minCost","iMin","jMin","aabbi","aabbj","stack","stackPool","pop","rayCastCallback","abs_v","segmentAABB","subInput","inputPool","h","Iterator","iterator","close","parents","states","FixtureDef","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","setSensor","getDensity","setDensity","getAABB","xf1","xf2","aabb1","aabb2","displacement","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","setFilterGroupIndex","getFilterCategoryBits","setFilterCategoryBits","getFilterMaskBits","setFilterMaskBits","timer","Timer","now","toiCalls","state","TOIOutput","e_unknown","tMax","sweepA","sweepB","totalRadius","target","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","time","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","RevoluteJoint","DEFAULTS","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","anchor","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_referenceAngle","referenceAngle","m_impulse","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_motorMass","m_limitState","_setAnchors","anchorA","anchorB","getLocalAnchorA","getLocalAnchorB","getReferenceAngle","getJointAngle","bA","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","getMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","qA","qB","jointAngle","Cdot","oldImpulse","maxImpulse","dt","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","PrismaticJoint","lowerTranslation","upperTranslation","maxMotorForce","axis","m_localXAxisA","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","bB","setMaxMotorForce","getMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","perp","C1","linearError","C2","translation","impulse1","internal","Serializer","Circle","Edge","Polygon","Chain","Box","CollidePolygons","DistanceJoint","FrictionJoint","GearJoint","MotorJoint","MouseJoint","PulleyJoint","RopeJoint","WeldJoint","WheelJoint","TimeOfImpact","SID","opts","parse","rootClass","preSerialize","postSerialize","preDeserialize","postDeserialize","refTypes","toJson","flat","queue","refMap","storeRef","typeName","__sid","ref","refIndex","refType","serialize","shift","str","join","fromJson","deserialize","cls","ctx","restoreRef","serializer","m_tree","m_moveBuffer","aabbA","aabbB","bufferMove","unbufferMove","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","size","item","common","TOIInput","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","clear","addBody","addContact","addJoint","seed","solveIsland","ratio","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","printBodies","tag","s_subStep","ContactImpulse","normalImpulses","tangentImpulses","minContact","minAlpha","collideA","collideB","backup1","backup2","backup","solveIslandTOI","subStep","Date","BoxShape","CollideCircles","circleA","circleB","distSqr","CollideEdgeCircle","edgeA","Q","u","A1","B1","B2","A2","den","chain","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","polyA","polyB","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","polygonA","cLocal","normalIndex","vertexCount","normals","vertIndex1","vertIndex2","u1","u2","faceCenter","CollidePolygonCircle","CollideEdgePolygon","EPAxis","edgeAxis","polygonAxis","polygonBA","rf","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","frequencyHz","dampingRatio","m_length","m_frequencyHz","m_dampingRatio","m_gamma","m_bias","m_u","gamma","bias","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","crAu","crBu","invMass","omega","k","vpA","vpB","maxForce","maxTorque","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","correctionFactor","m_linearOffset","linearOffset","m_angularOffset","angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","getAngularOffset","inv_h","m_targetA","m_beta","m_C","_localAnchorB","setTarget","getTarget","velocity","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","invM","impulse2","localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy"],"mappings":"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","file":"planck.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"planck\"] = factory();\n\telse\n\t\troot[\"planck\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function(data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function() {\n  return Vec2.clone(this);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\n/**\n * @deprecated Use setCombine or setMul\n */\nVec2.prototype.wSet = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n}\n\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.setCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\nVec2.prototype.setMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\n/**\n * @deprecated Use addCombine or addMul\n */\nVec2.prototype.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n}\n\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.addCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.addMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\n/**\n * @deprecated Use subCombine or subMul\n */\nVec2.prototype.wSub = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }}\n\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.subCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\nVec2.prototype.subMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\nVec2.prototype.normalized = function() {\n  this.normalize();\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\n/**\n * Returns `a + (v x w)`\n */\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\n/**\n * @deprecated Use combine\n */\nVec2.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n}\n\nVec2.combine = function(a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\nVec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n\n/**\n * @experimental\n */\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n}\n\n/**\n * @experimental\n */\nVec2.translateFn = function(x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar native = Math;\nvar math = module.exports = create(native);\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Math = require('./Math');\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function() {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulRot = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m);\n  // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n}\n\nRot.mulVec2 = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulTRot = function(rot, m) {\n  _ASSERT && Rot.assert(m);\n  // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n}\n\nRot.mulTVec2 = function(rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nvar Settings = exports;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @deprecated Use mulFn instead.\n */\nTransform.mulAll = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n  return arr;\n}\n\n/**\n * @experimental\n */\nTransform.mulFn = function(a) {\n  _ASSERT && Transform.assert(a);\n  return function(b) {\n    return Transform.mul(a, b);\n  };\n}\n\nTransform.mulVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n  var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n  return Vec2.neo(x, y);\n}\n\nTransform.mulXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}\n\nTransform.mulTVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b)\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = (a.q.c * px + a.q.s * py);\n  var y = (-a.q.s * px + a.q.c * py);\n  return Vec2.neo(x, y);\n}\n\nTransform.mulTXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n}\n","if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function(to, from) {\n  if (to === null || typeof to === 'undefined') {\n    to = {};\n  }\n\n  for ( var key in from) {\n    if (from.hasOwnProperty(key) && typeof to[key] === 'undefined') {\n      to[key] = from[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(from);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (from.propertyIsEnumerable(symbol) && typeof to[key] === 'undefined') {\n        to[symbol] = from[symbol];\n      }\n    }\n  }\n  return to;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  data.fixtures.forEach(function(data) {\n    var fixture = restore(Fixture, data, body);\n    body._addFixture(fixture);\n  });\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * @internal Used for deserialize.\n */\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n    var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n    var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n    var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n    var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n    return new Mat22(a, b, c, d);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulVec2 = function(mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n}\n\nMat22.mulMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(v);\n  // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n  var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n  var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n  var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n  return new Mat22(a, b, c, d);\n  _ASSERT && common.assert(false);\n}\n\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulTVec2 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n}\n\nMat22.mulTMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex, mx2.ex), Vec2.add(mx1.ey, mx2.ey));\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function(data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function(x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function(v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w ||\n    typeof v === 'object' && v !== null &&\n    typeof w === 'object' && w !== null &&\n    v.x === w.x && v.y === w.y && v.z === w.z;\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\nVec3.cross = function(v, w) {\n  return new Vec3(\n    v.y * w.z - v.z * w.y,\n    v.z * w.x - v.x * w.z,\n    v.x * w.y - v.y * w.x\n  );\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\nJoint.TYPES = {};\n\nJoint._deserialize = function(data, context, restore) {\n  var clazz = Joint.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.mulVec3 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n}\n\nMat33.mulVec2 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(\n    Vec3.add(a.ex, b.ex),\n    Vec3.add(a.ey, b.ey),\n    Vec3.add(a.ez, b.ez)\n  );\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function() {\n};\n\nShape.prototype._serialize = function() {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function(data, context, restore) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  } else if (typeof lower === 'object') {\n    this.upperBound.set(lower);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\nAABB.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n  return this;\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Mat22 = require('./common/Mat22');\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\nvar Manifold = require('./Manifold');\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n      var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.combine(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mulVec2(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Math = require('./common/Math');\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n};\n\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mulVec2(xfA, this.localPoint);\n    var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    var cA = pointA.clone().addMul(radiusA, normal);\n    var cB = pointB.clone().addMul(-radiusB, normal);\n    points[0] = Vec2.mid(cA, cB);\n    separations[0] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mulVec2(xfA.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mulVec2(xfB.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n      var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data, fixture, restore) {\n  var vertices = data.vertices && data.vertices.map(v => Vec2._deserialize(v));\n  var shape = new PolygonShape(vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = []; // [Settings.maxPolygonVertices];\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < ps.length; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps.push(v);\n    }\n  }\n\n  n = ps.length;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = []; // [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie === ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c === 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie === i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  this.m_vertices = [];\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\n\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.addMul(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    p: this.m_p,\n    radius: this.m_radius,\n  };\n};\n\nCircleShape._deserialize = function(data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\n/**\n * @deprecated\n */\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3,\n  };\n};\n\nEdgeShape._deserialize = function(data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\n/**\n * @deprecated\n */\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function(newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n  return string;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n *\n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function() {\n  const data = {\n    type: this.m_type,\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex,\n  };\n  if (this.m_prevVertex) {\n    data.prevVertex = this.m_prevVertex;\n  }\n  if (this.m_nextVertex) {\n    data.nextVertex = this.m_nextVertex;\n  }\n  return data;\n};\n\nChainShape._deserialize = function(data) {\n  var shape = new ChainShape(data.vertices.map(Vec2._deserialize), data.isLoop);\n  if (data.prevVertex) {\n    shape._setPrevVertex(data.prevVertex);\n  }\n  if (data.nextVertex) {\n    shape._setNextVertex(data.nextVertex);\n  }\n  return shape;\n};\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices = [];\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n  this.m_vertices[vertices.length] = Vec2.clone(vertices[0]);\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\nChainShape.prototype._reset = function() {\n  if (this.m_isLoop) {\n    this._createLoop(this.m_vertices);\n  } else {\n    this._createChain(this.m_vertices);\n  }\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\n/**\n * @deprecated\n */\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\nvar common = require('./util/common');\nvar Vec2 = require('./common/Vec2');\nvar BroadPhase = require('./collision/BroadPhase');\nvar Solver = require('./Solver');\nvar Body = require('./Body');\nvar Joint = require('./Joint');\nvar Contact = require('./Contact');\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = true]\n * @prop {boolean} [continuousPhysics = true]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WordDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  this.m_stepCount = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function() {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  for (var j = this.getJointList(); j; j = j.getNext()) {\n    if (typeof j._serialize === 'function') {\n      joints.push(j);\n    }\n  }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    joints: joints,\n  };\n};\n\nWorld._deserialize = function(data, context, restore) {\n  if (!data) {\n    return new World();\n  }\n\n  var world = new World(data.gravity);\n\n  data.bodies && data.bodies.reverse().forEach(function(data) {\n    world._addBody(restore(Body, data, world));\n  });\n\n  data.joints && data.joints.reverse().forEach(function(data) {\n    world.createJoint(restore(Joint, data, world));\n  });\n\n  return world;\n};\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * @internal Used for deserialize.\n */\nWorld.prototype._addBody = function(body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n\n  this.publish('remove-body', b);\n\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // TODO: move this to testbed\n  this.m_stepCount++;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Pool = require('../util/Pool');\nvar Vec2 = require('../common/Vec2');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = this.computeHeight(node.child1.id);\n  var height2 = this.computeHeight(node.child2.id);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = child1.height;\n  var height2 = child2.height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  this.validateStructure(this.m_root);\n  this.validateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\nvar Shape = require('./Shape');\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Re-setup fixture.\n * @private\n */\nFixture.prototype._reset = function() {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function() {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n\n    shape: this.m_shape,\n  };\n};\n\nFixture._deserialize = function(data, body, restore) {\n  var shape = restore(Shape, data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.setFilterGroupIndex = function(groupIndex) {\n  return this.m_filterGroupIndex = groupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.setFilterCategoryBits = function(categoryBits) {\n  this.m_filterCategoryBits = categoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\nFixture.prototype.setFilterMaskBits = function(maskBits) {\n  this.m_filterMaskBits = maskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} fixtureA\n * @param {Fixture} fixtureB\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex == this.m_filterGroupIndex && that.m_filterGroupIndex != 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collide = (that.m_filterMaskBits & this.m_filterCategoryBits) != 0\n      && (that.m_filterCategoryBits & this.m_filterMaskBits) != 0;\n  return collide;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    // if (false) {\n    //   // Dump the curve seen by the root finder\n    //   var N = 100;\n    //   var dx = 1.0 / N;\n    //   var xs = []; // [ N + 1 ];\n    //   var fs = []; // [ N + 1 ];\n    //   var x = 0.0;\n    //   for (var i = 0; i <= N; ++i) {\n    //     sweepA.getTransform(xfA, x);\n    //     sweepB.getTransform(xfB, x);\n    //     var f = fcn.evaluate(xfA, xfB) - target;\n    //     printf(\"%g %g\\n\", x, f);\n    //     xs[i] = x;\n    //     fs[i] = f;\n    //     x += dx;\n    //   }\n    // }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.indexA;// integer\n  this.indexB;// integer\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\nJoint.TYPES[RevoluteJoint.TYPE] = RevoluteJoint;\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n *\n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n *\n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA =  Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB =  Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nRevoluteJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerAngle: this.m_lowerAngle,\n    upperAngle: this.m_upperAngle,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nRevoluteJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RevoluteJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nRevoluteJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nRevoluteJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\nJoint.TYPES[PrismaticJoint.TYPE] = PrismaticJoint;\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0));\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\nPrismaticJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerTranslation: this.m_lowerTranslation,\n    upperTranslation: this.m_upperTranslation,\n    maxMotorForce: this.m_maxMotorForce,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nPrismaticJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.localAxisA = Vec2(data.localAxisA);\n  var joint = new PrismaticJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nPrismaticJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n  var d = Vec2.sub(p2, p1); // Vec2\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis))\n      + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\nPrismaticJoint.prototype.getMaxMotorForce = function() {\n  return this.m_maxMotorForce;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","exports.internal = {};\n\nexports.Serializer = require('./serializer');\n\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Vec3 = require('./common/Vec3');\nexports.Mat22 = require('./common/Mat22');\nexports.Mat33 = require('./common/Mat33');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\n\nexports.AABB = require('./collision/AABB');\n\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\n\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\nrequire('./shape/CollideEdgeCircle');\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\nrequire('./shape/CollideCirclePolygone');\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\n\nexports.internal.Sweep = require('./common/Sweep');\nexports.internal.stats = require('./common/stats');\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = require('./Settings');\n","var World = require('../World');\nvar Body = require('../Body');\nvar Joint = require('../Joint');\nvar Shape = require('../Shape');\n\nvar SID = 0;\n\nfunction Serializer(opts) {\n  opts = opts || {};\n\n  var stringify = opts.stringify || JSON.stringify;\n  var parse = opts.parse || JSON.parse;\n\n  var rootClass = opts.rootClass || World;\n\n  var preSerialize = opts.preSerialize || function (obj) { return obj; };\n  var postSerialize = opts.postSerialize || function (data, obj) { return data; };\n\n  var preDeserialize = opts.preDeserialize || function (data) { return data; };\n  var postDeserialize = opts.postDeserialize || function (obj, data) { return obj; };\n\n  var refTypes = {\n    'World': World,\n    'Body': Body,\n    'Joint': Joint,\n  };\n\n  this.toJson = function (root) {\n    var flat = [];\n    var queue = [root];\n    var refMap = {};\n\n    function storeRef(value, typeName) {\n      value.__sid = value.__sid || ++SID;\n      if (!refMap[value.__sid]) {\n        queue.push(value);\n        var index = flat.length + queue.length;\n        var ref = {\n          refIndex: index,\n          refType: typeName\n        };\n        refMap[value.__sid] = ref;\n      }\n      return refMap[value.__sid];\n    }\n\n    function serialize(obj) {\n      obj = preSerialize(obj);\n      var data = obj._serialize();\n      data = postSerialize(data, obj);\n      return data;\n    }\n\n    while (queue.length) {\n      var obj = queue.shift();\n      var str = stringify(obj, function(key, value) {\n        if (typeof value !== 'object' || value === null) {\n          return value;\n        }\n        if (typeof value._serialize !== 'function') {\n          return value;\n        }\n        if (value === obj) {\n          return serialize(value);\n        }\n        for (var typeName in refTypes) {\n          if (value instanceof refTypes[typeName]) {\n            return storeRef(value, typeName);\n          }\n        }\n        return serialize(value);\n      }, '  ');\n      flat.push(str);\n    }\n\n    var result = '[' + flat.join(',') + ']';\n    return result;\n  };\n\n  this.fromJson = function (string) {\n    var flat = parse(string);\n    var refMap = {};\n\n    function deserialize(cls, data, ctx) {\n      data = preDeserialize(data);\n      var obj = cls._deserialize(data, ctx, restoreRef);\n      obj = postDeserialize(obj, data);\n      return obj;\n    }\n\n    function restoreRef(cls, ref, ctx) {\n      if (!ref.refIndex) {\n        return cls && cls._deserialize && deserialize(cls, ref, ctx);\n      }\n      cls = refTypes[ref.refType] || cls;\n      var index = ref.refIndex;\n      if (!refMap[index]) {\n        var data = flat[index];\n        var obj = deserialize(cls, data, ctx);\n        refMap[index] = obj;\n      }\n      return refMap[index];\n    }\n\n    var root = rootClass._deserialize(flat[0], null, restoreRef);\n\n    return root;\n  }\n}\n\nmodule.exports = Serializer;\n\nvar serializer = new Serializer();\nmodule.exports.toJson = serializer.toJson;\nmodule.exports.fromJson = serializer.fromJson;\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\nvar Contact = require('./Contact');\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function() {\n  return Date.now();\n}\n\nmodule.exports.diff = function(time) {\n  return Date.now() - time;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexports.CollideCircles = CollideCircles;","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar CircleShape = require('./CircleShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nDistanceJoint.TYPE = 'distance-joint';\nJoint.TYPES[DistanceJoint.TYPE] = DistanceJoint;\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  }\n\n  // order of constructor arguments is changed in v0.2\n  if (bodyB && anchorA && ('m_type' in anchorA) && ('x' in bodyB) && ('y' in bodyB)) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = Vec2.clone(anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero());\n  this.m_length = Math.isFinite(def.length) ? def.length :\n    Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\nDistanceJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    length: this.m_length,\n\n    impulse: this.m_impulse,\n    gamma: this.m_gamma,\n    bias: this.m_bias,\n  };\n};\n\nDistanceJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new DistanceJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nDistanceJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.length > 0) {\n    this.m_length = +def.length;\n  } else if (def.length < 0) { // don't change length\n  } else if (def.anchorA || def.anchorA || def.anchorA || def.anchorA) {\n    this.m_length = Vec2.distance(\n        this.m_bodyA.getWorldPoint(this.m_localAnchorA),\n        this.m_bodyB.getWorldPoint(this.m_localAnchorB)\n    );\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nFrictionJoint.TYPE = 'friction-joint';\nJoint.TYPES[FrictionJoint.TYPE] = FrictionJoint;\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  maxTorque : 0.0,\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = FrictionJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nFrictionJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n  };\n};\n\nFrictionJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new FrictionJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nFrictionJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar RevoluteJoint = require('./RevoluteJoint');\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\nJoint.TYPES[GearJoint.TYPE] = GearJoint;\n\nGearJoint._super = Joint;\nGearJoint.prototype = create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE\n      || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE\n      || joint2.m_type === PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\nGearJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    joint1: this.m_joint1,\n    joint2: this.m_joint2,\n    ratio: this.m_ratio,\n\n    // _constant: this.m_constant,\n  };\n};\n\nGearJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.joint1 = restore(Joint, data.joint1, world);\n  data.joint2 = restore(Joint, data.joint2, world);\n  var joint = new GearJoint(data);\n  // if (data._constant) joint.m_constant = data._constant;\n  return joint;\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nMotorJoint.TYPE = 'motor-joint';\nJoint.TYPES[MotorJoint.TYPE] = MotorJoint;\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MotorJoint.TYPE;\n\n  this.m_linearOffset = Math.isFinite(def.linearOffset) ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n  this.m_angularOffset = Math.isFinite(def.angularOffset) ? def.angularOffset : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nMotorJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n    correctionFactor: this.m_correctionFactor,\n\n    linearOffset: this.m_linearOffset,\n    angularOffset: this.m_angularOffset,\n  };\n};\n\nMotorJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new MotorJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nMotorJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nMouseJoint.TYPE = 'mouse-joint';\nJoint.TYPES[MouseJoint.TYPE] = MouseJoint;\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\nMouseJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    target: this.m_targetA,\n    maxForce: this.m_maxForce,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    _localAnchorB: this.m_localAnchorB,\n  };\n};\n\nMouseJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.target = Vec2(data.target)\n  var joint = new MouseJoint(data);\n  if(data._localAnchorB) joint.m_localAnchorB = data._localAnchorB;\n  return joint;\n};\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\nJoint.TYPES[PulleyJoint.TYPE] = PulleyJoint;\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\nPulleyJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    groundAnchorA: this.m_groundAnchorA,\n    groundAnchorB: this.m_groundAnchorB,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    lengthA: this.m_lengthA,\n    lengthB: this.m_lengthB,\n    ratio: this.m_ratio,\n  };\n};\n\nPulleyJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new PulleyJoint(data);\n  return joint;\n};\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\nJoint.TYPES[RopeJoint.TYPE] = RopeJoint;\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength : 0.0,\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\nRopeJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    maxLength: this.m_maxLength,\n  };\n};\n\nRopeJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RopeJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nWeldJoint.TYPE = 'weld-joint';\nJoint.TYPES[WeldJoint.TYPE] = WeldJoint;\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0,\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nWeldJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    \n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nWeldJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WeldJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWeldJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nWheelJoint.TYPE = 'wheel-joint';\nJoint.TYPES[WheelJoint.TYPE] = WheelJoint;\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n *\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nvar DEFAULTS = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7,\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || def.localAxis || Vec2.neo(1.0, 0.0));\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\nWheelJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    enableMotor: this.m_enableMotor,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n  };\n};\n\nWheelJoint._deserialize = function(data, world, restore) {\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WheelJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWheelJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = Vec2.sub(pB, pA); // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n"],"sourceRoot":""}