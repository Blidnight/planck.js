{"version":3,"sources":["webpack://planck/webpack/universalModuleDefinition","webpack://planck/webpack/bootstrap","webpack://planck/./lib/common/Vec2.js","webpack://planck/./lib/common/Math.js","webpack://planck/./lib/util/common.js","webpack://planck/./lib/common/Rot.js","webpack://planck/./lib/Settings.js","webpack://planck/./lib/common/Transform.js","webpack://planck/./lib/util/create.js","webpack://planck/./lib/util/options.js","webpack://planck/./lib/Body.js","webpack://planck/./lib/common/Sweep.js","webpack://planck/./lib/common/Mat22.js","webpack://planck/./lib/common/Vec3.js","webpack://planck/./lib/Joint.js","webpack://planck/./lib/common/Velocity.js","webpack://planck/./lib/common/Position.js","webpack://planck/./lib/common/Mat33.js","webpack://planck/./lib/Shape.js","webpack://planck/./lib/collision/AABB.js","webpack://planck/./lib/Contact.js","webpack://planck/./lib/Manifold.js","webpack://planck/./lib/shape/PolygonShape.js","webpack://planck/./lib/collision/Distance.js","webpack://planck/./lib/shape/CircleShape.js","webpack://planck/./lib/shape/EdgeShape.js","webpack://planck/./lib/common/stats.js","webpack://planck/./lib/shape/ChainShape.js","webpack://planck/./lib/World.js","webpack://planck/./lib/collision/DynamicTree.js","webpack://planck/./lib/Fixture.js","webpack://planck/./lib/collision/TimeOfImpact.js","webpack://planck/./lib/joint/RevoluteJoint.js","webpack://planck/./lib/joint/PrismaticJoint.js","webpack://planck/./lib/index.js","webpack://planck/./lib/serializer/index.js","webpack://planck/./lib/collision/BroadPhase.js","webpack://planck/./lib/util/Pool.js","webpack://planck/./lib/Solver.js","webpack://planck/./lib/util/Timer.js","webpack://planck/./lib/shape/BoxShape.js","webpack://planck/./lib/shape/CollideCircle.js","webpack://planck/./lib/shape/CollideEdgeCircle.js","webpack://planck/./lib/shape/CollidePolygon.js","webpack://planck/./lib/shape/CollideCirclePolygone.js","webpack://planck/./lib/shape/CollideEdgePolygon.js","webpack://planck/./lib/joint/DistanceJoint.js","webpack://planck/./lib/joint/FrictionJoint.js","webpack://planck/./lib/joint/GearJoint.js","webpack://planck/./lib/joint/MotorJoint.js","webpack://planck/./lib/joint/MouseJoint.js","webpack://planck/./lib/joint/PulleyJoint.js","webpack://planck/./lib/joint/RopeJoint.js","webpack://planck/./lib/joint/WeldJoint.js","webpack://planck/./lib/joint/WheelJoint.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Vec2","Math","x","y","this","_serialize","_deserialize","data","obj","zero","neo","clone","v","toString","JSON","stringify","isValid","isFinite","assert","setZero","set","wSet","a","b","w","setCombine","setMul","add","wAdd","addCombine","addMul","wSub","subCombine","subMul","sub","mul","length","lengthOf","lengthSquared","normalize","EPSILON","invLength","sqrt","distance","dx","dy","distanceSquared","areEqual","skew","dot","cross","addCross","combine","neg","abs","mid","upper","max","lower","min","clamp","lengthSqr","invSqrt","scaleFn","translateFn","native","math","isNaN","nextPowerOfTwo","isPowerOfTwo","mod","num","random","debug","statement","err","log","Rot","angle","setAngle","setIdentity","rot","identity","sin","cos","getAngle","atan2","getXAxis","getYAxis","qr","mulRot","mulVec2","mulSub","mulT","mulTRot","mulTVec2","Settings","maxManifoldPoints","maxPolygonVertices","aabbExtension","aabbMultiplier","linearSlop","linearSlopSquared","angularSlop","PI","polygonRadius","maxSubSteps","maxTOIContacts","maxTOIIterations","maxDistnceIterations","velocityThreshold","maxLinearCorrection","maxAngularCorrection","maxTranslation","maxTranslationSquared","maxRotation","maxRotationSquared","baumgarte","toiBaugarte","timeToSleep","linearSleepTolerance","linearSleepToleranceSqr","pow","angularSleepTolerance","angularSleepToleranceSqr","Transform","position","rotation","q","xf","Array","isArray","arr","mulAll","mulFn","mulXf","px","py","mulTXf","proto","props","noop","Error","propertyIsEnumerable","input","defaults","output","assign","getOwnPropertySymbols","symbols","symbol","Body","options","Sweep","Velocity","Position","Fixture","staticBody","STATIC","kinematicBody","KINEMATIC","dynamicBody","DYNAMIC","BodyDef","type","linearVelocity","angularVelocity","linearDamping","angularDamping","fixedRotation","bullet","gravityScale","allowSleep","awake","active","userData","world","def","m_world","m_awakeFlag","m_autoSleepFlag","m_bulletFlag","m_fixedRotationFlag","m_activeFlag","m_islandFlag","m_toiFlag","m_userData","m_type","m_mass","m_invMass","m_I","m_invI","m_xf","m_sweep","setTransform","c_velocity","c_position","m_force","m_torque","m_linearVelocity","m_angularVelocity","m_linearDamping","m_angularDamping","m_gravityScale","m_sleepTime","m_jointList","m_contactList","m_fixtureList","m_prev","m_next","m_destroyed","MassData","mass","center","I","fixtures","f","push","restore","body","forEach","fixture","_addFixture","isWorldLocked","isLocked","getWorld","getNext","setUserData","getUserData","getFixtureList","getJointList","getContactList","isStatic","isDynamic","isKinematic","setStatic","setType","setDynamic","setKinematic","getType","resetMassData","forward","synchronizeFixtures","setAwake","ce","ce0","next","destroyContact","contact","broadPhase","m_broadPhase","proxyCount","m_proxyCount","touchProxy","m_proxies","proxyId","isBullet","setBullet","flag","isSleepingAllowed","setSleepingAllowed","isAwake","isActive","setActive","createProxies","destroyProxies","isFixedRotation","setFixedRotation","getTransform","synchronize","synchronizeTransform","advance","alpha","c0","a0","getPosition","setPosition","getWorldCenter","getLocalCenter","localCenter","getLinearVelocity","getLinearVelocityFromWorldPoint","worldPoint","getLinearVelocityFromLocalPoint","localPoint","getWorldPoint","setLinearVelocity","getAngularVelocity","setAngularVelocity","getLinearDamping","setLinearDamping","getAngularDamping","setAngularDamping","getGravityScale","setGravityScale","scale","getMass","getInertia","getMassData","m_density","massData","oldCenter","setLocalCenter","setMassData","applyForce","force","point","wake","applyForceToCenter","applyTorque","torque","applyLinearImpulse","impulse","applyAngularImpulse","shouldCollide","that","jn","other","joint","m_collideConnected","m_newFixture","createFixture","shape","fixdef","destroyFixture","node","edge","fixtureA","getFixtureA","fixtureB","getFixtureB","m_body","publish","getWorldVector","localVector","getLocalPoint","getLocalVector","worldVector","alpha0","beta","Mat22","ex","ey","getInverse","det","imx","solve","mx","mulMat22","mulTMat22","mx1","mx2","Vec3","z","Joint","JointEdge","prev","bodyA","bodyB","m_bodyA","m_bodyB","m_index","collideConnected","m_edgeA","m_edgeB","TYPES","context","clazz","getBodyA","getBodyB","getCollideConnected","getAnchorA","getAnchorB","getReactionForce","inv_dt","getReactionTorque","shiftOrigin","newOrigin","initVelocityConstraints","step","solveVelocityConstraints","solvePositionConstraints","Mat33","ez","solve33","solve22","a11","a12","a21","a22","getInverse22","M","getSymInverse33","a13","a23","a33","mulVec3","Shape","m_radius","_reset","getRadius","_clone","getChildCount","testPoint","rayCast","transform","childIndex","computeAABB","aabb","computeMass","density","computeDistanceProxy","proxy","AABB","lowerBound","upperBound","getCenter","getExtents","getPerimeter","lowerA","upperA","lowerB","upperB","lowerX","lowerY","upperX","upperY","combinePoints","contains","result","extend","testOverlap","d1x","d2x","d1y","d2y","diff","wD","hD","tmin","Infinity","tmax","p1","p2","absD","normal","inv_d","t1","t2","temp","maxFraction","fraction","Manifold","Distance","ContactEdge","Contact","fA","indexA","fB","indexB","evaluateFcn","m_nodeA","m_nodeB","m_fixtureA","m_fixtureB","m_indexA","m_indexB","m_evaluateFcn","m_manifold","m_toi","m_toiCount","m_friction","mixFriction","m_restitution","mixRestitution","m_tangentSpeed","m_enabledFlag","m_touchingFlag","m_filterFlag","m_bulletHitFlag","v_points","v_normal","v_normalMass","v_K","v_pointCount","v_tangentSpeed","v_friction","v_restitution","v_invMassA","v_invMassB","v_invIA","v_invIB","p_localPoints","p_localNormal","p_localPoint","p_localCenterA","p_localCenterB","p_type","p_radiusA","p_radiusB","p_pointCount","p_invMassA","p_invMassB","p_invIA","p_invIB","VelocityConstraintPoint","rA","rB","normalImpulse","tangentImpulse","normalMass","tangentMass","velocityBias","friction1","friction2","restitution1","restitution2","initConstraint","shapeA","getShape","shapeB","getBody","manifold","getManifold","pointCount","localNormal","j","cp","points","vcp","warmStarting","dtRatio","getWorldManifold","worldManifold","setEnabled","isEnabled","isTouching","getChildIndexA","getChildIndexB","flagForFiltering","setFriction","friction","getFriction","resetFriction","setRestitution","restitution","getRestitution","resetRestitution","setTangentSpeed","speed","getTangentSpeed","evaluate","xfA","xfB","update","listener","touching","wasTouching","sensorA","isSensor","sensorB","sensor","oldManifold","nmp","omp","id","beginContact","endContact","preSolve","solvePositionConstraint","_solvePositionConstraint","solvePositionConstraintTOI","toiA","toiB","toi","positionA","positionB","localCenterA","localCenterB","mA","iA","mB","iB","cA","aA","cB","aB","minSeparation","separation","e_circles","pointA","pointB","e_faceA","planePoint","clipPoint","e_faceB","C","rnA","rnB","K","P","initVelocityConstraint","velocityA","velocityB","radiusA","radiusB","vA","wA","vB","wB","kNormal","tangent","rtA","rtB","kTangent","vRel","blockSolve","vcp1","vcp2","rn1A","rn1B","rn2A","rn2B","k11","k22","k12","warmStartConstraint","storeConstraintImpulses","solveVelocityConstraint","dv","vt","lambda","maxFriction","newImpulse","vn","dv1","dv2","vn1","vn2","P1","P2","s_registers","addType","type1","type2","callback","typeA","typeB","destroy","destroyFcn","ManifoldPoint","ContactID","cf","ContactFeature","WorldManifold","separations","clipSegmentToLine","vOut","vIn","offset","vertexIndexA","numOut","distance0","distance1","interp","e_vertex","e_face","clipVertex","ClipVertex","getPointStates","state1","state2","manifold1","manifold2","PointState","removeState","persistState","addState","configurable","wm","dist","nullState","PolygonShape","vertices","_super","TYPE","m_centroid","m_vertices","m_normals","m_count","_set","map","getVertex","index","_setAsBox","ps","unique","i0","x0","hull","ih","ie","i1","i2","vs","count","area","pRef","p3","e1","e2","triangleArea","ComputeCentroid","hx","hy","pLocal","numerator","denominator","minX","minY","maxX","maxY","D","ex1","ey1","ex2","ey2","validate","e","Input","DistanceInput","Output","DistanceOutput","Proxy","DistanceProxy","Cache","SimplexCache","stats","proxyA","proxyB","transformA","transformB","useRadii","iterations","metric","cache","gjkCalls","simplex","Simplex","readCache","m_v","k_maxIters","saveA","saveB","saveCount","iter","getClosestPoint","getSearchDirection","vertex","getSupport","gjkIters","duplicate","gjkMaxIters","getWitnessPoints","writeCache","m_buffer","SimplexVertex","m_v1","m_v2","m_v3","getVertexCount","bestIndex","bestValue","getSupportVertex","print","wALocal","wBLocal","metric1","metric2","getMetric","e12","pA","pB","solve2","solve3","w1","w2","d12_2","d12_1","inv_d12","w3","w1e12","e13","w1e13","d13_1","d13_2","e23","w2e23","d23_1","d23_2","n123","d123_1","d123_2","d123_3","inv_d13","inv_d23","inv_d123","CircleShape","m_p","radius","rr","sigma","EdgeShape","v1","v2","m_vertex1","m_vertex2","m_vertex0","m_vertex3","m_hasVertex0","m_hasVertex3","vertex1","vertex2","vertex0","vertex3","hasVertex0","hasVertex3","setPrev","setNext","v3","v0","newline","string","ChainShape","loop","m_prevVertex","m_nextVertex","m_hasPrevVertex","m_hasNextVertex","m_isLoop","_createLoop","_createChain","isLoop","hasPrevVertex","hasNextVertex","prevVertex","nextVertex","_setPrevVertex","_setNextVertex","createChain","getChildEdge","World","BroadPhase","Solver","WorldDef","gravity","continuousPhysics","subStepping","velocityIterations","positionIterations","m_solver","m_contactCount","m_bodyList","m_bodyCount","m_jointCount","m_stepComplete","m_allowSleep","m_gravity","m_clearForces","m_locked","m_warmStarting","m_continuousPhysics","m_subStepping","m_blockSolve","m_velocityIterations","m_positionIterations","m_t","m_stepCount","addPair","createContact","bodies","joints","getBodyList","_addBody","createJoint","getBodyCount","getJointCount","getContactCount","setGravity","getGravity","setAllowSleeping","getAllowSleeping","setWarmStarting","getWarmStarting","setContinuousPhysics","getContinuousPhysics","setSubStepping","getSubStepping","setAutoClearForces","getAutoClearForces","clearForces","queryAABB","queryCallback","query","point1","point2","reportFixtureCallback","getProxyCount","getTreeHeight","getTreeBalance","getTreeQuality","createBody","createDynamicBody","createKinematicBody","destroyBody","je","je0","destroyJoint","f0","s_step","TimeStep","timeStep","findNewContacts","reset","updateContacts","solveWorld","solveWorldTOI","updatePairs","next_c","activeA","activeB","proxyIdA","proxyIdB","_listeners","on","off","listeners","indexOf","splice","arg1","arg2","arg3","postSolve","Pool","TreeNode","parent","child1","child2","height","DynamicTree","m_root","m_nodes","m_lastProxyId","m_pool","isLeaf","getFatAABB","allocateNode","allocate","freeNode","release","createProxy","insertLeaf","destroyProxy","removeLeaf","moveProxy","leaf","leafAABB","combinedAABB","cost1","cost2","combinedArea","cost","inheritanceCost","oldArea","sibling","oldParent","newParent","balance","grandParent","A","B","F","G","E","getHeight","getAreaRatio","rootArea","totalArea","it","iteratorPool","preorder","computeHeight","height1","height2","validateStructure","validateMetrics","getMaxBalance","maxBalance","rebuildBottomUp","nodes","minCost","iMin","jMin","aabbi","aabbj","stack","stackPool","pop","rayCastCallback","abs_v","segmentAABB","subInput","inputPool","h","Iterator","iterator","close","parents","states","FixtureDef","filterGroupIndex","filterCategoryBits","filterMaskBits","FixtureProxy","m_isSensor","m_filterGroupIndex","m_filterCategoryBits","m_filterMaskBits","m_shape","childCount","setSensor","getDensity","setDensity","getAABB","xf1","xf2","aabb1","aabb2","displacement","setFilterData","filter","groupIndex","categoryBits","maskBits","refilter","getFilterGroupIndex","setFilterGroupIndex","getFilterCategoryBits","setFilterCategoryBits","getFilterMaskBits","setFilterMaskBits","timer","Timer","now","toiCalls","state","TOIOutput","e_unknown","tMax","sweepA","sweepB","totalRadius","target","tolerance","k_maxIterations","distanceInput","distanceOutput","e_overlapped","e_touching","fcn","SeparationFunction","initialize","done","pushBackIter","s2","findMinSeparation","e_separated","s1","e_failed","rootIterCount","a1","a2","toiRootIters","toiMaxRootIters","toiIters","toiMaxIters","time","toiMaxTime","toiTime","m_proxyA","m_proxyB","m_sweepA","m_sweepB","m_localPoint","m_axis","localPointA","localPointB","localPointB1","localPointB2","localPointA1","localPointA2","compute","find","axisA","axisB","RevoluteJoint","DEFAULTS","lowerAngle","upperAngle","maxMotorTorque","motorSpeed","enableLimit","enableMotor","anchor","m_localAnchorA","localAnchorA","m_localAnchorB","localAnchorB","m_referenceAngle","referenceAngle","m_impulse","m_motorImpulse","m_lowerAngle","m_upperAngle","m_maxMotorTorque","m_motorSpeed","m_enableLimit","m_enableMotor","m_rA","m_rB","m_localCenterA","m_localCenterB","m_invMassA","m_invMassB","m_invIA","m_invIB","m_motorMass","m_limitState","_setAnchors","anchorA","anchorB","getLocalAnchorA","getLocalAnchorB","getReferenceAngle","getJointAngle","bA","getJointSpeed","isMotorEnabled","getMotorTorque","setMotorSpeed","getMotorSpeed","setMaxMotorTorque","getMaxMotorTorque","isLimitEnabled","getLowerLimit","getUpperLimit","setLimits","qA","qB","jointAngle","Cdot","oldImpulse","maxImpulse","dt","Cdot1","Cdot2","rhs","reduced","positionError","angularError","limitImpulse","PrismaticJoint","lowerTranslation","upperTranslation","maxMotorForce","axis","m_localXAxisA","localAxisA","m_localYAxisA","m_lowerTranslation","m_upperTranslation","m_maxMotorForce","m_perp","m_s1","m_s2","m_a1","m_a2","m_K","getLocalAxisA","getJointTranslation","bB","setMaxMotorForce","getMaxMotorForce","getMotorForce","k13","k23","k33","jointTranslation","LA","LB","f1","df","f2r","perp","C1","linearError","C2","translation","impulse1","internal","Serializer","Circle","Edge","Polygon","Chain","Box","CollidePolygons","DistanceJoint","FrictionJoint","GearJoint","MotorJoint","MouseJoint","PulleyJoint","RopeJoint","WeldJoint","WheelJoint","TimeOfImpact","SID","opts","rootClass","preSerialize","postSerialize","preDeserialize","postDeserialize","refTypes","toJson","json","queue","refMap","storeRef","typeName","__sid","ref","refIndex","refType","top","serialize","newValue","shift","str","fromJson","deserialize","cls","ctx","restoreRef","serializer","m_tree","m_moveBuffer","aabbA","aabbB","bufferMove","unbufferMove","addPairCallback","m_callback","m_queryProxyId","fatAABB","userDataA","userDataB","_list","_max","_createFn","_outFn","_inFn","_discardFn","discard","_createCount","_outCount","_inCount","_discardCount","size","item","common","TOIInput","inv_dt0","m_stack","m_bodies","m_contacts","m_joints","clear","addBody","addContact","addJoint","seed","solveIsland","ratio","positionSolved","contactsOkay","jointsOkay","jointOkay","postSolveIsland","minSleepTime","linTolSqr","angTolSqr","printBodies","tag","s_subStep","ContactImpulse","normalImpulses","tangentImpulses","minContact","minAlpha","collideA","collideB","backup1","backup2","backup","solveIslandTOI","subStep","Date","BoxShape","CollideCircles","circleA","circleB","distSqr","CollideEdgeCircle","edgeA","Q","u","A1","B1","B2","A2","den","chain","FindMaxSeparation","poly1","poly2","count1","count2","n1s","v1s","v2s","maxSeparation","si","sij","_maxSeparation","_bestIndex","polyA","polyB","separationA","edgeB","separationB","edge1","flip","incidentEdge","normals1","vertices2","normals2","normal1","minDot","FindIncidentEdge","vertices1","iv1","iv2","v11","v12","localTangent","frontOffset","sideOffset1","sideOffset2","clipPoints1","clipPoints2","polygonA","cLocal","normalIndex","vertexCount","normals","vertIndex1","vertIndex2","u1","u2","faceCenter","CollidePolygonCircle","CollideEdgePolygon","EPAxis","edgeAxis","polygonAxis","polygonBA","rf","sideNormal1","sideNormal2","polygonB","centroidB","front","offset1","offset0","offset2","convex1","convex2","edge0","normal0","edge2","normal2","lowerLimit","upperLimit","primaryAxis","frequencyHz","dampingRatio","m_length","m_frequencyHz","m_dampingRatio","m_gamma","m_bias","m_u","gamma","bias","setLength","getLength","setFrequency","hz","getFrequency","setDampingRatio","getDampingRatio","crAu","crBu","invMass","omega","k","vpA","vpB","maxForce","maxTorque","m_linearImpulse","m_angularImpulse","m_maxForce","m_maxTorque","m_linearMass","m_angularMass","setMaxForce","getMaxForce","setMaxTorque","getMaxTorque","joint1","joint2","coordinateA","coordinateB","m_joint1","m_joint2","m_ratio","m_type1","m_type2","m_bodyC","xfC","aC","revolute","m_localAnchorC","m_referenceAngleA","m_localAxisC","prismatic","pC","m_bodyD","xfD","aD","m_localAnchorD","m_referenceAngleB","m_localAxisD","pD","m_constant","m_lcA","m_lcB","m_lcC","m_lcD","m_mA","m_mB","m_mC","m_mD","m_iA","m_iB","m_iC","m_iD","m_JvAC","m_JvBD","m_JwA","m_JwB","m_JwC","m_JwD","getJoint1","getJoint2","setRatio","getRatio","vC","wC","vD","qC","qD","rC","rD","JvAC","JvBD","JwA","JwB","JwC","JwD","cC","cD","correctionFactor","m_linearOffset","linearOffset","m_angularOffset","angularOffset","m_correctionFactor","m_linearError","m_angularError","setCorrectionFactor","factor","getCorrectionFactor","setLinearOffset","getLinearOffset","setAngularOffset","getAngularOffset","inv_h","m_targetA","m_beta","m_C","_localAnchorB","setTarget","getTarget","velocity","MIN_PULLEY_LENGTH","PulleyJointDef","groundA","groundB","m_groundAnchorA","groundAnchorA","m_groundAnchorB","groundAnchorB","m_lengthA","lengthA","m_lengthB","lengthB","m_uA","m_uB","getGroundAnchorA","getGroundAnchorB","getLengthA","getLengthB","getCurrentLengthA","getCurrentLengthB","ruA","ruB","PA","PB","uA","uB","maxLength","m_maxLength","m_state","setMaxLength","getMaxLength","getLimitState","crA","crB","invM","impulse2","localAxis","m_springMass","m_springImpulse","m_ax","m_ay","m_sAx","m_sBx","m_sAy","m_sBy","setSpringFrequencyHz","getSpringFrequencyHz","setSpringDampingRatio","getSpringDampingRatio","ay","sAy","sBy"],"mappings":"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","file":"planck.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"planck\"] = factory();\n\telse\n\t\troot[\"planck\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 39);\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec2;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec2(x, y) {\n  if (!(this instanceof Vec2)) {\n    return new Vec2(x, y);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0;\n    this.y = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    this.x = x;\n    this.y = y;\n  }\n  _ASSERT && Vec2.assert(this);\n}\n\nVec2.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y\n  };\n};\n\nVec2._deserialize = function(data) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  return obj;\n};\n\nVec2.zero = function() {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = 0;\n  obj.y = 0;\n  return obj;\n};\n\nVec2.neo = function(x, y) {\n  var obj = Object.create(Vec2.prototype);\n  obj.x = x;\n  obj.y = y;\n  return obj;\n};\n\nVec2.clone = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(v.x, v.y);\n};\n\nVec2.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec2.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y);\n}\n\nVec2.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec2.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec2!');\n  }\n}\n\nVec2.prototype.clone = function() {\n  return Vec2.clone(this);\n}\n\n/**\n * Set this vector to all zeros.\n * \n * @returns this\n */\nVec2.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  return this;\n}\n\n/**\n * Set this vector to some specified coordinates.\n * \n * @returns this\n */\nVec2.prototype.set = function(x, y) {\n  if (typeof x === 'object') {\n    _ASSERT && Vec2.assert(x);\n    this.x = x.x;\n    this.y = x.y;\n  } else {\n    _ASSERT && Math.assert(x);\n    _ASSERT && Math.assert(y);\n    this.x = x;\n    this.y = y;\n  }\n  return this;\n}\n\n/**\n * @deprecated Use setCombine or setMul\n */\nVec2.prototype.wSet = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.setCombine(a, v, b, w);\n  } else {\n    return this.setMul(a, v);\n  }\n}\n\n/**\n * Set linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.setCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\nVec2.prototype.setMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x = x;\n  this.y = y;\n  return this;\n}\n\n/**\n * Add a vector to this vector.\n * \n * @returns this\n */\nVec2.prototype.add = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x += w.x;\n  this.y += w.y;\n  return this;\n}\n\n/**\n * @deprecated Use addCombine or addMul\n */\nVec2.prototype.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.addCombine(a, v, b, w);\n  } else {\n    return this.addMul(a, v);\n  }\n}\n\n/**\n * Add linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.addCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\nVec2.prototype.addMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x += x;\n  this.y += y;\n  return this;\n}\n\n/**\n * @deprecated Use subCombine or subMul\n */\nVec2.prototype.wSub = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return this.subCombine(a, v, b, w);\n  } else {\n    return this.subMul(a, v);\n  }}\n\n/**\n * Subtract linear combination of v and w: `a * v + b * w`\n */\nVec2.prototype.subCombine = function(a, v, b, w) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Math.assert(b);\n  _ASSERT && Vec2.assert(w);\n  var x = a * v.x + b * w.x;\n  var y = a * v.y + b * w.y;\n\n  // `this` may be `w`\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\nVec2.prototype.subMul = function(a, v) {\n  _ASSERT && Math.assert(a);\n  _ASSERT && Vec2.assert(v);\n  var x = a * v.x;\n  var y = a * v.y;\n\n  this.x -= x;\n  this.y -= y;\n  return this;\n}\n\n/**\n * Subtract a vector from this vector\n * \n * @returns this\n */\nVec2.prototype.sub = function(w) {\n  _ASSERT && Vec2.assert(w);\n  this.x -= w.x;\n  this.y -= w.y;\n  return this;\n}\n\n/**\n * Multiply this vector by a scalar.\n * \n * @returns this\n */\nVec2.prototype.mul = function(m) {\n  _ASSERT && Math.assert(m);\n  this.x *= m;\n  this.y *= m;\n  return this;\n}\n\n/**\n * Get the length of this vector (the norm).\n * \n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.prototype.length = function() {\n  return Vec2.lengthOf(this);\n}\n\n/**\n * Get the length squared.\n */\nVec2.prototype.lengthSquared = function() {\n  return Vec2.lengthSquared(this);\n}\n\n/**\n * Convert this vector into a unit vector.\n * \n * @returns old length\n */\nVec2.prototype.normalize = function() {\n  var length = this.length();\n  if (length < Math.EPSILON) {\n    return 0.0;\n  }\n  var invLength = 1.0 / length;\n  this.x *= invLength;\n  this.y *= invLength;\n  return length;\n}\n\n/**\n * Get the length of this vector (the norm).\n *\n * For performance, use this instead of lengthSquared (if possible).\n */\nVec2.lengthOf = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Math.sqrt(v.x * v.x + v.y * v.y);\n}\n\n/**\n * Get the length squared.\n */\nVec2.lengthSquared = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return v.x * v.x + v.y * v.y;\n}\n\nVec2.distance = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return Math.sqrt(dx * dx + dy * dy);\n}\n\nVec2.distanceSquared = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  var dx = v.x - w.x, dy = v.y - w.y;\n  return dx * dx + dy * dy;\n}\n\nVec2.areEqual = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v == w || typeof w === 'object' && w !== null && v.x === w.x && v.y === w.y;\n}\n\n/**\n * Get the skew vector such that dot(skew_vec, other) == cross(vec, other)\n */\nVec2.skew = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.y, v.x);\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec2.dot = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return v.x * w.x + v.y * w.y;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n * \n * Perform the cross product on a vector and a scalar. In 2D this produces a\n * vector.\n */\nVec2.cross = function(v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y, -w * v.x);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y, v * w.x);\n\n  } else {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return v.x * w.y - v.y * w.x\n  }\n}\n\n/**\n * Returns `a + (v x w)`\n */\nVec2.addCross = function(a, v, w) {\n  if (typeof w === 'number') {\n    _ASSERT && Vec2.assert(v);\n    _ASSERT && Math.assert(w);\n    return Vec2.neo(w * v.y + a.x, -w * v.x + a.y);\n\n  } else if (typeof v === 'number') {\n    _ASSERT && Math.assert(v);\n    _ASSERT && Vec2.assert(w);\n    return Vec2.neo(-v * w.y + a.x, v * w.x + a.y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nVec2.add = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x + w.x, v.y + w.y);\n}\n\n/**\n * @deprecated Use combine\n */\nVec2.wAdd = function(a, v, b, w) {\n  if (typeof b !== 'undefined' || typeof w !== 'undefined') {\n    return Vec2.combine(a, v, b, w);\n  } else {\n    return Vec2.mul(a, v);\n  }\n}\n\nVec2.combine = function(a, v, b, w) {\n  return Vec2.zero().setCombine(a, v, b, w);\n}\n\nVec2.sub = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(v.x - w.x, v.y - w.y);\n}\n\nVec2.mul = function(a, b) {\n  if (typeof a === 'object') {\n    _ASSERT && Vec2.assert(a);\n    _ASSERT && Math.assert(b);\n    return Vec2.neo(a.x * b, a.y * b);\n\n  } else if (typeof b === 'object') {\n    _ASSERT && Math.assert(a);\n    _ASSERT && Vec2.assert(b);\n    return Vec2.neo(a * b.x, a * b.y);\n  }\n}\n\nVec2.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  return this;\n}\n\nVec2.neg = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(-v.x, -v.y);\n}\n\nVec2.abs = function(v) {\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Math.abs(v.x), Math.abs(v.y));\n}\n\nVec2.mid = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo((v.x + w.x) * 0.5, (v.y + w.y) * 0.5);\n}\n\nVec2.upper = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.max(v.x, w.x), Math.max(v.y, w.y));\n}\n\nVec2.lower = function(v, w) {\n  _ASSERT && Vec2.assert(v);\n  _ASSERT && Vec2.assert(w);\n  return Vec2.neo(Math.min(v.x, w.x), Math.min(v.y, w.y));\n}\n\nVec2.prototype.clamp = function(max) {\n  var lengthSqr = this.x * this.x + this.y * this.y;\n  if (lengthSqr > max * max) {\n    var invLength = Math.invSqrt(lengthSqr);\n    this.x *= invLength * max;\n    this.y *= invLength * max;\n  }\n  return this;\n}\n\nVec2.clamp = function(v, max) {\n  v = Vec2.neo(v.x, v.y);\n  v.clamp(max);\n  return v;\n}\n\n/**\n * @experimental\n */\nVec2.scaleFn = function (x, y) {\n  return function (v) {\n    return Vec2.neo(v.x * x, v.y * y);\n  };\n}\n\n/**\n * @experimental\n */\nVec2.translateFn = function(x, y) {\n  return function (v) {\n    return Vec2.neo(v.x + x, v.y + y);\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar native = Math;\nvar math = module.exports = create(native);\n\nmath.EPSILON = 1e-9; // TODO\n\n/**\n * This function is used to ensure that a floating point number is not a NaN or\n * infinity.\n */\nmath.isFinite = function(x) {\n  return (typeof x === 'number') && isFinite(x) && !isNaN(x);\n}\n\nmath.assert = function(x) {\n  if (!_ASSERT) return;\n  if (!math.isFinite(x)) {\n    _DEBUG && common.debug(x);\n    throw new Error('Invalid Number!');\n  }\n}\n\n/**\n * TODO: This is a approximate yet fast inverse square-root.\n */\nmath.invSqrt = function(x) {\n  // TODO\n  return 1 / native.sqrt(x);\n}\n\n/**\n * Next Largest Power of 2 Given a binary integer value x, the next largest\n * power of 2 can be computed by a SWAR algorithm that recursively \"folds\" the\n * upper bits into the lower bits. This process yields a bit vector with the\n * same most significant 1 as x, but all 1's below it. Adding 1 to that value\n * yields the next largest power of 2. For a 32-bit value:\n */\nmath.nextPowerOfTwo = function(x) {\n  // TODO\n  x |= (x >> 1);\n  x |= (x >> 2);\n  x |= (x >> 4);\n  x |= (x >> 8);\n  x |= (x >> 16);\n  return x + 1;\n}\n\nmath.isPowerOfTwo = function(x) {\n  return x > 0 && (x & (x - 1)) == 0;\n}\n\nmath.mod = function(num, min, max) {\n  if (typeof min === 'undefined') {\n    max = 1, min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min, min = 0;\n  }\n  if (max > min) {\n    num = (num - min) % (max - min);\n    return num + (num < 0 ? max : min);\n  } else {\n    num = (num - max) % (min - max);\n    return num + (num <= 0 ? min : max);\n  }\n};\n\nmath.clamp = function(num, min, max) {\n  if (num < min) {\n    return min;\n  } else if (num > max) {\n    return max;\n  } else {\n    return num;\n  }\n};\n\nmath.random = function(min, max) {\n  if (typeof min === 'undefined') {\n    max = 1;\n    min = 0;\n  } else if (typeof max === 'undefined') {\n    max = min;\n    min = 0;\n  }\n  return min == max ? min : native.random() * (max - min) + min;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.debug = function() {\n  if (!_DEBUG) return;\n  console.log.apply(console, arguments);\n};\n\nexports.assert = function(statement, err, log) {\n  if (!_ASSERT) return;\n  if (statement) return;\n  log && console.log(log);\n  throw new Error(err);\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Rot;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Math = require('./Math');\n\n// TODO merge with Transform\n\n/**\n * Initialize from an angle in radians.\n */\nfunction Rot(angle) {\n  if (!(this instanceof Rot)) {\n    return new Rot(angle);\n  }\n  if (typeof angle === 'number') {\n    this.setAngle(angle);\n  } else if (typeof angle === 'object') {\n      this.set(angle);\n  } else {\n    this.setIdentity();\n  }\n}\n\nRot.neo = function(angle) {\n  var obj = Object.create(Rot.prototype);\n  obj.setAngle(angle);\n  return obj;\n};\n\nRot.clone = function(rot) {\n  _ASSERT && Rot.assert(rot);\n  var obj = Object.create(Rot.prototype);\n  obj.s = rot.s;\n  obj.c = rot.c;\n  return obj;\n};\n\nRot.identity = function() {\n  var obj = Object.create(Rot.prototype);\n  obj.s = 0.0;\n  obj.c = 1.0;\n  return obj;\n};\n\nRot.isValid = function(o) {\n  return o && Math.isFinite(o.s) && Math.isFinite(o.c);\n}\n\nRot.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Rot.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Rot!');\n  }\n}\n\n/**\n * Set to the identity rotation.\n */\nRot.prototype.setIdentity = function() {\n  this.s = 0.0;\n  this.c = 1.0;\n}\n\nRot.prototype.set = function(angle) {\n  if (typeof angle === 'object') {\n    _ASSERT && Rot.assert(angle);\n    this.s = angle.s;\n    this.c = angle.c;\n\n  } else {\n    _ASSERT && Math.assert(angle);\n    // TODO_ERIN optimize\n    this.s = Math.sin(angle);\n    this.c = Math.cos(angle);\n  }\n}\n\n/**\n * Set using an angle in radians.\n */\nRot.prototype.setAngle = function(angle) {\n  _ASSERT && Math.assert(angle);\n  // TODO_ERIN optimize\n  this.s = Math.sin(angle);\n  this.c = Math.cos(angle);\n};\n\n/**\n * Get the angle in radians.\n */\nRot.prototype.getAngle = function() {\n  return Math.atan2(this.s, this.c);\n}\n\n/**\n * Get the x-axis.\n */\nRot.prototype.getXAxis = function() {\n  return Vec2.neo(this.c, this.s);\n}\n\n/**\n * Get the u-axis.\n */\nRot.prototype.getYAxis = function() {\n  return Vec2.neo(-this.s, this.c);\n}\n\n/**\n * Multiply two rotations: q * r\n * \n * @returns Rot\n * \n * Rotate a vector\n * \n * @returns Vec2\n */\nRot.mul = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n    // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n    // s = qs * rc + qc * rs\n    // c = qc * rc - qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.s * m.c + rot.c * m.s;\n    qr.c = rot.c * m.c - rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulRot = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Rot.assert(m);\n  // [qc -qs] * [rc -rs] = [qc*rc-qs*rs -qc*rs-qs*rc]\n  // [qs qc] [rs rc] [qs*rc+qc*rs -qs*rs+qc*rc]\n  // s = qs * rc + qc * rs\n  // c = qc * rc - qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.s * m.c + rot.c * m.s;\n  qr.c = rot.c * m.c - rot.s * m.s;\n  return qr;\n}\n\nRot.mulVec2 = function(rot, m) {\n  _ASSERT && Rot.assert(rot);\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x - rot.s * m.y, rot.s * m.x + rot.c * m.y);\n}\n\nRot.mulSub = function(rot, v, w) {\n  var x = rot.c * (v.x - w.x) - rot.s * (v.y - w.y);\n  var y = rot.s * (v.x - w.x) + rot.c * (v.y - w.y);\n  return Vec2.neo(x, y);\n}\n\n/**\n * Transpose multiply two rotations: qT * r\n * \n * @returns Rot\n * \n * Inverse rotate a vector\n * \n * @returns Vec2\n */\nRot.mulT = function(rot, m) {\n  if ('c' in m && 's' in m) {\n    _ASSERT && Rot.assert(m);\n    // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n    // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n    // s = qc * rs - qs * rc\n    // c = qc * rc + qs * rs\n    var qr = Rot.identity();\n    qr.s = rot.c * m.s - rot.s * m.c;\n    qr.c = rot.c * m.c + rot.s * m.s;\n    return qr;\n\n  } else if ('x' in m && 'y' in m) {\n    _ASSERT && Vec2.assert(m);\n    return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n  }\n}\n\nRot.mulTRot = function(rot, m) {\n  _ASSERT && Rot.assert(m);\n  // [ qc qs] * [rc -rs] = [qc*rc+qs*rs -qc*rs+qs*rc]\n  // [-qs qc] [rs rc] [-qs*rc+qc*rs qs*rs+qc*rc]\n  // s = qc * rs - qs * rc\n  // c = qc * rc + qs * rs\n  var qr = Rot.identity();\n  qr.s = rot.c * m.s - rot.s * m.c;\n  qr.c = rot.c * m.c + rot.s * m.s;\n  return qr;\n}\n\nRot.mulTVec2 = function(rot, m) {\n  _ASSERT && Vec2.assert(m);\n  return Vec2.neo(rot.c * m.x + rot.s * m.y, -rot.s * m.x + rot.c * m.y);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\n// TODO merge with World options?\n\nvar Settings = exports;\n\n/**\n * Tuning constants based on meters-kilograms-seconds (MKS) units.\n */\n\n// Collision\n/**\n * The maximum number of contact points between two convex shapes. Do not change\n * this value.\n */\nSettings.maxManifoldPoints = 2;\n\n/**\n * The maximum number of vertices on a convex polygon. You cannot increase this\n * too much because BlockAllocator has a maximum object size.\n */\nSettings.maxPolygonVertices = 12;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This allows proxies to move\n * by a small amount without triggering a tree adjustment. This is in meters.\n */\nSettings.aabbExtension = 0.1;\n\n/**\n * This is used to fatten AABBs in the dynamic tree. This is used to predict the\n * future position based on the current displacement. This is a dimensionless\n * multiplier.\n */\nSettings.aabbMultiplier = 2.0;\n\n/**\n * A small length used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.linearSlop = 0.005;\nSettings.linearSlopSquared = Settings.linearSlop * Settings.linearSlop;\n\n/**\n * A small angle used as a collision and constraint tolerance. Usually it is\n * chosen to be numerically significant, but visually insignificant.\n */\nSettings.angularSlop = (2.0 / 180.0 * Math.PI);\n\n/**\n * The radius of the polygon/edge shape skin. This should not be modified.\n * Making this smaller means polygons will have an insufficient buffer for\n * continuous collision. Making it larger may create artifacts for vertex\n * collision.\n */\nSettings.polygonRadius = (2.0 * Settings.linearSlop);\n\n/**\n * Maximum number of sub-steps per contact in continuous physics simulation.\n */\nSettings.maxSubSteps = 8;\n\n// Dynamics\n\n/**\n * Maximum number of contacts to be handled to solve a TOI impact.\n */\nSettings.maxTOIContacts = 32;\n\n/**\n * Maximum iterations to solve a TOI.\n */\nSettings.maxTOIIterations = 20;\n\n/**\n * Maximum iterations to find Distance.\n */\nSettings.maxDistnceIterations = 20;\n\n/**\n * A velocity threshold for elastic collisions. Any collision with a relative\n * linear velocity below this threshold will be treated as inelastic.\n */\nSettings.velocityThreshold = 1.0;\n\n/**\n * The maximum linear position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxLinearCorrection = 0.2;\n\n/**\n * The maximum angular position correction used when solving constraints. This\n * helps to prevent overshoot.\n */\nSettings.maxAngularCorrection = (8.0 / 180.0 * Math.PI);\n\n/**\n * The maximum linear velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxTranslation = 2.0;\nSettings.maxTranslationSquared = (Settings.maxTranslation * Settings.maxTranslation);\n\n/**\n * The maximum angular velocity of a body. This limit is very large and is used\n * to prevent numerical problems. You shouldn't need to adjust this.\n */\nSettings.maxRotation = (0.5 * Math.PI)\nSettings.maxRotationSquared = (Settings.maxRotation * Settings.maxRotation)\n\n/**\n * This scale factor controls how fast overlap is resolved. Ideally this would\n * be 1 so that overlap is removed in one time step. However using values close\n * to 1 often lead to overshoot.\n */\nSettings.baumgarte = 0.2;\nSettings.toiBaugarte = 0.75;\n\n// Sleep\n\n/**\n * The time that a body must be still before it will go to sleep.\n */\nSettings.timeToSleep = 0.5;\n\n/**\n * A body cannot sleep if its linear velocity is above this tolerance.\n */\nSettings.linearSleepTolerance = 0.01;\n\nSettings.linearSleepToleranceSqr = Math.pow(Settings.linearSleepTolerance, 2);\n\n/**\n * A body cannot sleep if its angular velocity is above this tolerance.\n */\nSettings.angularSleepTolerance = (2.0 / 180.0 * Math.PI);\n\nSettings.angularSleepToleranceSqr = Math.pow(Settings.angularSleepTolerance, 2);\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Transform;\n\nvar common = require('../util/common');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n// TODO merge with Rot\n\n/**\n * A transform contains translation and rotation. It is used to represent the\n * position and orientation of rigid frames. Initialize using a position vector\n * and a rotation.\n *\n * @prop {Vec2} position\n * @prop {Rot} rotation\n */\nfunction Transform(position, rotation) {\n  if (!(this instanceof Transform)) {\n    return new Transform(position, rotation);\n  }\n  this.p = Vec2.zero();\n  this.q = Rot.identity();\n  if (typeof position !== 'undefined') {\n    this.p.set(position);\n  }\n  if (typeof rotation !== 'undefined') {\n    this.q.set(rotation);\n  }\n};\n\nTransform.clone = function(xf) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(xf.p);\n  obj.q = Rot.clone(xf.q);\n  return obj;\n};\n\nTransform.neo = function(position, rotation) {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.clone(position);\n  obj.q = Rot.clone(rotation);\n  return obj;\n};\n\nTransform.identity = function() {\n  var obj = Object.create(Transform.prototype);\n  obj.p = Vec2.zero();\n  obj.q = Rot.identity();\n  return obj;\n};\n\n/**\n * Set this to the identity transform.\n */\nTransform.prototype.setIdentity = function() {\n  this.p.setZero();\n  this.q.setIdentity();\n}\n\n/**\n * Set this based on the position and angle.\n */\nTransform.prototype.set = function(a, b) {\n  if (typeof b === 'undefined') {\n    this.p.set(a.p);\n    this.q.set(a.q);\n  } else {\n    this.p.set(a);\n    this.q.set(b);\n  }\n}\n\nTransform.isValid = function(o) {\n  return o && Vec2.isValid(o.p) && Rot.isValid(o.q);\n}\n\nTransform.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Transform.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Transform!');\n  }\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mul = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if (Array.isArray(b)) {\n    var arr = [];\n    for (var i = 0; i < b.length; i++) {\n      arr[i] = Transform.mul(a, b[i]);\n    }\n    return arr;\n\n  } else if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n    var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n    // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n    var xf = Transform.identity();\n    xf.q = Rot.mulRot(a.q, b.q);\n    xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n    return xf;\n  }\n}\n\n/**\n * @deprecated Use mulFn instead.\n */\nTransform.mulAll = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  var arr = [];\n  for (var i = 0; i < b.length; i++) {\n    arr[i] = Transform.mul(a, b[i]);\n  }\n  return arr;\n}\n\n/**\n * @experimental\n */\nTransform.mulFn = function(a) {\n  _ASSERT && Transform.assert(a);\n  return function(b) {\n    return Transform.mul(a, b);\n  };\n}\n\nTransform.mulVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = (a.q.c * b.x - a.q.s * b.y) + a.p.x;\n  var y = (a.q.s * b.x + a.q.c * b.y) + a.p.y;\n  return Vec2.neo(x, y);\n}\n\nTransform.mulXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q.Rot(B.q.Rot(v1) + B.p) + A.p\n  // = (A.q * B.q).Rot(v1) + A.q.Rot(B.p) + A.p\n  var xf = Transform.identity();\n  xf.q = Rot.mulRot(a.q, b.q);\n  xf.p = Vec2.add(Rot.mulVec2(a.q, b.p), a.p);\n  return xf;\n}\n\n/**\n * @param {Transform} a\n * @param {Vec2} b\n * @returns {Vec2}\n *\n * @param {Transform} a\n * @param {Transform} b\n * @returns {Transform}\n */\nTransform.mulT = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  if ('x' in b && 'y' in b) {\n    _ASSERT && Vec2.assert(b)\n    var px = b.x - a.p.x;\n    var py = b.y - a.p.y;\n    var x = (a.q.c * px + a.q.s * py);\n    var y = (-a.q.s * px + a.q.c * py);\n    return Vec2.neo(x, y);\n\n  } else if ('p' in b && 'q' in b) {\n    _ASSERT && Transform.assert(b);\n    // v2 = A.q' * (B.q * v1 + B.p - A.p)\n    // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n    var xf = Transform.identity();\n    xf.q.set(Rot.mulTRot(a.q, b.q));\n    xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n    return xf;\n  }\n}\n\nTransform.mulTVec2 = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Vec2.assert(b)\n  var px = b.x - a.p.x;\n  var py = b.y - a.p.y;\n  var x = (a.q.c * px + a.q.s * py);\n  var y = (-a.q.s * px + a.q.c * py);\n  return Vec2.neo(x, y);\n}\n\nTransform.mulTXf = function(a, b) {\n  _ASSERT && Transform.assert(a);\n  _ASSERT && Transform.assert(b);\n  // v2 = A.q' * (B.q * v1 + B.p - A.p)\n  // = A.q' * B.q * v1 + A.q' * (B.p - A.p)\n  var xf = Transform.identity();\n  xf.q.set(Rot.mulTRot(a.q, b.q));\n  xf.p.set(Rot.mulTVec2(a.q, Vec2.sub(b.p, a.p)));\n  return xf;\n}\n","if (typeof Object.create == 'function') {\n  module.exports = function(proto, props) {\n    return Object.create.call(Object, proto, props);\n  };\n} else {\n  module.exports = function(proto, props) {\n    if (props)\n      throw Error('Second argument is not supported!');\n    if (typeof proto !== 'object' || proto === null)\n      throw Error('Invalid prototype!');\n    noop.prototype = proto;\n    return new noop;\n  };\n  function noop() {\n  }\n}\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function(input, defaults) {\n  if (input === null || typeof input === 'undefined') {\n    input = {};\n  }\n\n  var output = Object.assign({}, input);\n\n  for ( var key in defaults) {\n    if (defaults.hasOwnProperty(key) && typeof input[key] === 'undefined') {\n      output[key] = defaults[key];\n    }\n  }\n\n  if (typeof Object.getOwnPropertySymbols === 'function') {\n    var symbols = Object.getOwnPropertySymbols(defaults);\n    for (var i = 0; i < symbols.length; i++) {\n      var symbol = symbols[i];\n      if (defaults.propertyIsEnumerable(symbol) && typeof input[key] === 'undefined') {\n        output[symbol] = defaults[symbol];\n      }\n    }\n  }\n\n  return output;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Body;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Vec2 = require('./common/Vec2');\nvar Rot = require('./common/Rot');\nvar Math = require('./common/Math');\nvar Sweep = require('./common/Sweep');\nvar Transform = require('./common/Transform');\nvar Velocity = require('./common/Velocity');\nvar Position = require('./common/Position');\n\nvar Fixture = require('./Fixture');\nvar Shape = require('./Shape');\n\nvar staticBody = Body.STATIC = 'static';\nvar kinematicBody = Body.KINEMATIC = 'kinematic';\nvar dynamicBody = Body.DYNAMIC = 'dynamic';\n\n/**\n * @typedef {Object} BodyDef\n *\n * @prop type Body types are static, kinematic, or dynamic. Note: if a dynamic\n *       body would have zero mass, the mass is set to one.\n *\n * @prop position The world position of the body. Avoid creating bodies at the\n *       origin since this can lead to many overlapping shapes.\n *\n * @prop angle The world angle of the body in radians.\n *\n * @prop linearVelocity The linear velocity of the body's origin in world\n *       co-ordinates.\n *\n * @prop angularVelocity\n *\n * @prop linearDamping Linear damping is use to reduce the linear velocity. The\n *       damping parameter can be larger than 1.0 but the damping effect becomes\n *       sensitive to the time step when the damping parameter is large.\n *\n * @prop angularDamping Angular damping is use to reduce the angular velocity.\n *       The damping parameter can be larger than 1.0 but the damping effect\n *       becomes sensitive to the time step when the damping parameter is large.\n *\n * @prop fixedRotation Should this body be prevented from rotating? Useful for\n *       characters.\n *\n * @prop bullet Is this a fast moving body that should be prevented from\n *       tunneling through other moving bodies? Note that all bodies are\n *       prevented from tunneling through kinematic and static bodies. This\n *       setting is only considered on dynamic bodies. Warning: You should use\n *       this flag sparingly since it increases processing time.\n *\n * @prop active Does this body start out active?\n *\n * @prop awake Is this body initially awake or sleeping?\n *\n * @prop allowSleep Set this flag to false if this body should never fall\n *       asleep. Note that this increases CPU usage.\n */\nvar BodyDef = {\n  type : staticBody,\n  position : Vec2.zero(),\n  angle : 0.0,\n\n  linearVelocity : Vec2.zero(),\n  angularVelocity : 0.0,\n\n  linearDamping : 0.0,\n  angularDamping : 0.0,\n\n  fixedRotation : false,\n  bullet : false,\n  gravityScale : 1.0,\n\n  allowSleep : true,\n  awake : true,\n  active : true,\n\n  userData : null\n};\n\n/**\n * @class\n * \n * A rigid body composed of one or more fixtures.\n * \n * @param {World} world\n * @param {BodyDef} def\n */\nfunction Body(world, def) {\n\n  def = options(def, BodyDef);\n\n  _ASSERT && common.assert(Vec2.isValid(def.position));\n  _ASSERT && common.assert(Vec2.isValid(def.linearVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angle));\n  _ASSERT && common.assert(Math.isFinite(def.angularVelocity));\n  _ASSERT && common.assert(Math.isFinite(def.angularDamping) && def.angularDamping >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.linearDamping) && def.linearDamping >= 0.0);\n\n  this.m_world = world;\n\n  this.m_awakeFlag = def.awake;\n  this.m_autoSleepFlag = def.allowSleep;\n  this.m_bulletFlag = def.bullet;\n  this.m_fixedRotationFlag = def.fixedRotation;\n  this.m_activeFlag = def.active;\n\n  this.m_islandFlag = false;\n  this.m_toiFlag = false;\n\n  this.m_userData = def.userData;\n  this.m_type = def.type;\n\n  if (this.m_type == dynamicBody) {\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  } else {\n    this.m_mass = 0.0;\n    this.m_invMass = 0.0;\n  }\n\n  // Rotational inertia about the center of mass.\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  // the body origin transform\n  this.m_xf = Transform.identity();\n  this.m_xf.p = Vec2.clone(def.position);\n  this.m_xf.q.setAngle(def.angle);\n\n  // the swept motion for CCD\n  this.m_sweep = new Sweep();\n  this.m_sweep.setTransform(this.m_xf);\n\n  // position and velocity correction\n  this.c_velocity = new Velocity();\n  this.c_position = new Position();\n\n  this.m_force = Vec2.zero();\n  this.m_torque = 0.0;\n\n  this.m_linearVelocity = Vec2.clone(def.linearVelocity);\n  this.m_angularVelocity = def.angularVelocity;\n\n  this.m_linearDamping = def.linearDamping;\n  this.m_angularDamping = def.angularDamping;\n  this.m_gravityScale = def.gravityScale;\n\n  this.m_sleepTime = 0.0;\n\n  this.m_jointList = null;\n  this.m_contactList = null;\n  this.m_fixtureList = null;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_destroyed = false;\n}\n\nBody.prototype._serialize = function() {\n  var fixtures = [];\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    fixtures.push(f);\n  }\n  return {\n    type: this.m_type,\n    bullet: this.m_bulletFlag,\n    position: this.m_xf.p,\n    angle: this.m_xf.q.getAngle(),\n    linearVelocity: this.m_linearVelocity,\n    angularVelocity: this.m_angularVelocity,\n    fixtures: fixtures,\n  };\n};\n\nBody._deserialize = function(data, world, restore) {\n  var body = new Body(world, data);\n\n  data.fixtures.forEach(function(data) {\n    var fixture = restore(Fixture, data, body);\n    body._addFixture(fixture);\n  });\n\n  return body;\n};\n\nBody.prototype.isWorldLocked = function() {\n  return this.m_world && this.m_world.isLocked() ? true : false;\n};\n\nBody.prototype.getWorld = function() {\n  return this.m_world;\n};\n\nBody.prototype.getNext = function() {\n  return this.m_next;\n};\n\nBody.prototype.setUserData = function(data) {\n  this.m_userData = data;\n};\n\nBody.prototype.getUserData = function() {\n  return this.m_userData;\n};\n\nBody.prototype.getFixtureList = function() {\n  return this.m_fixtureList;\n};\n\nBody.prototype.getJointList = function() {\n  return this.m_jointList;\n};\n\n/**\n * Warning: this list changes during the time step and you may miss some\n * collisions if you don't use ContactListener.\n */\nBody.prototype.getContactList = function() {\n  return this.m_contactList;\n};\n\nBody.prototype.isStatic = function() {\n  return this.m_type == staticBody;\n};\n\nBody.prototype.isDynamic = function() {\n  return this.m_type == dynamicBody;\n};\n\nBody.prototype.isKinematic = function() {\n  return this.m_type == kinematicBody;\n};\n\n/**\n * This will alter the mass and velocity.\n */\nBody.prototype.setStatic = function() {\n  this.setType(staticBody);\n  return this;\n};\n\nBody.prototype.setDynamic = function() {\n  this.setType(dynamicBody);\n  return this;\n};\n\nBody.prototype.setKinematic = function() {\n  this.setType(kinematicBody);\n  return this;\n};\n\n/**\n * @private\n */\nBody.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * \n * @private\n */\nBody.prototype.setType = function(type) {\n  _ASSERT && common.assert(type === staticBody || type === kinematicBody || type === dynamicBody);\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type == type) {\n    return;\n  }\n\n  this.m_type = type;\n\n  this.resetMassData();\n\n  if (this.m_type == staticBody) {\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_sweep.forward();\n    this.synchronizeFixtures();\n  }\n\n  this.setAwake(true);\n\n  this.m_force.setZero();\n  this.m_torque = 0.0;\n\n  // Delete the attached contacts.\n  var ce = this.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n    this.m_world.destroyContact(ce0.contact);\n  }\n  this.m_contactList = null;\n\n  // Touch the proxies so that new contacts will be created (when appropriate)\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    var proxyCount = f.m_proxyCount;\n    for (var i = 0; i < proxyCount; ++i) {\n      broadPhase.touchProxy(f.m_proxies[i].proxyId);\n    }\n  }\n};\n\nBody.prototype.isBullet = function() {\n  return this.m_bulletFlag;\n};\n\n/**\n * Should this body be treated like a bullet for continuous collision detection?\n */\nBody.prototype.setBullet = function(flag) {\n  this.m_bulletFlag = !!flag;\n};\n\nBody.prototype.isSleepingAllowed = function() {\n  return this.m_autoSleepFlag;\n};\n\nBody.prototype.setSleepingAllowed = function(flag) {\n  this.m_autoSleepFlag = !!flag;\n  if (this.m_autoSleepFlag == false) {\n    this.setAwake(true);\n  }\n};\n\nBody.prototype.isAwake = function() {\n  return this.m_awakeFlag;\n};\n\n/**\n * Set the sleep state of the body. A sleeping body has very low CPU cost.\n * \n * @param flag Set to true to wake the body, false to put it to sleep.\n */\nBody.prototype.setAwake = function(flag) {\n  if (flag) {\n    if (this.m_awakeFlag == false) {\n      this.m_awakeFlag = true;\n      this.m_sleepTime = 0.0;\n    }\n  } else {\n    this.m_awakeFlag = false;\n    this.m_sleepTime = 0.0;\n    this.m_linearVelocity.setZero();\n    this.m_angularVelocity = 0.0;\n    this.m_force.setZero();\n    this.m_torque = 0.0;\n  }\n};\n\nBody.prototype.isActive = function() {\n  return this.m_activeFlag;\n};\n\n/**\n * Set the active state of the body. An inactive body is not simulated and\n * cannot be collided with or woken up. If you pass a flag of true, all fixtures\n * will be added to the broad-phase. If you pass a flag of false, all fixtures\n * will be removed from the broad-phase and all contacts will be destroyed.\n * Fixtures and joints are otherwise unaffected.\n * \n * You may continue to create/destroy fixtures and joints on inactive bodies.\n * Fixtures on an inactive body are implicitly inactive and will not participate\n * in collisions, ray-casts, or queries. Joints connected to an inactive body\n * are implicitly inactive. An inactive body is still owned by a World object\n * and remains\n */\nBody.prototype.setActive = function(flag) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (flag == this.m_activeFlag) {\n    return;\n  }\n\n  this.m_activeFlag = !!flag;\n\n  if (this.m_activeFlag) {\n    // Create all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.createProxies(broadPhase, this.m_xf);\n    }\n    // Contacts are created the next time step.\n\n  } else {\n    // Destroy all proxies.\n    var broadPhase = this.m_world.m_broadPhase;\n    for (var f = this.m_fixtureList; f; f = f.m_next) {\n      f.destroyProxies(broadPhase);\n    }\n\n    // Destroy the attached contacts.\n    var ce = this.m_contactList;\n    while (ce) {\n      var ce0 = ce;\n      ce = ce.next;\n      this.m_world.destroyContact(ce0.contact);\n    }\n    this.m_contactList = null;\n  }\n};\n\nBody.prototype.isFixedRotation = function() {\n  return this.m_fixedRotationFlag;\n};\n\n/**\n * Set this body to have fixed rotation. This causes the mass to be reset.\n */\nBody.prototype.setFixedRotation = function(flag) {\n  if (this.m_fixedRotationFlag == flag) {\n    return;\n  }\n\n  this.m_fixedRotationFlag = !!flag;\n\n  this.m_angularVelocity = 0.0;\n\n  this.resetMassData();\n};\n\n/**\n * Get the world transform for the body's origin.\n */\nBody.prototype.getTransform = function() {\n  return this.m_xf;\n};\n\n/**\n * Set the position of the body's origin and rotation. Manipulating a body's\n * transform may cause non-physical behavior. Note: contacts are updated on the\n * next call to World.step.\n * \n * @param position The world position of the body's local origin.\n * @param angle The world rotation in radians.\n */\nBody.prototype.setTransform = function(position, angle) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  this.m_xf.set(position, angle);\n  this.m_sweep.setTransform(this.m_xf);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, this.m_xf, this.m_xf);\n  }\n};\n\nBody.prototype.synchronizeTransform = function() {\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Update fixtures in broad-phase.\n */\nBody.prototype.synchronizeFixtures = function() {\n  var xf = Transform.identity();\n\n  this.m_sweep.getTransform(xf, 0);\n\n  var broadPhase = this.m_world.m_broadPhase;\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    f.synchronize(broadPhase, xf, this.m_xf);\n  }\n};\n\n/**\n * Used in TOI.\n */\nBody.prototype.advance = function(alpha) {\n  // Advance to the new safe time. This doesn't sync the broad-phase.\n  this.m_sweep.advance(alpha);\n  this.m_sweep.c.set(this.m_sweep.c0);\n  this.m_sweep.a = this.m_sweep.a0;\n  this.m_sweep.getTransform(this.m_xf, 1);\n};\n\n/**\n * Get the world position for the body's origin.\n */\nBody.prototype.getPosition = function() {\n  return this.m_xf.p;\n};\n\nBody.prototype.setPosition = function(p) {\n  this.setTransform(p, this.m_sweep.a);\n};\n\n/**\n * Get the current world rotation angle in radians.\n */\nBody.prototype.getAngle = function() {\n  return this.m_sweep.a;\n};\n\nBody.prototype.setAngle = function(angle) {\n  this.setTransform(this.m_xf.p, angle);\n};\n\n/**\n * Get the world position of the center of mass.\n */\nBody.prototype.getWorldCenter = function() {\n  return this.m_sweep.c;\n};\n\n/**\n * Get the local position of the center of mass.\n */\nBody.prototype.getLocalCenter = function() {\n  return this.m_sweep.localCenter;\n};\n\n/**\n * Get the linear velocity of the center of mass.\n * \n * @return the linear velocity of the center of mass.\n */\nBody.prototype.getLinearVelocity = function() {\n  return this.m_linearVelocity;\n};\n\n/**\n * Get the world linear velocity of a world point attached to this body.\n * \n * @param worldPoint A point in world coordinates.\n */\nBody.prototype.getLinearVelocityFromWorldPoint = function(worldPoint) {\n  var localCenter = Vec2.sub(worldPoint, this.m_sweep.c);\n  return Vec2.add(this.m_linearVelocity, Vec2.cross(this.m_angularVelocity,\n      localCenter));\n};\n\n/**\n * Get the world velocity of a local point.\n * \n * @param localPoint A point in local coordinates.\n */\nBody.prototype.getLinearVelocityFromLocalPoint = function(localPoint) {\n  return this.getLinearVelocityFromWorldPoint(this.getWorldPoint(localPoint));\n};\n\n/**\n * Set the linear velocity of the center of mass.\n * \n * @param v The new linear velocity of the center of mass.\n */\nBody.prototype.setLinearVelocity = function(v) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (Vec2.dot(v, v) > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_linearVelocity.set(v);\n};\n\n/**\n * Get the angular velocity.\n * \n * @returns the angular velocity in radians/second.\n */\nBody.prototype.getAngularVelocity = function() {\n  return this.m_angularVelocity;\n};\n\n/**\n * Set the angular velocity.\n * \n * @param omega The new angular velocity in radians/second.\n */\nBody.prototype.setAngularVelocity = function(w) {\n  if (this.m_type == staticBody) {\n    return;\n  }\n  if (w * w > 0.0) {\n    this.setAwake(true);\n  }\n  this.m_angularVelocity = w;\n};\n\nBody.prototype.getLinearDamping = function() {\n  return this.m_linearDamping;\n};\n\nBody.prototype.setLinearDamping = function(linearDamping) {\n  this.m_linearDamping = linearDamping;\n};\n\nBody.prototype.getAngularDamping = function() {\n  return this.m_angularDamping;\n};\n\nBody.prototype.setAngularDamping = function(angularDamping) {\n  this.m_angularDamping = angularDamping;\n};\n\nBody.prototype.getGravityScale = function() {\n  return this.m_gravityScale;\n};\n\n/**\n * Scale the gravity applied to this body.\n */\nBody.prototype.setGravityScale = function(scale) {\n  this.m_gravityScale = scale;\n};\n\n/**\n * Get the total mass of the body.\n * \n * @returns The mass, usually in kilograms (kg).\n */\nBody.prototype.getMass = function() {\n  return this.m_mass;\n};\n\n/**\n * Get the rotational inertia of the body about the local origin.\n * \n * @return the rotational inertia, usually in kg-m^2.\n */\nBody.prototype.getInertia = function() {\n  return this.m_I + this.m_mass\n      * Vec2.dot(this.m_sweep.localCenter, this.m_sweep.localCenter);\n};\n\n/**\n * @typedef {Object} MassData This holds the mass data computed for a shape.\n * \n * @prop mass The mass of the shape, usually in kilograms.\n * @prop center The position of the shape's centroid relative to the shape's\n *       origin.\n * @prop I The rotational inertia of the shape about the local origin.\n */\nfunction MassData() {\n  this.mass = 0;\n  this.center = Vec2.zero();\n  this.I = 0;\n};\n\n/**\n * Copy the mass data of the body to data.\n */\nBody.prototype.getMassData = function(data) {\n  data.mass = this.m_mass;\n  data.I = this.getInertia();\n  data.center.set(this.m_sweep.localCenter);\n};\n\n/**\n * This resets the mass properties to the sum of the mass properties of the\n * fixtures. This normally does not need to be called unless you called\n * SetMassData to override the mass and you later want to reset the mass.\n */\nBody.prototype.resetMassData = function() {\n  // Compute mass data from shapes. Each shape has its own density.\n  this.m_mass = 0.0;\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n  this.m_sweep.localCenter.setZero();\n\n  // Static and kinematic bodies have zero mass.\n  if (this.isStatic() || this.isKinematic()) {\n    this.m_sweep.c0.set(this.m_xf.p);\n    this.m_sweep.c.set(this.m_xf.p);\n    this.m_sweep.a0 = this.m_sweep.a;\n    return;\n  }\n\n  _ASSERT && common.assert(this.isDynamic());\n\n  // Accumulate mass over all fixtures.\n  var localCenter = Vec2.zero();\n  for (var f = this.m_fixtureList; f; f = f.m_next) {\n    if (f.m_density == 0.0) {\n      continue;\n    }\n\n    var massData = new MassData();\n    f.getMassData(massData);\n    this.m_mass += massData.mass;\n    localCenter.addMul(massData.mass, massData.center);\n    this.m_I += massData.I;\n  }\n\n  // Compute center of mass.\n  if (this.m_mass > 0.0) {\n    this.m_invMass = 1.0 / this.m_mass;\n    localCenter.mul(this.m_invMass);\n\n  } else {\n    // Force all dynamic bodies to have a positive mass.\n    this.m_mass = 1.0;\n    this.m_invMass = 1.0;\n  }\n\n  if (this.m_I > 0.0 && this.m_fixedRotationFlag == false) {\n    // Center the inertia about the center of mass.\n    this.m_I -= this.m_mass * Vec2.dot(localCenter, localCenter);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n\n  } else {\n    this.m_I = 0.0;\n    this.m_invI = 0.0;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(localCenter, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Set the mass properties to override the mass properties of the fixtures. Note\n * that this changes the center of mass position. Note that creating or\n * destroying fixtures can also alter the mass. This function has no effect if\n * the body isn't dynamic.\n * \n * @param massData The mass properties.\n */\nBody.prototype.setMassData = function(massData) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  this.m_invMass = 0.0;\n  this.m_I = 0.0;\n  this.m_invI = 0.0;\n\n  this.m_mass = massData.mass;\n  if (this.m_mass <= 0.0) {\n    this.m_mass = 1.0;\n  }\n\n  this.m_invMass = 1.0 / this.m_mass;\n\n  if (massData.I > 0.0 && this.m_fixedRotationFlag == false) {\n    this.m_I = massData.I - this.m_mass\n        * Vec2.dot(massData.center, massData.center);\n    _ASSERT && common.assert(this.m_I > 0.0);\n    this.m_invI = 1.0 / this.m_I;\n  }\n\n  // Move center of mass.\n  var oldCenter = Vec2.clone(this.m_sweep.c);\n  this.m_sweep.setLocalCenter(massData.center, this.m_xf);\n\n  // Update center of mass velocity.\n  this.m_linearVelocity.add(Vec2.cross(this.m_angularVelocity, Vec2.sub(\n      this.m_sweep.c, oldCenter)));\n};\n\n/**\n * Apply a force at a world point. If the force is not applied at the center of\n * mass, it will generate a torque and affect the angular velocity. This wakes\n * up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyForce = function(force, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping.\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n    this.m_torque += Vec2.cross(Vec2.sub(point, this.m_sweep.c), force);\n  }\n};\n\n/**\n * Apply a force to the center of mass. This wakes up the body.\n * \n * @param force The world force vector, usually in Newtons (N).\n * @param wake Also wake up the body\n */\nBody.prototype.applyForceToCenter = function(force, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_force.add(force);\n  }\n};\n\n/**\n * Apply a torque. This affects the angular velocity without affecting the\n * linear velocity of the center of mass. This wakes up the body.\n * \n * @param torque About the z-axis (out of the screen), usually in N-m.\n * @param wake Also wake up the body\n */\nBody.prototype.applyTorque = function(torque, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate a force if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_torque += torque;\n  }\n};\n\n/**\n * Apply an impulse at a point. This immediately modifies the velocity. It also\n * modifies the angular velocity if the point of application is not at the\n * center of mass. This wakes up the body.\n * \n * @param impulse The world impulse vector, usually in N-seconds or kg-m/s.\n * @param point The world position of the point of application.\n * @param wake Also wake up the body\n */\nBody.prototype.applyLinearImpulse = function(impulse, point, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_linearVelocity.addMul(this.m_invMass, impulse);\n    this.m_angularVelocity += this.m_invI * Vec2.cross(Vec2.sub(point, this.m_sweep.c), impulse);\n  }\n};\n\n/**\n * Apply an angular impulse.\n * \n * @param impulse The angular impulse in units of kg*m*m/s\n * @param wake Also wake up the body\n */\nBody.prototype.applyAngularImpulse = function(impulse, wake) {\n  if (this.m_type != dynamicBody) {\n    return;\n  }\n\n  if (wake && this.m_awakeFlag == false) {\n    this.setAwake(true);\n  }\n  // Don't accumulate velocity if the body is sleeping\n  if (this.m_awakeFlag) {\n    this.m_angularVelocity += this.m_invI * impulse;\n  }\n};\n\n/**\n * This is used to prevent connected bodies (by joints) from colliding,\n * depending on the joint's collideConnected flag.\n */\nBody.prototype.shouldCollide = function(that) {\n  // At least one body should be dynamic.\n  if (this.m_type != dynamicBody && that.m_type != dynamicBody) {\n    return false;\n  }\n  // Does a joint prevent collision?\n  for (var jn = this.m_jointList; jn; jn = jn.next) {\n    if (jn.other == that) {\n      if (jn.joint.m_collideConnected == false) {\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * @internal Used for deserialize.\n */\nBody.prototype._addFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.createProxies(broadPhase, this.m_xf);\n  }\n\n  fixture.m_next = this.m_fixtureList;\n  this.m_fixtureList = fixture;\n\n  // Adjust mass properties if needed.\n  if (fixture.m_density > 0.0) {\n    this.resetMassData();\n  }\n\n  // Let the world know we have a new fixture. This will cause new contacts\n  // to be created at the beginning of the next time step.\n  this.m_world.m_newFixture = true;\n\n  return fixture\n};\n\n/**\n * Creates a fixture and attach it to this body.\n * \n * If the density is non-zero, this function automatically updates the mass of\n * the body.\n * \n * Contacts are not created until the next time step.\n * \n * Warning: This function is locked during callbacks.\n\n * @param {Shape|FixtureDef} shape Shape or fixture definition.\n * @param {FixtureDef|number} fixdef Fixture definition or just density.\n */\nBody.prototype.createFixture = function(shape, fixdef) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return null;\n  }\n\n  var fixture = new Fixture(this, shape, fixdef);\n  this._addFixture(fixture);\n  return fixture\n};\n\n/**\n * Destroy a fixture. This removes the fixture from the broad-phase and destroys\n * all contacts associated with this fixture. This will automatically adjust the\n * mass of the body if the body is dynamic and the fixture has positive density.\n * All fixtures attached to a body are implicitly destroyed when the body is\n * destroyed.\n * \n * Warning: This function is locked during callbacks.\n * \n * @param fixture The fixture to be removed.\n */\nBody.prototype.destroyFixture = function(fixture) {\n  _ASSERT && common.assert(this.isWorldLocked() == false);\n\n  if (this.isWorldLocked() == true) {\n    return;\n  }\n\n  _ASSERT && common.assert(fixture.m_body == this);\n\n  // Remove the fixture from this body's singly linked list.\n  var found = false;\n  if (this.m_fixtureList === fixture) {\n    this.m_fixtureList = fixture.m_next;\n    found = true;\n\n  } else {\n    var node = this.m_fixtureList;\n    while (node != null) {\n      if (node.m_next === fixture) {\n        node.m_next = fixture.m_next;\n        found = true;\n        break;\n      }\n      node = node.m_next;\n    }\n  }\n\n  // You tried to remove a shape that is not attached to this body.\n  _ASSERT && common.assert(found);\n\n  // Destroy any contacts associated with the fixture.\n  var edge = this.m_contactList;\n  while (edge) {\n    var c = edge.contact;\n    edge = edge.next;\n\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n\n    if (fixture == fixtureA || fixture == fixtureB) {\n      // This destroys the contact and removes it from\n      // this body's contact list.\n      this.m_world.destroyContact(c);\n    }\n  }\n\n  if (this.m_activeFlag) {\n    var broadPhase = this.m_world.m_broadPhase;\n    fixture.destroyProxies(broadPhase);\n  }\n\n  fixture.m_body = null;\n  fixture.m_next = null;\n\n  this.m_world.publish('remove-fixture', fixture);\n\n  // Reset the mass data.\n  this.resetMassData();\n};\n\n/**\n * Get the corresponding world point of a local point.\n */\nBody.prototype.getWorldPoint = function(localPoint) {\n  return Transform.mulVec2(this.m_xf, localPoint);\n};\n\n/**\n * Get the corresponding world vector of a local vector.\n */\nBody.prototype.getWorldVector = function(localVector) {\n  return Rot.mulVec2(this.m_xf.q, localVector);\n};\n\n/**\n * Gets the corresponding local point of a world point.\n */\nBody.prototype.getLocalPoint = function(worldPoint) {\n  return Transform.mulTVec2(this.m_xf, worldPoint);\n};\n\n/**\n * \n * Gets the corresponding local vector of a world vector.\n */\nBody.prototype.getLocalVector = function(worldVector) {\n  return Rot.mulTVec2(this.m_xf.q, worldVector);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Sweep;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\nvar Transform = require('./Transform');\n\n/**\n * This describes the motion of a body/shape for TOI computation. Shapes are\n * defined with respect to the body origin, which may not coincide with the\n * center of mass. However, to support dynamics we must interpolate the center\n * of mass position.\n * \n * @prop {Vec2} localCenter Local center of mass position\n * @prop {Vec2} c World center position\n * @prop {float} a World angle\n * @prop {float} alpha0 Fraction of the current time step in the range [0,1], c0\n *       and a0 are c and a at alpha0.\n */\nfunction Sweep(c, a) {\n  _ASSERT && common.assert(typeof c === 'undefined');\n  _ASSERT && common.assert(typeof a === 'undefined');\n  this.localCenter = Vec2.zero();\n  this.c = Vec2.zero();\n  this.a = 0;\n  this.alpha0 = 0;\n  this.c0 = Vec2.zero();\n  this.a0 = 0;\n}\n\nSweep.prototype.setTransform = function(xf) {\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n\n  this.a = xf.q.getAngle();\n  this.a0 = xf.q.getAngle();\n};\n\nSweep.prototype.setLocalCenter = function(localCenter, xf) {\n  this.localCenter.set(localCenter);\n\n  var c = Transform.mulVec2(xf, this.localCenter);\n  this.c.set(c);\n  this.c0.set(c);\n};\n\n/**\n * Get the interpolated transform at a specific time.\n * \n * @param xf\n * @param beta A factor in [0,1], where 0 indicates alpha0\n */\nSweep.prototype.getTransform = function(xf, beta) {\n  beta = typeof beta === 'undefined' ? 0 : beta;\n  xf.q.setAngle((1.0 - beta) * this.a0 + beta * this.a);\n  xf.p.setCombine((1.0 - beta), this.c0, beta, this.c);\n\n  // shift to origin\n  xf.p.sub(Rot.mulVec2(xf.q, this.localCenter));\n};\n\n/**\n * Advance the sweep forward, yielding a new initial state.\n * \n * @param {float} alpha The new initial time\n */\nSweep.prototype.advance = function(alpha) {\n  _ASSERT && common.assert(this.alpha0 < 1.0);\n  var beta = (alpha - this.alpha0) / (1.0 - this.alpha0);\n  this.c0.setCombine(beta, this.c, 1 - beta, this.c0);\n  this.a0 = beta * this.a + (1 - beta) * this.a0;\n  this.alpha0 = alpha;\n};\n\nSweep.prototype.forward = function() {\n  this.a0 = this.a;\n  this.c0.set(this.c);\n};\n\n/**\n * normalize the angles in radians to be between -pi and pi.\n */\nSweep.prototype.normalize = function() {\n  var a0 = Math.mod(this.a0, -Math.PI, +Math.PI);\n  this.a -= this.a0 - a0;\n  this.a0 = a0;\n};\n\nSweep.prototype.clone = function() {\n  var clone = new Sweep();\n  clone.localCenter.set(this.localCenter);\n  clone.alpha0 = this.alpha0;\n  clone.a0 = this.a0;\n  clone.a = this.a;\n  clone.c0.set(this.c0);\n  clone.c.set(this.c);\n  return clone;\n};\n\nSweep.prototype.set = function(that) {\n  this.localCenter.set(that.localCenter);\n  this.alpha0 = that.alpha0;\n  this.a0 = that.a0;\n  this.a = that.a;\n  this.c0.set(that.c0);\n  this.c.set(that.c);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat22;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\n\n/**\n * A 2-by-2 matrix. Stored in column-major order.\n */\nfunction Mat22(a, b, c, d) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec2.clone(a);\n    this.ey = Vec2.clone(b);\n  } else if (typeof a === 'number') {\n    this.ex = Vec2.neo(a, c);\n    this.ey = Vec2.neo(b, d)\n  } else {\n    this.ex = Vec2.zero();\n    this.ey = Vec2.zero()\n  }\n};\n\nMat22.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat22.isValid = function(o) {\n  return o && Vec2.isValid(o.ex) && Vec2.isValid(o.ey);\n};\n\nMat22.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat22.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat22!');\n  }\n};\n\nMat22.prototype.set = function(a, b, c, d) {\n  if (typeof a === 'number' && typeof b === 'number' && typeof c === 'number'\n      && typeof d === 'number') {\n    this.ex.set(a, c);\n    this.ey.set(b, d);\n\n  } else if (typeof a === 'object' && typeof b === 'object') {\n    this.ex.set(a);\n    this.ey.set(b);\n\n  } else if (typeof a === 'object') {\n    _ASSERT && Mat22.assert(a);\n    this.ex.set(a.ex);\n    this.ey.set(a.ey);\n\n  } else {\n    _ASSERT && common.assert(false);\n  }\n}\n\nMat22.prototype.setIdentity = function() {\n  this.ex.x = 1.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 1.0;\n}\n\nMat22.prototype.setZero = function() {\n  this.ex.x = 0.0;\n  this.ey.x = 0.0;\n  this.ex.y = 0.0;\n  this.ey.y = 0.0;\n}\n\nMat22.prototype.getInverse = function() {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var imx = new Mat22();\n  imx.ex.x = det * d;\n  imx.ey.x = -det * b;\n  imx.ex.y = -det * c;\n  imx.ey.y = det * a;\n  return imx;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n */\nMat22.prototype.solve = function(v) {\n  _ASSERT && Vec2.assert(v);\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var w = Vec2.zero();\n  w.x = det * (d * v.x - b * v.y);\n  w.y = det * (a * v.y - c * v.x);\n  return w;\n}\n\n/**\n * Multiply a matrix times a vector. If a rotation matrix is provided, then this\n * transforms the vector from one frame to another.\n */\nMat22.mul = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) {\n    _ASSERT && Vec2.assert(v);\n    var x = mx.ex.x * v.x + mx.ey.x * v.y;\n    var y = mx.ex.y * v.x + mx.ey.y * v.y;\n    return Vec2.neo(x, y);\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n    var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n    var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n    var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n    var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n    return new Mat22(a, b, c, d);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulVec2 = function(mx, v) {\n  _ASSERT && Vec2.assert(v);\n  var x = mx.ex.x * v.x + mx.ey.x * v.y;\n  var y = mx.ex.y * v.x + mx.ey.y * v.y;\n  return Vec2.neo(x, y);\n}\n\nMat22.mulMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(v);\n  // return new Mat22(Vec2.mul(mx, v.ex), Vec2.mul(mx, v.ey));\n  var a = mx.ex.x * v.ex.x + mx.ey.x * v.ex.y;\n  var b = mx.ex.x * v.ey.x + mx.ey.x * v.ey.y;\n  var c = mx.ex.y * v.ex.x + mx.ey.y * v.ex.y;\n  var d = mx.ex.y * v.ey.x + mx.ey.y * v.ey.y;\n  return new Mat22(a, b, c, d);\n  _ASSERT && common.assert(false);\n}\n\n/**\n * Multiply a matrix transpose times a vector. If a rotation matrix is provided,\n * then this transforms the vector from one frame to another (inverse\n * transform).\n */\nMat22.mulT = function(mx, v) {\n  if (v && 'x' in v && 'y' in v) { // Vec2\n    _ASSERT && Vec2.assert(v);\n    return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n\n  } else if (v && 'ex' in v && 'ey' in v) { // Mat22\n    _ASSERT && Mat22.assert(v);\n    var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n    var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n    return new Mat22(c1, c2);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat22.mulTVec2 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Vec2.assert(v);\n  return Vec2.neo(Vec2.dot(v, mx.ex), Vec2.dot(v, mx.ey));\n}\n\nMat22.mulTMat22 = function(mx, v) {\n  _ASSERT && Mat22.assert(mx);\n  _ASSERT && Mat22.assert(v);\n  var c1 = Vec2.neo(Vec2.dot(mx.ex, v.ex), Vec2.dot(mx.ey, v.ex));\n  var c2 = Vec2.neo(Vec2.dot(mx.ex, v.ey), Vec2.dot(mx.ey, v.ey));\n  return new Mat22(c1, c2);\n}\n\nMat22.abs = function(mx) {\n  _ASSERT && Mat22.assert(mx);\n  return new Mat22(Vec2.abs(mx.ex), Vec2.abs(mx.ey));\n}\n\nMat22.add = function(mx1, mx2) {\n  _ASSERT && Mat22.assert(mx1);\n  _ASSERT && Mat22.assert(mx2);\n  return new Mat22(Vec2.add(mx1.ex, mx2.ex), Vec2.add(mx1.ey, mx2.ey));\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Vec3;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\n\nfunction Vec3(x, y, z) {\n  if (!(this instanceof Vec3)) {\n    return new Vec3(x, y, z);\n  }\n  if (typeof x === 'undefined') {\n    this.x = 0, this.y = 0, this.z = 0;\n  } else if (typeof x === 'object') {\n    this.x = x.x, this.y = x.y, this.z = x.z;\n  } else {\n    this.x = x, this.y = y, this.z = z;\n  }\n  _ASSERT && Vec3.assert(this);\n};\n\nVec3.prototype._serialize = function() {\n  return {\n    x: this.x,\n    y: this.y,\n    z: this.z\n  };\n};\n\nVec3._deserialize = function(data) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = data.x;\n  obj.y = data.y;\n  obj.z = data.z;\n  return obj;\n};\n\nVec3.neo = function(x, y, z) {\n  var obj = Object.create(Vec3.prototype);\n  obj.x = x;\n  obj.y = y;\n  obj.z = z;\n  return obj;\n};\n\nVec3.clone = function(v) {\n  _ASSERT && Vec3.assert(v);\n  return Vec3.neo(v.x, v.y, v.z);\n};\n\nVec3.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\n/**\n * Does this vector contain finite coordinates?\n */\nVec3.isValid = function(v) {\n  return v && Math.isFinite(v.x) && Math.isFinite(v.y) && Math.isFinite(v.z);\n}\n\nVec3.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Vec3.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Vec3!');\n  }\n}\n\nVec3.prototype.setZero = function() {\n  this.x = 0.0;\n  this.y = 0.0;\n  this.z = 0.0;\n  return this;\n}\n\nVec3.prototype.set = function(x, y, z) {\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  return this;\n}\n\nVec3.prototype.add = function(w) {\n  this.x += w.x;\n  this.y += w.y;\n  this.z += w.z;\n  return this;\n}\n\nVec3.prototype.sub = function(w) {\n  this.x -= w.x;\n  this.y -= w.y;\n  this.z -= w.z;\n  return this;\n}\n\nVec3.prototype.mul = function(m) {\n  this.x *= m;\n  this.y *= m;\n  this.z *= m;\n  return this;\n}\n\nVec3.areEqual = function(v, w) {\n  _ASSERT && Vec3.assert(v);\n  _ASSERT && Vec3.assert(w);\n  return v == w ||\n    typeof v === 'object' && v !== null &&\n    typeof w === 'object' && w !== null &&\n    v.x === w.x && v.y === w.y && v.z === w.z;\n}\n\n/**\n * Perform the dot product on two vectors.\n */\nVec3.dot = function(v, w) {\n  return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\n/**\n * Perform the cross product on two vectors. In 2D this produces a scalar.\n */\nVec3.cross = function(v, w) {\n  return new Vec3(\n    v.y * w.z - v.z * w.y,\n    v.z * w.x - v.x * w.z,\n    v.x * w.y - v.y * w.x\n  );\n}\n\nVec3.add = function(v, w) {\n  return new Vec3(v.x + w.x, v.y + w.y, v.z + w.z);\n}\n\nVec3.sub = function(v, w) {\n  return new Vec3(v.x - w.x, v.y - w.y, v.z - w.z);\n}\n\nVec3.mul = function(v, m) {\n  return new Vec3(m * v.x, m * v.y, m * v.z);\n}\n\nVec3.prototype.neg = function() {\n  this.x = -this.x;\n  this.y = -this.y;\n  this.z = -this.z;\n  return this;\n}\n\nVec3.neg = function(v) {\n  return new Vec3(-v.x, -v.y, -v.z);\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Joint;\n\nvar common = require('./util/common');\n\n/**\n * A joint edge is used to connect bodies and joints together in a joint graph\n * where each body is a node and each joint is an edge. A joint edge belongs to\n * a doubly linked list maintained in each attached body. Each joint has two\n * joint nodes, one for each attached body.\n * \n * @prop {Body} other provides quick access to the other body attached.\n * @prop {Joint} joint the joint\n * @prop {JointEdge} prev the previous joint edge in the body's joint list\n * @prop {JointEdge} next the next joint edge in the body's joint list\n */\nfunction JointEdge() {\n  this.other = null;\n  this.joint = null;\n  this.prev = null;\n  this.next = null;\n};\n\n/**\n * @typedef {Object} JointDef\n *\n * Joint definitions are used to construct joints.\n * \n * @prop userData Use this to attach application specific data to your joints.\n *       void userData;\n * @prop {boolean} collideConnected Set this flag to true if the attached bodies\n *       should collide.\n *\n * @prop {Body} bodyA The first attached body.\n * @prop {Body} bodyB The second attached body.\n */\n\nvar DEFAULTS = {\n  userData : null,\n  collideConnected : false\n};\n\n/**\n * The base joint class. Joints are used to constraint two bodies together in\n * various fashions. Some joints also feature limits and motors.\n * \n * @param {JointDef} def\n */\nfunction Joint(def, bodyA, bodyB) {\n  bodyA = def.bodyA || bodyA;\n  bodyB = def.bodyB || bodyB;\n\n  _ASSERT && common.assert(bodyA);\n  _ASSERT && common.assert(bodyB);\n  _ASSERT && common.assert(bodyA != bodyB);\n\n  this.m_type = 'unknown-joint';\n\n  this.m_bodyA = bodyA;\n  this.m_bodyB = bodyB;\n\n  this.m_index = 0;\n  this.m_collideConnected = !!def.collideConnected;\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_edgeA = new JointEdge();\n  this.m_edgeB = new JointEdge();\n\n  this.m_islandFlag = false;\n  this.m_userData = def.userData;\n};\n\nJoint.TYPES = {};\n\nJoint._deserialize = function(data, context, restore) {\n  var clazz = Joint.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\n/**\n * Short-cut function to determine if either body is inactive.\n * \n * @returns {boolean}\n */\nJoint.prototype.isActive = function() {\n  return this.m_bodyA.isActive() && this.m_bodyB.isActive();\n}\n\n/**\n * Get the type of the concrete joint.\n * \n * @returns JointType\n */\nJoint.prototype.getType = function() {\n  return this.m_type;\n}\n\n/**\n * Get the first body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyA = function() {\n  return this.m_bodyA;\n}\n\n/**\n * Get the second body attached to this joint.\n * \n * @returns Body\n */\nJoint.prototype.getBodyB = function() {\n  return this.m_bodyB;\n}\n\n/**\n * Get the next joint the world joint list.\n * \n * @returns Joint\n */\nJoint.prototype.getNext = function() {\n  return this.m_next;\n}\n\nJoint.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\nJoint.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get collide connected. Note: modifying the collide connect flag won't work\n * correctly because the flag is only checked when fixture AABBs begin to\n * overlap.\n * \n * @returns {boolean}\n */\nJoint.prototype.getCollideConnected = function() {\n  return this.m_collideConnected;\n};\n\n/**\n * Get the anchor point on bodyA in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorA = function() {\n};\n\n/**\n * Get the anchor point on bodyB in world coordinates.\n * \n * @return {Vec2}\n */\nJoint.prototype.getAnchorB = function() {\n};\n\n/**\n * Get the reaction force on bodyB at the joint anchor in Newtons.\n * \n * @param {float} inv_dt\n * @return {Vec2}\n */\nJoint.prototype.getReactionForce = function(inv_dt) {\n};\n\n/**\n * Get the reaction torque on bodyB in N*m.\n * \n * @param {float} inv_dt\n * @return {float}\n */\nJoint.prototype.getReactionTorque = function(inv_dt) {\n};\n\n/**\n * Shift the origin for any points stored in world coordinates.\n * \n * @param {Vec2} newOrigin\n */\nJoint.prototype.shiftOrigin = function(newOrigin) {\n};\n\n/**\n */\nJoint.prototype.initVelocityConstraints = function(step) {\n};\n\n/**\n */\nJoint.prototype.solveVelocityConstraints = function(step) {\n};\n\n/**\n * This returns true if the position errors are within tolerance.\n */\nJoint.prototype.solvePositionConstraints = function(step) {\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Velocity;\n\nvar Vec2 = require('./Vec2');\n\n/**\n * @prop {Vec2} v linear\n * @prop {float} w angular\n */\nfunction Velocity() {\n  this.v = Vec2.zero();\n  this.w = 0;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Position;\n\nvar Vec2 = require('./Vec2');\nvar Rot = require('./Rot');\n\n/**\n * @prop {Vec2} c location\n * @prop {float} a angle\n */\nfunction Position() {\n  this.c = Vec2.zero();\n  this.a = 0;\n}\n\nPosition.prototype.getTransform = function(xf, p) {\n  xf.q.set(this.a);\n  xf.p.set(Vec2.sub(this.c, Rot.mulVec2(xf.q, p)));\n  return xf;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Mat33;\n\nvar common = require('../util/common');\nvar Math = require('./Math');\nvar Vec2 = require('./Vec2');\nvar Vec3 = require('./Vec3');\n\n/**\n * A 3-by-3 matrix. Stored in column-major order.\n */\nfunction Mat33(a, b, c) {\n  if (typeof a === 'object' && a !== null) {\n    this.ex = Vec3.clone(a);\n    this.ey = Vec3.clone(b);\n    this.ez = Vec3.clone(c);\n  } else {\n    this.ex = Vec3();\n    this.ey = Vec3();\n    this.ez = Vec3();\n  }\n};\n\nMat33.prototype.toString = function() {\n  return JSON.stringify(this);\n};\n\nMat33.isValid = function(o) {\n  return o && Vec3.isValid(o.ex) && Vec3.isValid(o.ey) && Vec3.isValid(o.ez);\n};\n\nMat33.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!Mat33.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid Mat33!');\n  }\n};\n\n/**\n * Set this matrix to all zeros.\n */\nMat33.prototype.setZero = function() {\n  this.ex.setZero();\n  this.ey.setZero();\n  this.ez.setZero();\n  return this;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases.\n * \n * @param {Vec3} v\n * @returns {Vec3}\n */\nMat33.prototype.solve33 = function(v) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = new Vec3();\n  r.x = det * Vec3.dot(v, Vec3.cross(this.ey, this.ez));\n  r.y = det * Vec3.dot(this.ex, Vec3.cross(v, this.ez));\n  r.z = det * Vec3.dot(this.ex, Vec3.cross(this.ey, v));\n  return r;\n}\n\n/**\n * Solve A * x = b, where b is a column vector. This is more efficient than\n * computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix\n * equation.\n * \n * @param {Vec2} v\n * \n * @returns {Vec2}\n */\nMat33.prototype.solve22 = function(v) {\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a21 = this.ex.y;\n  var a22 = this.ey.y;\n  var det = a11 * a22 - a12 * a21;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var r = Vec2.zero();\n  r.x = det * (a22 * v.x - a12 * v.y);\n  r.y = det * (a11 * v.y - a21 * v.x);\n  return r;\n}\n\n/**\n * Get the inverse of this matrix as a 2-by-2. Returns the zero matrix if\n * singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getInverse22 = function(M) {\n  var a = this.ex.x;\n  var b = this.ey.x;\n  var c = this.ex.y;\n  var d = this.ey.y;\n  var det = a * d - b * c;\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  M.ex.x = det * d;\n  M.ey.x = -det * b;\n  M.ex.z = 0.0;\n  M.ex.y = -det * c;\n  M.ey.y = det * a;\n  M.ey.z = 0.0;\n  M.ez.x = 0.0;\n  M.ez.y = 0.0;\n  M.ez.z = 0.0;\n}\n\n/**\n * Get the symmetric inverse of this matrix as a 3-by-3. Returns the zero matrix\n * if singular.\n * \n * @param {Mat33} M\n */\nMat33.prototype.getSymInverse33 = function(M) {\n  var det = Vec3.dot(this.ex, Vec3.cross(this.ey, this.ez));\n  if (det != 0.0) {\n    det = 1.0 / det;\n  }\n  var a11 = this.ex.x;\n  var a12 = this.ey.x;\n  var a13 = this.ez.x;\n  var a22 = this.ey.y;\n  var a23 = this.ez.y;\n  var a33 = this.ez.z;\n\n  M.ex.x = det * (a22 * a33 - a23 * a23);\n  M.ex.y = det * (a13 * a23 - a12 * a33);\n  M.ex.z = det * (a12 * a23 - a13 * a22);\n\n  M.ey.x = M.ex.y;\n  M.ey.y = det * (a11 * a33 - a13 * a13);\n  M.ey.z = det * (a13 * a12 - a11 * a23);\n\n  M.ez.x = M.ex.z;\n  M.ez.y = M.ey.z;\n  M.ez.z = det * (a11 * a22 - a12 * a12);\n}\n\n/**\n * Multiply a matrix times a vector.\n * \n * @param {Mat33} a\n * @param {Vec3|Vec2} b\n * \n * @returns {Vec3|Vec2}\n */\nMat33.mul = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  if (b && 'z' in b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec3.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n    var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n    var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n    return new Vec3(x, y, z);\n\n  } else if (b && 'y' in b && 'x' in b) {\n    _ASSERT && Vec2.assert(b);\n    var x = a.ex.x * b.x + a.ey.x * b.y;\n    var y = a.ex.y * b.x + a.ey.y * b.y;\n    return Vec2.neo(x, y);\n  }\n\n  _ASSERT && common.assert(false);\n}\n\nMat33.mulVec3 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec3.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y + a.ez.x * b.z;\n  var y = a.ex.y * b.x + a.ey.y * b.y + a.ez.y * b.z;\n  var z = a.ex.z * b.x + a.ey.z * b.y + a.ez.z * b.z;\n  return new Vec3(x, y, z);\n}\n\nMat33.mulVec2 = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Vec2.assert(b);\n  var x = a.ex.x * b.x + a.ey.x * b.y;\n  var y = a.ex.y * b.x + a.ey.y * b.y;\n  return Vec2.neo(x, y);\n}\n\nMat33.add = function(a, b) {\n  _ASSERT && Mat33.assert(a);\n  _ASSERT && Mat33.assert(b);\n  return new Mat33(\n    Vec3.add(a.ex, b.ex),\n    Vec3.add(a.ey, b.ey),\n    Vec3.add(a.ez, b.ez)\n  );\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Shape;\n\nvar Math = require('./common/Math');\n\n/**\n * A shape is used for collision detection. You can create a shape however you\n * like. Shapes used for simulation in World are created automatically when a\n * Fixture is created. Shapes may encapsulate one or more child shapes.\n */\nfunction Shape() {\n  this.m_type;\n  this.m_radius;\n}\n\nShape.prototype._reset = function() {\n};\n\nShape.prototype._serialize = function() {\n  return {};\n};\n\nShape.TYPES = {};\n\nShape._deserialize = function(data, context, restore) {\n  var clazz = Shape.TYPES[data.type];\n  return clazz && restore(clazz, data);\n};\n\nShape.isValid = function(shape) {\n  return !!shape;\n};\n\nShape.prototype.getRadius = function() {\n  return this.m_radius;\n};\n\n/**\n * Get the type of this shape. You can use this to down cast to the concrete\n * shape.\n * \n * @return the shape type.\n */\nShape.prototype.getType = function() {\n  return this.m_type;\n};\n\n/**\n * @deprecated Shapes should be treated as immutable.\n *\n * clone the concrete shape.\n */\nShape.prototype._clone = function() {\n};\n\n/**\n * // Get the number of child primitives.\n */\nShape.prototype.getChildCount = function() {\n};\n\n/**\n * Test a point for containment in this shape. This only works for convex\n * shapes.\n * \n * @param {Transform} xf The shape world transform.\n * @param p A point in world coordinates.\n */\nShape.prototype.testPoint = function(xf, p) {\n};\n\n/**\n * Cast a ray against a child shape.\n * \n * @param {RayCastOutput} output The ray-cast results.\n * @param {RayCastInput} input The ray-cast input parameters.\n * @param {Transform} transform The transform to be applied to the shape.\n * @param childIndex The child shape index\n */\nShape.prototype.rayCast = function(output, input, transform, childIndex) {\n};\n\n/**\n * Given a transform, compute the associated axis aligned bounding box for a\n * child shape.\n * \n * @param {AABB} aabb Returns the axis aligned box.\n * @param {Transform} xf The world transform of the shape.\n * @param childIndex The child shape\n */\nShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n};\n\n/**\n * Compute the mass properties of this shape using its dimensions and density.\n * The inertia tensor is computed about the local origin.\n * \n * @param {MassData} massData Returns the mass data for this shape.\n * @param density The density in kilograms per meter squared.\n */\nShape.prototype.computeMass = function(massData, density) {\n};\n\n/**\n * @param {DistanceProxy} proxy\n */\nShape.prototype.computeDistanceProxy = function(proxy) {\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\n\nmodule.exports = AABB;\n\nfunction AABB(lower, upper) {\n  if (!(this instanceof AABB)) {\n    return new AABB(lower, upper);\n  }\n\n  this.lowerBound = Vec2.zero();\n  this.upperBound = Vec2.zero();\n\n  if (typeof lower === 'object') {\n    this.lowerBound.set(lower);\n  }\n  if (typeof upper === 'object') {\n    this.upperBound.set(upper);\n  } else if (typeof lower === 'object') {\n    this.upperBound.set(lower);\n  }\n};\n\n/**\n * Verify that the bounds are sorted.\n */\nAABB.prototype.isValid = function() {\n  return AABB.isValid(this);\n}\n\nAABB.isValid = function(aabb) {\n  var d = Vec2.sub(aabb.upperBound, aabb.lowerBound);\n  var valid = d.x >= 0.0 && d.y >= 0.0 && Vec2.isValid(aabb.lowerBound) && Vec2.isValid(aabb.upperBound);\n  return valid;\n}\n\nAABB.assert = function(o) {\n  if (!_ASSERT) return;\n  if (!AABB.isValid(o)) {\n    _DEBUG && common.debug(o);\n    throw new Error('Invalid AABB!');\n  }\n}\n\n/**\n * Get the center of the AABB.\n */\nAABB.prototype.getCenter = function() {\n  return Vec2.neo((this.lowerBound.x + this.upperBound.x) * 0.5, (this.lowerBound.y + this.upperBound.y) * 0.5);\n}\n\n/**\n * Get the extents of the AABB (half-widths).\n */\nAABB.prototype.getExtents = function() {\n  return Vec2.neo((this.upperBound.x - this.lowerBound.x) * 0.5, (this.upperBound.y - this.lowerBound.y) * 0.5);\n}\n\n/**\n * Get the perimeter length.\n */\nAABB.prototype.getPerimeter = function() {\n  return 2.0 * (this.upperBound.x - this.lowerBound.x + this.upperBound.y - this.lowerBound.y);\n}\n\n/**\n * Combine one or two AABB into this one.\n */\nAABB.prototype.combine = function(a, b) {\n  b = b || this;\n\n  var lowerA = a.lowerBound;\n  var upperA = a.upperBound;\n  var lowerB = b.lowerBound;\n  var upperB = b.upperBound;\n\n  var lowerX = Math.min(lowerA.x, lowerB.x);\n  var lowerY = Math.min(lowerA.y, lowerB.y);\n  var upperX = Math.max(upperB.x, upperA.x);\n  var upperY = Math.max(upperB.y, upperA.y);\n\n  this.lowerBound.set(lowerX, lowerY);\n  this.upperBound.set(upperX, upperY);\n}\n\nAABB.prototype.combinePoints = function(a, b) {\n  this.lowerBound.set(Math.min(a.x, b.x), Math.min(a.y, b.y));\n  this.upperBound.set(Math.max(a.x, b.x), Math.max(a.y, b.y));\n}\n\nAABB.prototype.set = function(aabb) {\n  this.lowerBound.set(aabb.lowerBound.x, aabb.lowerBound.y);\n  this.upperBound.set(aabb.upperBound.x, aabb.upperBound.y);\n}\n\nAABB.prototype.contains = function(aabb) {\n  var result = true;\n  result = result && this.lowerBound.x <= aabb.lowerBound.x;\n  result = result && this.lowerBound.y <= aabb.lowerBound.y;\n  result = result && aabb.upperBound.x <= this.upperBound.x;\n  result = result && aabb.upperBound.y <= this.upperBound.y;\n  return result;\n}\n\nAABB.prototype.extend = function(value) {\n  AABB.extend(this, value);\n  return this;\n}\n\nAABB.extend = function(aabb, value) {\n  aabb.lowerBound.x -= value;\n  aabb.lowerBound.y -= value;\n  aabb.upperBound.x += value;\n  aabb.upperBound.y += value;\n}\n\nAABB.testOverlap = function(a, b) {\n  var d1x = b.lowerBound.x - a.upperBound.x;\n  var d2x = a.lowerBound.x - b.upperBound.x;\n\n  var d1y = b.lowerBound.y - a.upperBound.y;\n  var d2y = a.lowerBound.y - b.upperBound.y;\n\n  if (d1x > 0 || d1y > 0 || d2x > 0 || d2y > 0) {\n    return false;\n  }\n  return true;\n}\n\nAABB.areEqual = function(a, b) {\n  return Vec2.areEqual(a.lowerBound, b.lowerBound) && Vec2.areEqual(a.upperBound, b.upperBound);\n}\n\nAABB.diff = function(a, b) {\n  var wD = Math.max(0, Math.min(a.upperBound.x, b.upperBound.x) - Math.max(b.lowerBound.x, a.lowerBound.x))\n  var hD = Math.max(0, Math.min(a.upperBound.y, b.upperBound.y) - Math.max(b.lowerBound.y, a.lowerBound.y));\n\n  var wA = a.upperBound.x - a.lowerBound.x;\n  var hA = a.upperBound.y - a.lowerBound.y;\n\n  var wB = b.upperBound.x - b.lowerBound.x;\n  var hB = b.upperBound.y - b.lowerBound.y;\n\n  return wA * hA + wB * hB - wD * hD;\n};\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).\n *\n * @prop {Vec2} p1\n * @prop {Vec2} p2\n * @prop {number} maxFraction\n */\n\n/**\n * @typedef RayCastInput\n *\n * Ray-cast output data. The ray hits at p1 + fraction * (p2 - p1), where p1 and\n * p2 come from RayCastInput.\n *\n * @prop {Vec2} normal\n * @prop {number} fraction\n */\n\n/**\n * @param {RayCastOutput} output\n * @param {RayCastInput} input\n * @returns {boolean}\n */\nAABB.prototype.rayCast = function(output, input) {\n  // From Real-time Collision Detection, p179.\n\n  var tmin = -Infinity;\n  var tmax = Infinity;\n\n  var p = input.p1;\n  var d = Vec2.sub(input.p2, input.p1);\n  var absD = Vec2.abs(d);\n\n  var normal = Vec2.zero();\n\n  for (var f = 'x'; f !== null; f = (f === 'x' ? 'y' : null)) {\n    if (absD.x < Math.EPSILON) {\n      // Parallel.\n      if (p[f] < this.lowerBound[f] || this.upperBound[f] < p[f]) {\n        return false;\n      }\n    } else {\n      var inv_d = 1.0 / d[f];\n      var t1 = (this.lowerBound[f] - p[f]) * inv_d;\n      var t2 = (this.upperBound[f] - p[f]) * inv_d;\n\n      // Sign of the normal vector.\n      var s = -1.0;\n\n      if (t1 > t2) {\n        var temp = t1;\n        t1 = t2, t2 = temp;\n        s = 1.0;\n      }\n\n      // Push the min up\n      if (t1 > tmin) {\n        normal.setZero();\n        normal[f] = s;\n        tmin = t1;\n      }\n\n      // Pull the max down\n      tmax = Math.min(tmax, t2);\n\n      if (tmin > tmax) {\n        return false;\n      }\n    }\n  }\n\n  // Does the ray start inside the box?\n  // Does the ray intersect beyond the max fraction?\n  if (tmin < 0.0 || input.maxFraction < tmin) {\n    return false;\n  }\n\n  // Intersection.\n  output.fraction = tmin;\n  output.normal = normal;\n  return true;\n}\n\nAABB.prototype.toString = function() {\n  return JSON.stringify(this);\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar DEBUG_SOLVER = false;\n\nvar common = require('./util/common');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Mat22 = require('./common/Mat22');\nvar Rot = require('./common/Rot');\n\nvar Settings = require('./Settings');\nvar Manifold = require('./Manifold');\nvar Distance = require('./collision/Distance');\n\nmodule.exports = Contact;\n\n/**\n * A contact edge is used to connect bodies and contacts together in a contact\n * graph where each body is a node and each contact is an edge. A contact edge\n * belongs to a doubly linked list maintained in each attached body. Each\n * contact has two contact nodes, one for each attached body.\n * \n * @prop {Contact} contact The contact\n * @prop {ContactEdge} prev The previous contact edge in the body's contact list\n * @prop {ContactEdge} next The next contact edge in the body's contact list\n * @prop {Body} other Provides quick access to the other body attached.\n */\nfunction ContactEdge(contact) {\n  this.contact = contact;\n  this.prev;\n  this.next;\n  this.other;\n};\n\n/**\n * @function Contact~evaluate\n * \n * @param manifold\n * @param xfA\n * @param fixtureA\n * @param indexA\n * @param xfB\n * @param fixtureB\n * @param indexB\n */\n\n/**\n * The class manages contact between two shapes. A contact exists for each\n * overlapping AABB in the broad-phase (except if filtered). Therefore a contact\n * object may exist that has no contact points.\n * \n * @param {Fixture} fA\n * @param {int} indexA\n * @param {Fixture} fB\n * @param {int} indexB\n * @param {Contact~evaluate} evaluateFcn\n */\nfunction Contact(fA, indexA, fB, indexB, evaluateFcn) {\n  // Nodes for connecting bodies.\n  this.m_nodeA = new ContactEdge(this);\n  this.m_nodeB = new ContactEdge(this);\n\n  this.m_fixtureA = fA;\n  this.m_fixtureB = fB;\n\n  this.m_indexA = indexA;\n  this.m_indexB = indexB;\n\n  this.m_evaluateFcn = evaluateFcn;\n\n  this.m_manifold = new Manifold();\n\n  this.m_prev = null;\n  this.m_next = null;\n\n  this.m_toi = 1.0;\n  this.m_toiCount = 0;\n  // This contact has a valid TOI in m_toi\n  this.m_toiFlag = false;\n\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n\n  this.m_tangentSpeed = 0.0;\n\n  // This contact can be disabled (by user)\n  this.m_enabledFlag = true;\n\n  // Used when crawling contact graph when forming islands.\n  this.m_islandFlag = false;\n\n  // Set when the shapes are touching.\n  this.m_touchingFlag = false;\n\n  // This contact needs filtering because a fixture filter was changed.\n  this.m_filterFlag = false;\n\n  // This bullet contact had a TOI event\n  this.m_bulletHitFlag = false;\n\n  this.v_points = []; // VelocityConstraintPoint[maxManifoldPoints]\n  this.v_normal = Vec2.zero();\n  this.v_normalMass = new Mat22();\n  this.v_K = new Mat22();\n  this.v_pointCount;\n\n  this.v_tangentSpeed;\n  this.v_friction;\n  this.v_restitution;\n\n  this.v_invMassA;\n  this.v_invMassB;\n  this.v_invIA;\n  this.v_invIB;\n\n  this.p_localPoints = [] // Vec2[maxManifoldPoints];\n  this.p_localNormal = Vec2.zero();\n  this.p_localPoint = Vec2.zero();\n  this.p_localCenterA = Vec2.zero();\n  this.p_localCenterB = Vec2.zero();\n  this.p_type; // Manifold.Type\n  this.p_radiusA;\n  this.p_radiusB;\n  this.p_pointCount;\n\n  this.p_invMassA;\n  this.p_invMassB;\n  this.p_invIA;\n  this.p_invIB;\n}\n\nContact.prototype.initConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var manifold = this.getManifold();\n\n  var pointCount = manifold.pointCount;\n  _ASSERT && common.assert(pointCount > 0);\n\n  this.v_invMassA = bodyA.m_invMass;\n  this.v_invMassB = bodyB.m_invMass;\n  this.v_invIA = bodyA.m_invI;\n  this.v_invIB = bodyB.m_invI;\n\n  this.v_friction = this.m_friction;\n  this.v_restitution = this.m_restitution;\n  this.v_tangentSpeed = this.m_tangentSpeed;\n\n  this.v_pointCount = pointCount;\n\n  this.v_K.setZero();\n  this.v_normalMass.setZero();\n\n  this.p_invMassA = bodyA.m_invMass;\n  this.p_invMassB = bodyB.m_invMass;\n  this.p_invIA = bodyA.m_invI;\n  this.p_invIB = bodyB.m_invI;\n  this.p_localCenterA = Vec2.clone(bodyA.m_sweep.localCenter);\n  this.p_localCenterB = Vec2.clone(bodyB.m_sweep.localCenter);\n\n  this.p_radiusA = shapeA.m_radius;\n  this.p_radiusB = shapeB.m_radius;\n\n  this.p_type = manifold.type;\n  this.p_localNormal = Vec2.clone(manifold.localNormal);\n  this.p_localPoint = Vec2.clone(manifold.localPoint);\n  this.p_pointCount = pointCount;\n\n  for (var j = 0; j < pointCount; ++j) {\n    var cp = manifold.points[j]; // ManifoldPoint\n    var vcp = this.v_points[j] = new VelocityConstraintPoint();\n\n    if (step.warmStarting) {\n      vcp.normalImpulse = step.dtRatio * cp.normalImpulse;\n      vcp.tangentImpulse = step.dtRatio * cp.tangentImpulse;\n\n    } else {\n      vcp.normalImpulse = 0.0;\n      vcp.tangentImpulse = 0.0;\n    }\n\n    vcp.rA.setZero();\n    vcp.rB.setZero();\n    vcp.normalMass = 0.0;\n    vcp.tangentMass = 0.0;\n    vcp.velocityBias = 0.0;\n\n    this.p_localPoints[j] = Vec2.clone(cp.localPoint);\n\n  }\n};\n\n/**\n * Get the contact manifold. Do not modify the manifold unless you understand\n * the internals of the library.\n */\nContact.prototype.getManifold = function() {\n  return this.m_manifold;\n}\n\n/**\n * Get the world manifold.\n * \n * @param {WorldManifold} [worldManifold]\n */\nContact.prototype.getWorldManifold = function(worldManifold) {\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var shapeA = this.m_fixtureA.getShape();\n  var shapeB = this.m_fixtureB.getShape();\n\n  return this.m_manifold.getWorldManifold(worldManifold, bodyA.getTransform(),\n      shapeA.m_radius, bodyB.getTransform(), shapeB.m_radius);\n}\n\n/**\n * Enable/disable this contact. This can be used inside the pre-solve contact\n * listener. The contact is only disabled for the current time step (or sub-step\n * in continuous collisions).\n */\nContact.prototype.setEnabled = function(flag) {\n  this.m_enabledFlag = !!flag;\n}\n\n/**\n * Has this contact been disabled?\n */\nContact.prototype.isEnabled = function() {\n  return this.m_enabledFlag;\n}\n\n/**\n * Is this contact touching?\n */\nContact.prototype.isTouching = function() {\n  return this.m_touchingFlag;\n}\n\n/**\n * Get the next contact in the world's contact list.\n */\nContact.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get fixture A in this contact.\n */\nContact.prototype.getFixtureA = function() {\n  return this.m_fixtureA;\n}\n\n/**\n * Get fixture B in this contact.\n */\nContact.prototype.getFixtureB = function() {\n  return this.m_fixtureB;\n}\n\n/**\n * Get the child primitive index for fixture A.\n */\nContact.prototype.getChildIndexA = function() {\n  return this.m_indexA;\n}\n\n/**\n * Get the child primitive index for fixture B.\n */\nContact.prototype.getChildIndexB = function() {\n  return this.m_indexB;\n}\n\n/**\n * Flag this contact for filtering. Filtering will occur the next time step.\n */\nContact.prototype.flagForFiltering = function() {\n  this.m_filterFlag = true;\n}\n\n/**\n * Override the default friction mixture. You can call this in\n * ContactListener.preSolve. This value persists until set or reset.\n */\nContact.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the friction.\n */\nContact.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Reset the friction mixture to the default value.\n */\nContact.prototype.resetFriction = function() {\n  this.m_friction = mixFriction(this.m_fixtureA.m_friction,\n      this.m_fixtureB.m_friction);\n}\n\n/**\n * Override the default restitution mixture. You can call this in\n * ContactListener.preSolve. The value persists until you set or reset.\n */\nContact.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Get the restitution.\n */\nContact.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Reset the restitution to the default value.\n */\nContact.prototype.resetRestitution = function() {\n  this.m_restitution = mixRestitution(this.m_fixtureA.m_restitution,\n      this.m_fixtureB.m_restitution);\n}\n\n/**\n * Set the desired tangent speed for a conveyor belt behavior. In meters per\n * second.\n */\nContact.prototype.setTangentSpeed = function(speed) {\n  this.m_tangentSpeed = speed;\n}\n\n/**\n * Get the desired tangent speed. In meters per second.\n */\nContact.prototype.getTangentSpeed = function() {\n  return this.m_tangentSpeed;\n}\n\n/**\n * Called by Update method, and implemented by subclasses.\n */\nContact.prototype.evaluate = function(manifold, xfA, xfB) {\n  this.m_evaluateFcn(manifold, xfA, this.m_fixtureA, this.m_indexA, xfB,\n      this.m_fixtureB, this.m_indexB);\n};\n\n/**\n * Updates the contact manifold and touching status.\n * \n * Note: do not assume the fixture AABBs are overlapping or are valid.\n * \n * @param {function} listener.beginContact\n * @param {function} listener.endContact\n * @param {function} listener.preSolve\n */\nContact.prototype.update = function(listener) {\n\n  // Re-enable this contact.\n  this.m_enabledFlag = true;\n\n  var touching = false;\n  var wasTouching = this.m_touchingFlag;\n\n  var sensorA = this.m_fixtureA.isSensor();\n  var sensorB = this.m_fixtureB.isSensor();\n  var sensor = sensorA || sensorB;\n\n  var bodyA = this.m_fixtureA.getBody();\n  var bodyB = this.m_fixtureB.getBody();\n  var xfA = bodyA.getTransform();\n  var xfB = bodyB.getTransform();\n\n  // Is this contact a sensor?\n  if (sensor) {\n    var shapeA = this.m_fixtureA.getShape();\n    var shapeB = this.m_fixtureB.getShape();\n    touching = Distance.testOverlap(shapeA, this.m_indexA, shapeB,\n        this.m_indexB, xfA, xfB);\n\n    // Sensors don't generate manifolds.\n    this.m_manifold.pointCount = 0;\n  } else {\n\n    // TODO reuse manifold\n    var oldManifold = this.m_manifold;\n    this.m_manifold = new Manifold();\n\n    this.evaluate(this.m_manifold, xfA, xfB);\n    touching = this.m_manifold.pointCount > 0;\n\n    // Match old contact ids to new contact ids and copy the\n    // stored impulses to warm start the solver.\n    for (var i = 0; i < this.m_manifold.pointCount; ++i) {\n      var nmp = this.m_manifold.points[i];\n      nmp.normalImpulse = 0.0;\n      nmp.tangentImpulse = 0.0;\n\n      for (var j = 0; j < oldManifold.pointCount; ++j) {\n        var omp = oldManifold.points[j];\n        if (omp.id.key == nmp.id.key) { // ContactID.key\n          nmp.normalImpulse = omp.normalImpulse;\n          nmp.tangentImpulse = omp.tangentImpulse;\n          break;\n        }\n      }\n    }\n\n    if (touching != wasTouching) {\n      bodyA.setAwake(true);\n      bodyB.setAwake(true);\n    }\n  }\n\n  this.m_touchingFlag = touching;\n\n  if (wasTouching == false && touching == true && listener) {\n    listener.beginContact(this);\n  }\n\n  if (wasTouching == true && touching == false && listener) {\n    listener.endContact(this);\n  }\n\n  if (sensor == false && touching && listener) {\n    listener.preSolve(this, oldManifold);\n  }\n}\n\nContact.prototype.solvePositionConstraint = function(step) {\n  return this._solvePositionConstraint(step, false);\n}\n\nContact.prototype.solvePositionConstraintTOI = function(step, toiA, toiB) {\n  return this._solvePositionConstraint(step, true, toiA, toiB);\n}\n\nContact.prototype._solvePositionConstraint = function(step, toi, toiA, toiB) {\n\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var mA = 0.0;\n  var iA = 0.0;\n  if (!toi || (bodyA == toiA || bodyA == toiB)) {\n    mA = this.p_invMassA;\n    iA = this.p_invIA;\n  }\n\n  var mB = 0.0;\n  var iB = 0.0;\n  if (!toi || (bodyB == toiA || bodyB == toiB)) {\n    mB = this.p_invMassB;\n    iB = this.p_invIB;\n  }\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n\n  var minSeparation = 0.0;\n\n  // Solve normal constraints\n  for (var j = 0; j < this.p_pointCount; ++j) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    xfA.q.set(aA);\n    xfB.q.set(aB);\n    xfA.p = Vec2.sub(cA, Rot.mulVec2(xfA.q, localCenterA));\n    xfB.p = Vec2.sub(cB, Rot.mulVec2(xfB.q, localCenterB));\n\n    // PositionSolverManifold\n    var normal, point, separation;\n    switch (this.p_type) {\n    case Manifold.e_circles:\n      var pointA = Transform.mulVec2(xfA, this.p_localPoint);\n      var pointB = Transform.mulVec2(xfB, this.p_localPoints[0]);\n      normal = Vec2.sub(pointB, pointA);\n      normal.normalize();\n      point = Vec2.combine(0.5, pointA, 0.5, pointB);\n      separation = Vec2.dot(Vec2.sub(pointB, pointA), normal) - this.p_radiusA\n          - this.p_radiusB;\n      break;\n\n    case Manifold.e_faceA:\n      normal = Rot.mulVec2(xfA.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfA, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfB, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n      break;\n\n    case Manifold.e_faceB:\n      normal = Rot.mulVec2(xfB.q, this.p_localNormal);\n      var planePoint = Transform.mulVec2(xfB, this.p_localPoint);\n      var clipPoint = Transform.mulVec2(xfA, this.p_localPoints[j]);\n      separation = Vec2.dot(Vec2.sub(clipPoint, planePoint), normal)\n          - this.p_radiusA - this.p_radiusB;\n      point = clipPoint;\n\n      // Ensure normal points from A to B\n      normal.mul(-1);\n      break;\n    }\n\n    var rA = Vec2.sub(point, cA);\n    var rB = Vec2.sub(point, cB);\n\n    // Track max constraint error.\n    minSeparation = Math.min(minSeparation, separation);\n\n    var baumgarte = toi ? Settings.toiBaugarte : Settings.baumgarte;\n    var linearSlop = Settings.linearSlop;\n    var maxLinearCorrection = Settings.maxLinearCorrection;\n\n    // Prevent large corrections and allow slop.\n    var C = Math.clamp(baumgarte * (separation + linearSlop),\n        -maxLinearCorrection, 0.0);\n\n    // Compute the effective mass.\n    var rnA = Vec2.cross(rA, normal);\n    var rnB = Vec2.cross(rB, normal);\n    var K = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    // Compute normal impulse\n    var impulse = K > 0.0 ? -C / K : 0.0;\n\n    var P = Vec2.mul(impulse, normal);\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n\n  return minSeparation;\n}\n\n// TODO merge with ManifoldPoint\nfunction VelocityConstraintPoint() {\n  this.rA = Vec2.zero();\n  this.rB = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.normalMass = 0;\n  this.tangentMass = 0;\n  this.velocityBias = 0;\n}\n\nContact.prototype.initVelocityConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var radiusA = this.p_radiusA;\n  var radiusB = this.p_radiusB;\n  var manifold = this.getManifold();\n\n  var mA = this.v_invMassA;\n  var mB = this.v_invMassB;\n  var iA = this.v_invIA;\n  var iB = this.v_invIB;\n  var localCenterA = Vec2.clone(this.p_localCenterA);\n  var localCenterB = Vec2.clone(this.p_localCenterB);\n\n  var cA = Vec2.clone(positionA.c);\n  var aA = positionA.a;\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n\n  var cB = Vec2.clone(positionB.c);\n  var aB = positionB.a;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  _ASSERT && common.assert(manifold.pointCount > 0);\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  xfA.q.set(aA);\n  xfB.q.set(aB);\n  xfA.p.setCombine(1, cA, -1, Rot.mulVec2(xfA.q, localCenterA));\n  xfB.p.setCombine(1, cB, -1, Rot.mulVec2(xfB.q, localCenterB));\n\n  var worldManifold = manifold.getWorldManifold(null, xfA, radiusA, xfB, radiusB);\n\n  this.v_normal.set(worldManifold.normal);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    vcp.rA.set(Vec2.sub(worldManifold.points[j], cA));\n    vcp.rB.set(Vec2.sub(worldManifold.points[j], cB));\n\n    var rnA = Vec2.cross(vcp.rA, this.v_normal);\n    var rnB = Vec2.cross(vcp.rB, this.v_normal);\n\n    var kNormal = mA + mB + iA * rnA * rnA + iB * rnB * rnB;\n\n    vcp.normalMass = kNormal > 0.0 ? 1.0 / kNormal : 0.0;\n\n    var tangent = Vec2.cross(this.v_normal, 1.0);\n\n    var rtA = Vec2.cross(vcp.rA, tangent);\n    var rtB = Vec2.cross(vcp.rB, tangent);\n\n    var kTangent = mA + mB + iA * rtA * rtA + iB * rtB * rtB;\n\n    vcp.tangentMass = kTangent > 0.0 ? 1.0 / kTangent : 0.0;\n\n    // Setup a velocity bias for restitution.\n    vcp.velocityBias = 0.0;\n    var vRel = Vec2.dot(this.v_normal, vB)\n        + Vec2.dot(this.v_normal, Vec2.cross(wB, vcp.rB))\n        - Vec2.dot(this.v_normal, vA)\n        - Vec2.dot(this.v_normal, Vec2.cross(wA, vcp.rA));\n    if (vRel < -Settings.velocityThreshold) {\n      vcp.velocityBias = -this.v_restitution * vRel;\n    }\n  }\n\n  // If we have two points, then prepare the block solver.\n  if (this.v_pointCount == 2 && step.blockSolve) {\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var rn1A = Vec2.cross(vcp1.rA, this.v_normal);\n    var rn1B = Vec2.cross(vcp1.rB, this.v_normal);\n    var rn2A = Vec2.cross(vcp2.rA, this.v_normal);\n    var rn2B = Vec2.cross(vcp2.rB, this.v_normal);\n\n    var k11 = mA + mB + iA * rn1A * rn1A + iB * rn1B * rn1B;\n    var k22 = mA + mB + iA * rn2A * rn2A + iB * rn2B * rn2B;\n    var k12 = mA + mB + iA * rn1A * rn2A + iB * rn1B * rn2B;\n\n    // Ensure a reasonable condition number.\n    var k_maxConditionNumber = 1000.0;\n    if (k11 * k11 < k_maxConditionNumber * (k11 * k22 - k12 * k12)) {\n      // K is safe to invert.\n      this.v_K.ex.set(k11, k12);\n      this.v_K.ey.set(k12, k22);\n      this.v_normalMass.set(this.v_K.getInverse());\n    } else {\n      // The constraints are redundant, just use one.\n      // TODO_ERIN use deepest?\n      this.v_pointCount = 1;\n    }\n  }\n\n  positionA.c.set(cA);\n  positionA.a = aA;\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  positionB.c.set(cB);\n  positionB.a = aB;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.warmStartConstraint = function(step) {\n  var fixtureA = this.m_fixtureA;\n  var fixtureB = this.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  var velocityA = bodyA.c_velocity;\n  var velocityB = bodyB.c_velocity;\n  var positionA = bodyA.c_position;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    var P = Vec2.combine(vcp.normalImpulse, normal, vcp.tangentImpulse, tangent);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n    vA.subMul(mA, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n    vB.addMul(mB, P);\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\nContact.prototype.storeConstraintImpulses = function(step) {\n  var manifold = this.m_manifold;\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    manifold.points[j].normalImpulse = this.v_points[j].normalImpulse;\n    manifold.points[j].tangentImpulse = this.v_points[j].tangentImpulse;\n  }\n};\n\nContact.prototype.solveVelocityConstraint = function(step) {\n  var bodyA = this.m_fixtureA.m_body;\n  var bodyB = this.m_fixtureB.m_body;\n\n  var velocityA = bodyA.c_velocity;\n  var positionA = bodyA.c_position;\n\n  var velocityB = bodyB.c_velocity;\n  var positionB = bodyB.c_position;\n\n  var mA = this.v_invMassA;\n  var iA = this.v_invIA;\n  var mB = this.v_invMassB;\n  var iB = this.v_invIB;\n\n  var vA = Vec2.clone(velocityA.v);\n  var wA = velocityA.w;\n  var vB = Vec2.clone(velocityB.v);\n  var wB = velocityB.w;\n\n  var normal = this.v_normal;\n  var tangent = Vec2.cross(normal, 1.0);\n  var friction = this.v_friction;\n\n  _ASSERT && common.assert(this.v_pointCount == 1 || this.v_pointCount == 2);\n\n  // Solve tangent constraints first because non-penetration is more important\n  // than friction.\n  for (var j = 0; j < this.v_pointCount; ++j) {\n    var vcp = this.v_points[j]; // VelocityConstraintPoint\n\n    // Relative velocity at contact\n    var dv = Vec2.zero();\n    dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n    dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n    // Compute tangent force\n    var vt = Vec2.dot(dv, tangent) - this.v_tangentSpeed;\n    var lambda = vcp.tangentMass * (-vt);\n\n    // Clamp the accumulated force\n    var maxFriction = friction * vcp.normalImpulse;\n    var newImpulse = Math.clamp(vcp.tangentImpulse + lambda, -maxFriction,\n        maxFriction);\n    lambda = newImpulse - vcp.tangentImpulse;\n    vcp.tangentImpulse = newImpulse;\n\n    // Apply contact impulse\n    var P = Vec2.mul(lambda, tangent);\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(vcp.rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(vcp.rB, P);\n  }\n\n  // Solve normal constraints\n  if (this.v_pointCount == 1 || step.blockSolve == false) {\n    for (var i = 0; i < this.v_pointCount; ++i) {\n      var vcp = this.v_points[i]; // VelocityConstraintPoint\n\n      // Relative velocity at contact\n      var dv = Vec2.zero();\n      dv.addCombine(1, vB, 1, Vec2.cross(wB, vcp.rB));\n      dv.subCombine(1, vA, 1, Vec2.cross(wA, vcp.rA));\n\n      // Compute normal impulse\n      var vn = Vec2.dot(dv, normal);\n      var lambda = -vcp.normalMass * (vn - vcp.velocityBias);\n\n      // Clamp the accumulated impulse\n      var newImpulse = Math.max(vcp.normalImpulse + lambda, 0.0);\n      lambda = newImpulse - vcp.normalImpulse;\n      vcp.normalImpulse = newImpulse;\n\n      // Apply contact impulse\n      var P = Vec2.mul(lambda, normal);\n\n      vA.subMul(mA, P);\n      wA -= iA * Vec2.cross(vcp.rA, P);\n\n      vB.addMul(mB, P);\n      wB += iB * Vec2.cross(vcp.rB, P);\n    }\n  } else {\n    // Block solver developed in collaboration with Dirk Gregorius (back in\n    // 01/07 on Box2D_Lite).\n    // Build the mini LCP for this contact patch\n    //\n    // vn = A * x + b, vn >= 0, , vn >= 0, x >= 0 and vn_i * x_i = 0 with i =\n    // 1..2\n    //\n    // A = J * W * JT and J = ( -n, -r1 x n, n, r2 x n )\n    // b = vn0 - velocityBias\n    //\n    // The system is solved using the \"Total enumeration method\" (s. Murty).\n    // The complementary constraint vn_i * x_i\n    // implies that we must have in any solution either vn_i = 0 or x_i = 0.\n    // So for the 2D contact problem the cases\n    // vn1 = 0 and vn2 = 0, x1 = 0 and x2 = 0, x1 = 0 and vn2 = 0, x2 = 0 and\n    // vn1 = 0 need to be tested. The first valid\n    // solution that satisfies the problem is chosen.\n    // \n    // In order to account of the accumulated impulse 'a' (because of the\n    // iterative nature of the solver which only requires\n    // that the accumulated impulse is clamped and not the incremental\n    // impulse) we change the impulse variable (x_i).\n    //\n    // Substitute:\n    // \n    // x = a + d\n    // \n    // a := old total impulse\n    // x := new total impulse\n    // d := incremental impulse\n    //\n    // For the current iteration we extend the formula for the incremental\n    // impulse\n    // to compute the new total impulse:\n    //\n    // vn = A * d + b\n    // = A * (x - a) + b\n    // = A * x + b - A * a\n    // = A * x + b'\n    // b' = b - A * a;\n\n    var vcp1 = this.v_points[0]; // VelocityConstraintPoint\n    var vcp2 = this.v_points[1]; // VelocityConstraintPoint\n\n    var a = Vec2.neo(vcp1.normalImpulse, vcp2.normalImpulse);\n    _ASSERT && common.assert(a.x >= 0.0 && a.y >= 0.0);\n\n    // Relative velocity at contact\n    var dv1 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp1.rB)).sub(vA).sub(Vec2.cross(wA, vcp1.rA));\n    var dv2 = Vec2.zero().add(vB).add(Vec2.cross(wB, vcp2.rB)).sub(vA).sub(Vec2.cross(wA, vcp2.rA));\n\n    // Compute normal velocity\n    var vn1 = Vec2.dot(dv1, normal);\n    var vn2 = Vec2.dot(dv2, normal);\n\n    var b = Vec2.neo(vn1 - vcp1.velocityBias, vn2 - vcp2.velocityBias);\n\n    // Compute b'\n    b.sub(Mat22.mulVec2(this.v_K, a));\n\n    var k_errorTol = 1e-3;\n    // NOT_USED(k_errorTol);\n\n    for (;;) {\n      //\n      // Case 1: vn = 0\n      //\n      // 0 = A * x + b'\n      //\n      // Solve for x:\n      //\n      // x = - inv(A) * b'\n      //\n      var x = Mat22.mulVec2(this.v_normalMass, b).neg();\n\n      if (x.x >= 0.0 && x.y >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          dv1 = vB + Vec2.cross(wB, vcp1.rB) - vA - Vec2.cross(wA, vcp1.rA);\n          dv2 = vB + Vec2.cross(wB, vcp2.rB) - vA - Vec2.cross(wA, vcp2.rA);\n\n          // Compute normal velocity\n          vn1 = Dot(dv1, normal);\n          vn2 = Dot(dv2, normal);\n\n          _ASSERT && common.assert(Abs(vn1 - vcp1.velocityBias) < k_errorTol);\n          _ASSERT && common.assert(Abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 2: vn1 = 0 and x2 = 0\n      //\n      // 0 = a11 * x1 + a12 * 0 + b1'\n      // vn2 = a21 * x1 + a22 * 0 + b2'\n      //\n      x.x = -vcp1.normalMass * b.x;\n      x.y = 0.0;\n      vn1 = 0.0;\n      vn2 = this.v_K.ex.y * x.x + b.y;\n\n      if (x.x >= 0.0 && vn2 >= 0.0) {\n        // Get the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv1B = Vec2.add(vB, Vec2.cross(wB, vcp1.rB));\n          var dv1A = Vec2.add(vA, Vec2.cross(wA, vcp1.rA));\n          var dv1 = Vec2.sub(dv1B, dv1A);\n\n          // Compute normal velocity\n          vn1 = Vec2.dot(dv1, normal);\n\n          _ASSERT && common.assert(Math.abs(vn1 - vcp1.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 3: vn2 = 0 and x1 = 0\n      //\n      // vn1 = a11 * 0 + a12 * x2 + b1'\n      // 0 = a21 * 0 + a22 * x2 + b2'\n      //\n      x.x = 0.0;\n      x.y = -vcp2.normalMass * b.y;\n      vn1 = this.v_K.ey.x * x.y + b.x;\n      vn2 = 0.0;\n\n      if (x.y >= 0.0 && vn1 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        if (DEBUG_SOLVER) {\n          // Postconditions\n          var dv2B = Vec2.add(vB, Vec2.cross(wB, vcp2.rB));\n          var dv2A = Vec2.add(vA, Vec2.cross(wA, vcp2.rA));\n          var dv1 = Vec2.sub(dv2B, dv2A);\n\n          // Compute normal velocity\n          vn2 = Vec2.dot(dv2, normal);\n\n          _ASSERT && common.assert(Math.abs(vn2 - vcp2.velocityBias) < k_errorTol);\n        }\n        break;\n      }\n\n      //\n      // Case 4: x1 = 0 and x2 = 0\n      // \n      // vn1 = b1\n      // vn2 = b2;\n      //\n      x.x = 0.0;\n      x.y = 0.0;\n      vn1 = b.x;\n      vn2 = b.y;\n\n      if (vn1 >= 0.0 && vn2 >= 0.0) {\n        // Resubstitute for the incremental impulse\n        var d = Vec2.sub(x, a);\n\n        // Apply incremental impulse\n        var P1 = Vec2.mul(d.x, normal);\n        var P2 = Vec2.mul(d.y, normal);\n        vA.subCombine(mA, P1, mA, P2);\n        wA -= iA * (Vec2.cross(vcp1.rA, P1) + Vec2.cross(vcp2.rA, P2));\n\n        vB.addCombine(mB, P1, mB, P2);\n        wB += iB * (Vec2.cross(vcp1.rB, P1) + Vec2.cross(vcp2.rB, P2));\n\n        // Accumulate\n        vcp1.normalImpulse = x.x;\n        vcp2.normalImpulse = x.y;\n\n        break;\n      }\n\n      // No solution, give up. This is hit sometimes, but it doesn't seem to\n      // matter.\n      break;\n    }\n  }\n\n  velocityA.v.set(vA);\n  velocityA.w = wA;\n\n  velocityB.v.set(vB);\n  velocityB.w = wB;\n};\n\n/**\n * Friction mixing law. The idea is to allow either fixture to drive the\n * restitution to zero. For example, anything slides on ice.\n */\nfunction mixFriction(friction1, friction2) {\n  return Math.sqrt(friction1 * friction2);\n}\n\n/**\n * Restitution mixing law. The idea is allow for anything to bounce off an\n * inelastic surface. For example, a superball bounces on anything.\n */\nfunction mixRestitution(restitution1, restitution2) {\n  return restitution1 > restitution2 ? restitution1 : restitution2;\n}\n\nvar s_registers = [];\n\n/**\n * @param fn function(fixtureA, indexA, fixtureB, indexB) Contact\n */\nContact.addType = function(type1, type2, callback) {\n\n  s_registers[type1] = s_registers[type1] || {};\n  s_registers[type1][type2] = callback;\n}\n\nContact.create = function(fixtureA, indexA, fixtureB, indexB) {\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  // TODO: pool contacts\n  var contact, evaluateFcn;\n  if (evaluateFcn = s_registers[typeA] && s_registers[typeA][typeB]) {\n    contact = new Contact(fixtureA, indexA, fixtureB, indexB, evaluateFcn);\n  } else if (evaluateFcn = s_registers[typeB] && s_registers[typeB][typeA]) {\n    contact = new Contact(fixtureB, indexB, fixtureA, indexA, evaluateFcn);\n  } else {\n    return null;\n  }\n\n  // Contact creation may swap fixtures.\n  fixtureA = contact.getFixtureA();\n  fixtureB = contact.getFixtureB();\n  indexA = contact.getChildIndexA();\n  indexB = contact.getChildIndexB();\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Connect to body A\n  contact.m_nodeA.contact = contact;\n  contact.m_nodeA.other = bodyB;\n\n  contact.m_nodeA.prev = null;\n  contact.m_nodeA.next = bodyA.m_contactList;\n  if (bodyA.m_contactList != null) {\n    bodyA.m_contactList.prev = contact.m_nodeA;\n  }\n  bodyA.m_contactList = contact.m_nodeA;\n\n  // Connect to body B\n  contact.m_nodeB.contact = contact;\n  contact.m_nodeB.other = bodyA;\n\n  contact.m_nodeB.prev = null;\n  contact.m_nodeB.next = bodyB.m_contactList;\n  if (bodyB.m_contactList != null) {\n    bodyB.m_contactList.prev = contact.m_nodeB;\n  }\n  bodyB.m_contactList = contact.m_nodeB;\n\n  // Wake up the bodies\n  if (fixtureA.isSensor() == false && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  return contact;\n}\n\nContact.destroy = function(contact, listener) {\n  var fixtureA = contact.m_fixtureA;\n  var fixtureB = contact.m_fixtureB;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  if (contact.isTouching()) {\n    listener.endContact(contact);\n  }\n\n  // Remove from body 1\n  if (contact.m_nodeA.prev) {\n    contact.m_nodeA.prev.next = contact.m_nodeA.next;\n  }\n\n  if (contact.m_nodeA.next) {\n    contact.m_nodeA.next.prev = contact.m_nodeA.prev;\n  }\n\n  if (contact.m_nodeA == bodyA.m_contactList) {\n    bodyA.m_contactList = contact.m_nodeA.next;\n  }\n\n  // Remove from body 2\n  if (contact.m_nodeB.prev) {\n    contact.m_nodeB.prev.next = contact.m_nodeB.next;\n  }\n\n  if (contact.m_nodeB.next) {\n    contact.m_nodeB.next.prev = contact.m_nodeB.prev;\n  }\n\n  if (contact.m_nodeB == bodyB.m_contactList) {\n    bodyB.m_contactList = contact.m_nodeB.next;\n  }\n\n  if (contact.m_manifold.pointCount > 0 && fixtureA.isSensor() == false\n      && fixtureB.isSensor() == false) {\n    bodyA.setAwake(true);\n    bodyB.setAwake(true);\n  }\n\n  var typeA = fixtureA.getType(); // Shape.Type\n  var typeB = fixtureB.getType(); // Shape.Type\n\n  var destroyFcn = s_registers[typeA][typeB].destroyFcn;\n  if (typeof destroyFcn === 'function') {\n    destroyFcn(contact);\n  }\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Transform = require('./common/Transform');\nvar Math = require('./common/Math');\nvar Rot = require('./common/Rot');\n\nmodule.exports = Manifold;\nmodule.exports.clipSegmentToLine = clipSegmentToLine;\nmodule.exports.clipVertex = ClipVertex;\nmodule.exports.getPointStates = getPointStates;\nmodule.exports.PointState = PointState;\n\n// Manifold Type\nManifold.e_circles = 0;\nManifold.e_faceA = 1;\nManifold.e_faceB = 2;\n\n// ContactFeature Type\nManifold.e_vertex = 0;\nManifold.e_face = 1;\n\n/**\n * A manifold for two touching convex shapes. Manifolds are created in `evaluate`\n * method of Contact subclasses.\n * \n * Supported manifold types are e_faceA or e_faceB for clip point versus plane\n * with radius and e_circles point versus point with radius.\n * \n * We store contacts in this way so that position correction can account for\n * movement, which is critical for continuous physics. All contact scenarios\n * must be expressed in one of these types. This structure is stored across time\n * steps, so we keep it small.\n * \n * @prop type e_circle, e_faceA, e_faceB\n * @prop localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleA <br>\n *       e_faceA: the center of faceA <br>\n *       e_faceB: the center of faceB\n * @prop localNormal Usage depends on manifold type:<br>\n *       e_circles: not used <br>\n *       e_faceA: the normal on polygonA <br>\n *       e_faceB: the normal on polygonB\n * @prop points The points of contact {ManifoldPoint[]}\n * @prop pointCount The number of manifold points\n */\nfunction Manifold() {\n  this.type;\n  this.localNormal = Vec2.zero();\n  this.localPoint = Vec2.zero();\n  this.points = [ new ManifoldPoint(), new ManifoldPoint() ];\n  this.pointCount = 0;\n};\n\n/**\n * A manifold point is a contact point belonging to a contact manifold. It holds\n * details related to the geometry and dynamics of the contact points.\n * \n * This structure is stored across time steps, so we keep it small.\n * \n * Note: impulses are used for internal caching and may not provide reliable\n * contact forces, especially for high speed collisions.\n * \n * @prop {Vec2} localPoint Usage depends on manifold type:<br>\n *       e_circles: the local center of circleB<br>\n *       e_faceA: the local center of cirlceB or the clip point of polygonB<br>\n *       e_faceB: the clip point of polygonA.\n * @prop normalImpulse The non-penetration impulse\n * @prop tangentImpulse The friction impulse\n * @prop {ContactID} id Uniquely identifies a contact point between two shapes\n *       to facilatate warm starting\n */\nfunction ManifoldPoint() {\n  this.localPoint = Vec2.zero();\n  this.normalImpulse = 0;\n  this.tangentImpulse = 0;\n  this.id = new ContactID();\n};\n\n/**\n * Contact ids to facilitate warm starting.\n * \n * @prop {ContactFeature} cf\n * @prop key Used to quickly compare contact ids.\n * \n */\nfunction ContactID() {\n  this.cf = new ContactFeature();\n};\n\nObject.defineProperty(ContactID.prototype, 'key', {\n  get: function() {\n    return this.cf.indexA + this.cf.indexB * 4 + this.cf.typeA * 16 + this.cf.typeB * 64;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nContactID.prototype.set = function(o) {\n  // this.key = o.key;\n  this.cf.set(o.cf);\n};\n\n/**\n * The features that intersect to form the contact point.\n * \n * @prop indexA Feature index on shapeA\n * @prop indexB Feature index on shapeB\n * @prop typeA The feature type on shapeA\n * @prop typeB The feature type on shapeB\n */\nfunction ContactFeature() {\n  this.indexA;\n  this.indexB;\n  this.typeA;\n  this.typeB;\n};\n\nContactFeature.prototype.set = function(o) {\n  this.indexA = o.indexA;\n  this.indexB = o.indexB;\n  this.typeA = o.typeA;\n  this.typeB = o.typeB;\n};\n\n/**\n * This is used to compute the current state of a contact manifold.\n * \n * @prop normal World vector pointing from A to B\n * @prop points World contact point (point of intersection)\n * @prop separations A negative value indicates overlap, in meters\n */\nfunction WorldManifold() {\n  this.normal;\n  this.points = []; // [maxManifoldPoints]\n  this.separations = []; // float[maxManifoldPoints]\n};\n\n/**\n * Evaluate the manifold with supplied transforms. This assumes modest motion\n * from the original state. This does not change the point count, impulses, etc.\n * The radii must come from the shapes that generated the manifold.\n * \n * @param {WorldManifold} [wm]\n */\nManifold.prototype.getWorldManifold = function(wm, xfA, radiusA, xfB, radiusB) {\n  if (this.pointCount == 0) {\n    return;\n  }\n\n  wm = wm || new WorldManifold();\n\n  var normal = wm.normal;\n  var points = wm.points;\n  var separations = wm.separations;\n\n  // TODO: improve\n  switch (this.type) {\n  case Manifold.e_circles:\n    normal = Vec2.neo(1.0, 0.0);\n    var pointA = Transform.mulVec2(xfA, this.localPoint);\n    var pointB = Transform.mulVec2(xfB, this.points[0].localPoint);\n    var dist = Vec2.sub(pointB, pointA);\n    if (Vec2.lengthSquared(dist) > Math.EPSILON * Math.EPSILON) {\n      normal.set(dist);\n      normal.normalize();\n    }\n    var cA = pointA.clone().addMul(radiusA, normal);\n    var cB = pointB.clone().addMul(-radiusB, normal);\n    points[0] = Vec2.mid(cA, cB);\n    separations[0] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    points.length = 1;\n    separations.length = 1;\n    break;\n\n  case Manifold.e_faceA:\n    normal = Rot.mulVec2(xfA.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfA, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfB, this.points[i].localPoint);\n      var cA = Vec2.clone(clipPoint).addMul(radiusA - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cB = Vec2.clone(clipPoint).subMul(radiusB, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cB, cA), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    break;\n\n  case Manifold.e_faceB:\n    normal = Rot.mulVec2(xfB.q, this.localNormal);\n    var planePoint = Transform.mulVec2(xfB, this.localPoint);\n\n    for (var i = 0; i < this.pointCount; ++i) {\n      var clipPoint = Transform.mulVec2(xfA, this.points[i].localPoint);\n      var cB = Vec2.combine(1, clipPoint, radiusB - Vec2.dot(Vec2.sub(clipPoint, planePoint), normal), normal);\n      var cA = Vec2.combine(1, clipPoint, -radiusA, normal);\n      points[i] = Vec2.mid(cA, cB);\n      separations[i] = Vec2.dot(Vec2.sub(cA, cB), normal);\n    }\n    points.length = this.pointCount;\n    separations.length = this.pointCount;\n    // Ensure normal points from A to B.\n    normal.mul(-1);\n    break;\n  }\n\n  wm.normal = normal;\n  wm.points = points;\n  wm.separations = separations;\n  return wm;\n}\n\n/**\n * This is used for determining the state of contact points.\n * \n * @prop {0} nullState Point does not exist\n * @prop {1} addState Point was added in the update\n * @prop {2} persistState Point persisted across the update\n * @prop {3} removeState Point was removed in the update\n */\nvar PointState = {\n  // TODO: use constants\n  nullState : 0,\n  addState : 1,\n  persistState : 2,\n  removeState : 3\n};\n\n/**\n * Compute the point states given two manifolds. The states pertain to the\n * transition from manifold1 to manifold2. So state1 is either persist or remove\n * while state2 is either add or persist.\n * \n * @param {PointState[Settings.maxManifoldPoints]} state1\n * @param {PointState[Settings.maxManifoldPoints]} state2\n */\nfunction getPointStates(state1, state2, manifold1, manifold2) {\n  // for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n  // state1[i] = PointState.nullState;\n  // state2[i] = PointState.nullState;\n  // }\n\n  // Detect persists and removes.\n  for (var i = 0; i < manifold1.pointCount; ++i) {\n    var id = manifold1.points[i].id;// ContactID\n\n    state1[i] = PointState.removeState;\n\n    for (var j = 0; j < manifold2.pointCount; ++j) {\n      if (manifold2.points[j].id.key == id.key) {\n        state1[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n\n  // Detect persists and adds.\n  for (var i = 0; i < manifold2.pointCount; ++i) {\n    var id = manifold2.points[i].id;// ContactID\n\n    state2[i] = PointState.addState;\n\n    for (var j = 0; j < manifold1.pointCount; ++j) {\n      if (manifold1.points[j].id.key == id.key) {\n        state2[i] = PointState.persistState;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Used for computing contact manifolds.\n * \n * @prop {Vec2} v\n * @prop {ContactID} id\n */\nfunction ClipVertex() {\n  this.v = Vec2.zero();\n  this.id = new ContactID();\n};\n\nClipVertex.prototype.set = function(o) {\n  this.v.set(o.v);\n  this.id.set(o.id);\n};\n\n/**\n * Clipping for contact manifolds. Sutherland-Hodgman clipping.\n * \n * @param {ClipVertex[2]} vOut\n * @param {ClipVertex[2]} vIn\n */\nfunction clipSegmentToLine(vOut, vIn, normal, offset, vertexIndexA) {\n  // Start with no output points\n  var numOut = 0;\n\n  // Calculate the distance of end points to the line\n  var distance0 = Vec2.dot(normal, vIn[0].v) - offset;\n  var distance1 = Vec2.dot(normal, vIn[1].v) - offset;\n\n  // If the points are behind the plane\n  if (distance0 <= 0.0)\n    vOut[numOut++].set(vIn[0]);\n  if (distance1 <= 0.0)\n    vOut[numOut++].set(vIn[1]);\n\n  // If the points are on different sides of the plane\n  if (distance0 * distance1 < 0.0) {\n    // Find intersection point of edge and plane\n    var interp = distance0 / (distance0 - distance1);\n    vOut[numOut].v.setCombine(1 - interp, vIn[0].v, interp, vIn[1].v);\n\n    // VertexA is hitting edgeB.\n    vOut[numOut].id.cf.indexA = vertexIndexA;\n    vOut[numOut].id.cf.indexB = vIn[0].id.cf.indexB;\n    vOut[numOut].id.cf.typeA = Manifold.e_vertex;\n    vOut[numOut].id.cf.typeB = Manifold.e_face;\n    ++numOut;\n  }\n\n  return numOut;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PolygonShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nPolygonShape._super = Shape;\nPolygonShape.prototype = create(PolygonShape._super.prototype);\n\nPolygonShape.TYPE = 'polygon';\nShape.TYPES[PolygonShape.TYPE] = PolygonShape;\n\n/**\n * A convex polygon. It is assumed that the interior of the polygon is to the\n * left of each edge. Polygons have a maximum number of vertices equal to\n * Settings.maxPolygonVertices. In most cases you should not need many vertices\n * for a convex polygon. extends Shape\n */\nfunction PolygonShape(vertices) {\n  if (!(this instanceof PolygonShape)) {\n    return new PolygonShape(vertices);\n  }\n\n  PolygonShape._super.call(this);\n\n  this.m_type = PolygonShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_centroid = Vec2.zero();\n  this.m_vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_normals = []; // Vec2[Settings.maxPolygonVertices]\n  this.m_count = 0;\n\n  if (vertices && vertices.length) {\n    this._set(vertices);\n  }\n}\n\nPolygonShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertices: this.m_vertices,\n  };\n};\n\nPolygonShape._deserialize = function(data, fixture, restore) {\n  var vertices = data.vertices && data.vertices.map(v => Vec2._deserialize(v));\n  var shape = new PolygonShape(vertices);\n  return shape;\n};\n\nPolygonShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * @deprecated\n */\nPolygonShape.prototype._clone = function() {\n  var clone = new PolygonShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_count = this.m_count;\n  clone.m_centroid.set(this.m_centroid);\n  for (var i = 0; i < this.m_count; i++) {\n    clone.m_vertices.push(this.m_vertices[i].clone());\n  }\n  for (var i = 0; i < this.m_normals.length; i++) {\n    clone.m_normals.push(this.m_normals[i].clone());\n  }\n  return clone;\n}\n\nPolygonShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nfunction ComputeCentroid(vs, count) {\n  _ASSERT && common.assert(count >= 3);\n\n  var c = Vec2.zero();\n  var area = 0.0;\n\n  // pRef is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var pRef = Vec2.zero();\n  if (false) {\n    // This code would put the reference point inside the polygon.\n    for (var i = 0; i < count; ++i) {\n      pRef.add(vs[i]);\n    }\n    pRef.mul(1.0 / count);\n  }\n\n  var inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < count; ++i) {\n    // Triangle vertices.\n    var p1 = pRef;\n    var p2 = vs[i];\n    var p3 = i + 1 < count ? vs[i + 1] : vs[0];\n\n    var e1 = Vec2.sub(p2, p1);\n    var e2 = Vec2.sub(p3, p1);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    c.addMul(triangleArea * inv3, p1);\n    c.addMul(triangleArea * inv3, p2);\n    c.addMul(triangleArea * inv3, p3);\n  }\n\n  // Centroid\n  _ASSERT && common.assert(area > Math.EPSILON);\n  c.mul(1.0 / area);\n  return c;\n}\n\nPolygonShape.prototype._reset = function() {\n  this._set(this.m_vertices)\n}\n\n/**\n * @private\n *\n * Create a convex hull from the given array of local points. The count must be\n * in the range [3, Settings.maxPolygonVertices].\n *\n * Warning: the points may be re-ordered, even if they form a convex polygon\n * Warning: collinear points are handled but not removed. Collinear points may\n * lead to poor stacking behavior.\n */\nPolygonShape.prototype._set = function(vertices) {\n  _ASSERT && common.assert(3 <= vertices.length && vertices.length <= Settings.maxPolygonVertices);\n  if (vertices.length < 3) {\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  var n = Math.min(vertices.length, Settings.maxPolygonVertices);\n\n  // Perform welding and copy vertices into local buffer.\n  var ps = []; // [Settings.maxPolygonVertices];\n  for (var i = 0; i < n; ++i) {\n    var v = vertices[i];\n\n    var unique = true;\n    for (var j = 0; j < ps.length; ++j) {\n      if (Vec2.distanceSquared(v, ps[j]) < 0.25 * Settings.linearSlopSquared) {\n        unique = false;\n        break;\n      }\n    }\n\n    if (unique) {\n      ps.push(v);\n    }\n  }\n\n  n = ps.length;\n  if (n < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  // Create the convex hull using the Gift wrapping algorithm\n  // http://en.wikipedia.org/wiki/Gift_wrapping_algorithm\n\n  // Find the right most point on the hull (in case of multiple points bottom most is used)\n  var i0 = 0;\n  var x0 = ps[0].x;\n  for (var i = 1; i < n; ++i) {\n    var x = ps[i].x;\n    if (x > x0 || (x === x0 && ps[i].y < ps[i0].y)) {\n      i0 = i;\n      x0 = x;\n    }\n  }\n\n  var hull = []; // [Settings.maxPolygonVertices];\n  var m = 0;\n  var ih = i0;\n\n  for (;;) {\n    hull[m] = ih;\n\n    var ie = 0;\n    for (var j = 1; j < n; ++j) {\n      if (ie === ih) {\n        ie = j;\n        continue;\n      }\n\n      var r = Vec2.sub(ps[ie], ps[hull[m]]);\n      var v = Vec2.sub(ps[j], ps[hull[m]]);\n      var c = Vec2.cross(r, v);\n      // c < 0 means counter-clockwise wrapping, c > 0 means clockwise wrapping\n      if (c < 0.0) {\n        ie = j;\n      }\n\n      // Collinearity check\n      if (c === 0.0 && v.lengthSquared() > r.lengthSquared()) {\n        ie = j;\n      }\n    }\n\n    ++m;\n    ih = ie;\n\n    if (ie === i0) {\n      break;\n    }\n  }\n\n  if (m < 3) {\n    // Polygon is degenerate.\n    _ASSERT && common.assert(false);\n    this._setAsBox(1.0, 1.0);\n    return;\n  }\n\n  this.m_count = m;\n\n  // Copy vertices.\n  this.m_vertices = [];\n  for (var i = 0; i < m; ++i) {\n    this.m_vertices[i] = ps[hull[i]];\n  }\n\n  // Compute normals. Ensure the edges have non-zero length.\n  for (var i = 0; i < m; ++i) {\n    var i1 = i;\n    var i2 = i + 1 < m ? i + 1 : 0;\n    var edge = Vec2.sub(this.m_vertices[i2], this.m_vertices[i1]);\n    _ASSERT && common.assert(edge.lengthSquared() > Math.EPSILON * Math.EPSILON);\n    this.m_normals[i] = Vec2.cross(edge, 1.0);\n    this.m_normals[i].normalize();\n  }\n\n  // Compute the polygon centroid.\n  this.m_centroid = ComputeCentroid(this.m_vertices, m);\n}\n\n/**\n * @private\n */\nPolygonShape.prototype._setAsBox = function(hx, hy, center, angle) {\n  // start with right-bottom, counter-clockwise, as in Gift wrapping algorithm in PolygonShape._set()\n  this.m_vertices[0] = Vec2.neo(hx, -hy);\n  this.m_vertices[1] = Vec2.neo(hx, hy);\n  this.m_vertices[2] = Vec2.neo(-hx, hy);\n  this.m_vertices[3] = Vec2.neo(-hx, -hy);\n\n  this.m_normals[0] = Vec2.neo(1.0, 0.0);\n  this.m_normals[1] = Vec2.neo(0.0, 1.0);\n  this.m_normals[2] = Vec2.neo(-1.0, 0.0);\n  this.m_normals[3] = Vec2.neo(0.0, -1.0);\n\n  this.m_count = 4;\n\n  if (Vec2.isValid(center)) {\n    angle = angle || 0;\n\n    this.m_centroid.set(center);\n\n    var xf = Transform.identity();\n    xf.p.set(center);\n    xf.q.set(angle);\n\n    // Transform vertices and normals.\n    for (var i = 0; i < this.m_count; ++i) {\n      this.m_vertices[i] = Transform.mulVec2(xf, this.m_vertices[i]);\n      this.m_normals[i] = Rot.mulVec2(xf.q, this.m_normals[i]);\n    }\n  }\n}\n\nPolygonShape.prototype.testPoint = function(xf, p) {\n  var pLocal = Rot.mulTVec2(xf.q, Vec2.sub(p, xf.p));\n\n  for (var i = 0; i < this.m_count; ++i) {\n    var dot = Vec2.dot(this.m_normals[i], Vec2.sub(pLocal, this.m_vertices[i]));\n    if (dot > 0.0) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  // Put the ray into the polygon's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var lower = 0.0;\n  var upper = input.maxFraction;\n\n  var index = -1;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // p = p1 + a * d\n    // dot(normal, p - v) = 0\n    // dot(normal, p1 - v) + a * dot(normal, d) = 0\n    var numerator = Vec2.dot(this.m_normals[i], Vec2.sub(this.m_vertices[i], p1));\n    var denominator = Vec2.dot(this.m_normals[i], d);\n\n    if (denominator == 0.0) {\n      if (numerator < 0.0) {\n        return false;\n      }\n    } else {\n      // Note: we want this predicate without division:\n      // lower < numerator / denominator, where denominator < 0\n      // Since denominator < 0, we have to flip the inequality:\n      // lower < numerator / denominator <==> denominator * lower > numerator.\n      if (denominator < 0.0 && numerator < lower * denominator) {\n        // Increase lower.\n        // The segment enters this half-space.\n        lower = numerator / denominator;\n        index = i;\n      } else if (denominator > 0.0 && numerator < upper * denominator) {\n        // Decrease upper.\n        // The segment exits this half-space.\n        upper = numerator / denominator;\n      }\n    }\n\n    // The use of epsilon here causes the assert on lower to trip\n    // in some cases. Apparently the use of epsilon was to make edge\n    // shapes work, but now those are handled separately.\n    // if (upper < lower - Math.EPSILON)\n    if (upper < lower) {\n      return false;\n    }\n  }\n\n  _ASSERT && common.assert(0.0 <= lower && lower <= input.maxFraction);\n\n  if (index >= 0) {\n    output.fraction = lower;\n    output.normal = Rot.mulVec2(xf.q, this.m_normals[index]);\n    return true;\n  }\n\n  return false;\n};\n\nPolygonShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var minX = Infinity, minY = Infinity;\n  var maxX = -Infinity, maxY = -Infinity;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = Transform.mulVec2(xf, this.m_vertices[i]);\n    minX = Math.min(minX, v.x);\n    maxX = Math.max(maxX, v.x);\n    minY = Math.min(minY, v.y);\n    maxY = Math.max(maxY, v.y);\n  }\n\n  aabb.lowerBound.set(minX, minY);\n  aabb.upperBound.set(maxX, maxY);\n  aabb.extend(this.m_radius);\n}\n\nPolygonShape.prototype.computeMass = function(massData, density) {\n  // Polygon mass, centroid, and inertia.\n  // Let rho be the polygon density in mass per unit area.\n  // Then:\n  // mass = rho * int(dA)\n  // centroid.x = (1/mass) * rho * int(x * dA)\n  // centroid.y = (1/mass) * rho * int(y * dA)\n  // I = rho * int((x*x + y*y) * dA)\n  //\n  // We can compute these integrals by summing all the integrals\n  // for each triangle of the polygon. To evaluate the integral\n  // for a single triangle, we make a change of variables to\n  // the (u,v) coordinates of the triangle:\n  // x = x0 + e1x * u + e2x * v\n  // y = y0 + e1y * u + e2y * v\n  // where 0 <= u && 0 <= v && u + v <= 1.\n  //\n  // We integrate u from [0,1-v] and then v from [0,1].\n  // We also need to use the Jacobian of the transformation:\n  // D = cross(e1, e2)\n  //\n  // Simplification: triangle centroid = (1/3) * (p1 + p2 + p3)\n  //\n  // The rest of the derivation is handled by computer algebra.\n\n  _ASSERT && common.assert(this.m_count >= 3);\n\n  var center = Vec2.zero();\n  var area = 0.0;\n  var I = 0.0;\n\n  // s is the reference point for forming triangles.\n  // It's location doesn't change the result (except for rounding error).\n  var s = Vec2.zero();\n\n  // This code would put the reference point inside the polygon.\n  for (var i = 0; i < this.m_count; ++i) {\n    s.add(this.m_vertices[i]);\n  }\n  s.mul(1.0 / this.m_count);\n\n  var k_inv3 = 1.0 / 3.0;\n\n  for (var i = 0; i < this.m_count; ++i) {\n    // Triangle vertices.\n    var e1 = Vec2.sub(this.m_vertices[i], s);\n    var e2 = i + 1 < this.m_count ? Vec2.sub(this.m_vertices[i + 1], s) : Vec2\n        .sub(this.m_vertices[0], s);\n\n    var D = Vec2.cross(e1, e2);\n\n    var triangleArea = 0.5 * D;\n    area += triangleArea;\n\n    // Area weighted centroid\n    center.addCombine(triangleArea * k_inv3, e1, triangleArea * k_inv3, e2);\n\n    var ex1 = e1.x;\n    var ey1 = e1.y;\n    var ex2 = e2.x;\n    var ey2 = e2.y;\n\n    var intx2 = ex1 * ex1 + ex2 * ex1 + ex2 * ex2;\n    var inty2 = ey1 * ey1 + ey2 * ey1 + ey2 * ey2;\n\n    I += (0.25 * k_inv3 * D) * (intx2 + inty2);\n  }\n\n  // Total mass\n  massData.mass = density * area;\n\n  // Center of mass\n  _ASSERT && common.assert(area > Math.EPSILON);\n  center.mul(1.0 / area);\n  massData.center.setCombine(1, center, 1, s);\n\n  // Inertia tensor relative to the local origin (point s).\n  massData.I = density * I;\n\n  // Shift to center of mass then to original body origin.\n  massData.I += massData.mass\n      * (Vec2.dot(massData.center, massData.center) - Vec2.dot(center, center));\n}\n\n// Validate convexity. This is a very time consuming operation.\n// @returns true if valid\nPolygonShape.prototype.validate = function() {\n  for (var i = 0; i < this.m_count; ++i) {\n    var i1 = i;\n    var i2 = i < this.m_count - 1 ? i1 + 1 : 0;\n    var p = this.m_vertices[i1];\n    var e = Vec2.sub(this.m_vertices[i2], p);\n\n    for (var j = 0; j < this.m_count; ++j) {\n      if (j == i1 || j == i2) {\n        continue;\n      }\n\n      var v = Vec2.sub(this.m_vertices[j], p);\n      var c = Vec2.cross(e, v);\n      if (c < 0.0) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nPolygonShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices = this.m_vertices;\n  proxy.m_count = this.m_count;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Distance;\n\nmodule.exports.Input = DistanceInput;\nmodule.exports.Output = DistanceOutput;\nmodule.exports.Proxy = DistanceProxy;\nmodule.exports.Cache = SimplexCache;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\n/**\n * GJK using Voronoi regions (Christer Ericson) and Barycentric coordinates.\n */\n\nstats.gjkCalls = 0;\nstats.gjkIters = 0;\nstats.gjkMaxIters = 0;\n\n/**\n * Input for Distance. You have to option to use the shape radii in the\n * computation. Even\n */\nfunction DistanceInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.transformA = null;\n  this.transformB = null;\n  this.useRadii = false;\n};\n\n/**\n * Output for Distance.\n *\n * @prop {Vec2} pointA closest point on shapeA\n * @prop {Vec2} pointB closest point on shapeB\n * @prop distance\n * @prop iterations number of GJK iterations used\n */\nfunction DistanceOutput() {\n  this.pointA = Vec2.zero();\n  this.pointB = Vec2.zero();\n  this.distance;\n  this.iterations;\n}\n\n/**\n * Used to warm start Distance. Set count to zero on first call.\n *\n * @prop {number} metric length or area\n * @prop {array} indexA vertices on shape A\n * @prop {array} indexB vertices on shape B\n * @prop {number} count\n */\nfunction SimplexCache() {\n  this.metric = 0;\n  this.indexA = [];\n  this.indexB = [];\n  this.count = 0;\n};\n\n/**\n * Compute the closest points between two shapes. Supports any combination of:\n * CircleShape, PolygonShape, EdgeShape. The simplex cache is input/output. On\n * the first call set SimplexCache.count to zero.\n *\n * @param {DistanceOutput} output\n * @param {SimplexCache} cache\n * @param {DistanceInput} input\n */\nfunction Distance(output, cache, input) {\n  ++stats.gjkCalls;\n\n  var proxyA = input.proxyA;\n  var proxyB = input.proxyB;\n  var xfA = input.transformA;\n  var xfB = input.transformB;\n\n  // Initialize the simplex.\n  var simplex = new Simplex();\n  simplex.readCache(cache, proxyA, xfA, proxyB, xfB);\n\n  // Get simplex vertices as an array.\n  var vertices = simplex.m_v;// SimplexVertex\n  var k_maxIters = Settings.maxDistnceIterations;\n\n  // These store the vertices of the last simplex so that we\n  // can check for duplicates and prevent cycling.\n  var saveA = [];\n  var saveB = []; // int[3]\n  var saveCount = 0;\n\n  var distanceSqr1 = Infinity;\n  var distanceSqr2 = Infinity;\n\n  // Main iteration loop.\n  var iter = 0;\n  while (iter < k_maxIters) {\n    // Copy simplex so we can identify duplicates.\n    saveCount = simplex.m_count;\n    for (var i = 0; i < saveCount; ++i) {\n      saveA[i] = vertices[i].indexA;\n      saveB[i] = vertices[i].indexB;\n    }\n\n    simplex.solve();\n\n    // If we have 3 points, then the origin is in the corresponding triangle.\n    if (simplex.m_count == 3) {\n      break;\n    }\n\n    // Compute closest point.\n    var p = simplex.getClosestPoint();\n    distanceSqr2 = p.lengthSquared();\n\n    // Ensure progress\n    if (distanceSqr2 >= distanceSqr1) {\n      // break;\n    }\n    distanceSqr1 = distanceSqr2;\n\n    // Get search direction.\n    var d = simplex.getSearchDirection();\n\n    // Ensure the search direction is numerically fit.\n    if (d.lengthSquared() < Math.EPSILON * Math.EPSILON) {\n      // The origin is probably contained by a line segment\n      // or triangle. Thus the shapes are overlapped.\n\n      // We can't return zero here even though there may be overlap.\n      // In case the simplex is a point, segment, or triangle it is difficult\n      // to determine if the origin is contained in the CSO or very close to it.\n      break;\n    }\n\n    // Compute a tentative new simplex vertex using support points.\n    var vertex = vertices[simplex.m_count]; // SimplexVertex\n\n    vertex.indexA = proxyA.getSupport(Rot.mulTVec2(xfA.q, Vec2.neg(d)));\n    vertex.wA = Transform.mulVec2(xfA, proxyA.getVertex(vertex.indexA));\n\n    vertex.indexB = proxyB.getSupport(Rot.mulTVec2(xfB.q, d));\n    vertex.wB = Transform.mulVec2(xfB, proxyB.getVertex(vertex.indexB));\n\n    vertex.w = Vec2.sub(vertex.wB, vertex.wA);\n\n    // Iteration count is equated to the number of support point calls.\n    ++iter;\n    ++stats.gjkIters;\n\n    // Check for duplicate support points. This is the main termination\n    // criteria.\n    var duplicate = false;\n    for (var i = 0; i < saveCount; ++i) {\n      if (vertex.indexA == saveA[i] && vertex.indexB == saveB[i]) {\n        duplicate = true;\n        break;\n      }\n    }\n\n    // If we found a duplicate support point we must exit to avoid cycling.\n    if (duplicate) {\n      break;\n    }\n\n    // New vertex is ok and needed.\n    ++simplex.m_count;\n  }\n\n  stats.gjkMaxIters = Math.max(stats.gjkMaxIters, iter);\n\n  // Prepare output.\n  simplex.getWitnessPoints(output.pointA, output.pointB);\n  output.distance = Vec2.distance(output.pointA, output.pointB);\n  output.iterations = iter;\n\n  // Cache the simplex.\n  simplex.writeCache(cache);\n\n  // Apply radii if requested.\n  if (input.useRadii) {\n    var rA = proxyA.m_radius;\n    var rB = proxyB.m_radius;\n\n    if (output.distance > rA + rB && output.distance > Math.EPSILON) {\n      // Shapes are still no overlapped.\n      // Move the witness points to the outer surface.\n      output.distance -= rA + rB;\n      var normal = Vec2.sub(output.pointB, output.pointA);\n      normal.normalize();\n      output.pointA.addMul(rA, normal);\n      output.pointB.subMul(rB, normal);\n    } else {\n      // Shapes are overlapped when radii are considered.\n      // Move the witness points to the middle.\n      var p = Vec2.mid(output.pointA, output.pointB);\n      output.pointA.set(p);\n      output.pointB.set(p);\n      output.distance = 0.0;\n    }\n  }\n}\n\n/**\n * A distance proxy is used by the GJK algorithm. It encapsulates any shape.\n */\nfunction DistanceProxy() {\n  this.m_buffer = []; // Vec2[2]\n  this.m_vertices = []; // Vec2[]\n  this.m_count = 0;\n  this.m_radius = 0;\n};\n\n/**\n * Get the vertex count.\n */\nDistanceProxy.prototype.getVertexCount = function() {\n  return this.m_count;\n}\n\n/**\n * Get a vertex by index. Used by Distance.\n */\nDistanceProxy.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index < this.m_count);\n  return this.m_vertices[index];\n}\n\n/**\n * Get the supporting vertex index in the given direction.\n */\nDistanceProxy.prototype.getSupport = function(d) {\n  var bestIndex = 0;\n  var bestValue = Vec2.dot(this.m_vertices[0], d);\n  for (var i = 0; i < this.m_count; ++i) {\n    var value = Vec2.dot(this.m_vertices[i], d);\n    if (value > bestValue) {\n      bestIndex = i;\n      bestValue = value;\n    }\n  }\n  return bestIndex;\n}\n\n/**\n * Get the supporting vertex in the given direction.\n */\nDistanceProxy.prototype.getSupportVertex = function(d) {\n  return this.m_vertices[this.getSupport(d)];\n}\n\n/**\n * Initialize the proxy using the given shape. The shape must remain in scope\n * while the proxy is in use.\n */\nDistanceProxy.prototype.set = function(shape, index) {\n  // TODO remove, use shape instead\n  _ASSERT && common.assert(typeof shape.computeDistanceProxy === 'function');\n  shape.computeDistanceProxy(this, index);\n}\n\nfunction SimplexVertex() {\n  this.indexA; // wA index\n  this.indexB; // wB index\n  this.wA = Vec2.zero(); // support point in proxyA\n  this.wB = Vec2.zero(); // support point in proxyB\n  this.w = Vec2.zero(); // wB - wA\n  this.a; // barycentric coordinate for closest point\n};\n\nSimplexVertex.prototype.set = function(v) {\n  this.indexA = v.indexA;\n  this.indexB = v.indexB;\n  this.wA = Vec2.clone(v.wA);\n  this.wB = Vec2.clone(v.wB);\n  this.w = Vec2.clone(v.w);\n  this.a = v.a;\n};\n\nfunction Simplex() {\n  this.m_v1 = new SimplexVertex();\n  this.m_v2 = new SimplexVertex();\n  this.m_v3 = new SimplexVertex();\n  this.m_v = [ this.m_v1, this.m_v2, this.m_v3 ];\n  this.m_count;\n};\n\nSimplex.prototype.print = function() {\n  if (this.m_count == 3) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y,\n      this.m_v3.a, this.m_v3.wA.x, this.m_v3.wA.y, this.m_v3.wB.x, this.m_v3.wB.y\n    ].toString();\n\n  } else if (this.m_count == 2) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y,\n      this.m_v2.a, this.m_v2.wA.x, this.m_v2.wA.y, this.m_v2.wB.x, this.m_v2.wB.y\n    ].toString();\n\n  } else if (this.m_count == 1) {\n    return [\"+\" + this.m_count,\n      this.m_v1.a, this.m_v1.wA.x, this.m_v1.wA.y, this.m_v1.wB.x, this.m_v1.wB.y\n    ].toString();\n\n  } else {\n    return \"+\" + this.m_count;\n  }\n};\n\n// (SimplexCache, DistanceProxy, ...)\nSimplex.prototype.readCache = function(cache, proxyA, transformA, proxyB, transformB) {\n  _ASSERT && common.assert(cache.count <= 3);\n\n  // Copy data from cache.\n  this.m_count = cache.count;\n  for (var i = 0; i < this.m_count; ++i) {\n    var v = this.m_v[i];\n    v.indexA = cache.indexA[i];\n    v.indexB = cache.indexB[i];\n    var wALocal = proxyA.getVertex(v.indexA);\n    var wBLocal = proxyB.getVertex(v.indexB);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 0.0;\n  }\n\n  // Compute the new simplex metric, if it is substantially different than\n  // old metric then flush the simplex.\n  if (this.m_count > 1) {\n    var metric1 = cache.metric;\n    var metric2 = this.getMetric();\n    if (metric2 < 0.5 * metric1 || 2.0 * metric1 < metric2\n        || metric2 < Math.EPSILON) {\n      // Reset the simplex.\n      this.m_count = 0;\n    }\n  }\n\n  // If the cache is empty or invalid...\n  if (this.m_count == 0) {\n    var v = this.m_v[0];// SimplexVertex\n    v.indexA = 0;\n    v.indexB = 0;\n    var wALocal = proxyA.getVertex(0);\n    var wBLocal = proxyB.getVertex(0);\n    v.wA = Transform.mulVec2(transformA, wALocal);\n    v.wB = Transform.mulVec2(transformB, wBLocal);\n    v.w = Vec2.sub(v.wB, v.wA);\n    v.a = 1.0;\n    this.m_count = 1;\n  }\n}\n\n// (SimplexCache)\nSimplex.prototype.writeCache = function(cache) {\n  cache.metric = this.getMetric();\n  cache.count = this.m_count;\n  for (var i = 0; i < this.m_count; ++i) {\n    cache.indexA[i] = this.m_v[i].indexA;\n    cache.indexB[i] = this.m_v[i].indexB;\n  }\n}\n\nSimplex.prototype.getSearchDirection = function() {\n  switch (this.m_count) {\n  case 1:\n    return Vec2.neg(this.m_v1.w);\n\n  case 2: {\n    var e12 = Vec2.sub(this.m_v2.w, this.m_v1.w);\n    var sgn = Vec2.cross(e12, Vec2.neg(this.m_v1.w));\n    if (sgn > 0.0) {\n      // Origin is left of e12.\n      return Vec2.cross(1.0, e12);\n    } else {\n      // Origin is right of e12.\n      return Vec2.cross(e12, 1.0);\n    }\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getClosestPoint = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n\n  case 1:\n    return Vec2.clone(this.m_v1.w);\n\n  case 2:\n    return Vec2.combine(this.m_v1.a, this.m_v1.w, this.m_v2.a, this.m_v2.w);\n\n  case 3:\n    return Vec2.zero();\n\n  default:\n    _ASSERT && common.assert(false);\n    return Vec2.zero();\n  }\n}\n\nSimplex.prototype.getWitnessPoints = function(pA, pB) {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    break;\n\n  case 1:\n    pA.set(this.m_v1.wA);\n    pB.set(this.m_v1.wB);\n    break;\n\n  case 2:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pB.setCombine(this.m_v1.a, this.m_v1.wB, this.m_v2.a, this.m_v2.wB);\n    break;\n\n  case 3:\n    pA.setCombine(this.m_v1.a, this.m_v1.wA, this.m_v2.a, this.m_v2.wA);\n    pA.addMul(this.m_v3.a, this.m_v3.wA);\n    pB.set(pA);\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n    break;\n  }\n}\n\nSimplex.prototype.getMetric = function() {\n  switch (this.m_count) {\n  case 0:\n    _ASSERT && common.assert(false);\n    return 0.0;\n\n  case 1:\n    return 0.0;\n\n  case 2:\n    return Vec2.distance(this.m_v1.w, this.m_v2.w);\n\n  case 3:\n    return Vec2.cross(Vec2.sub(this.m_v2.w, this.m_v1.w), Vec2.sub(this.m_v3.w,\n        this.m_v1.w));\n\n  default:\n    _ASSERT && common.assert(false);\n    return 0.0;\n  }\n}\n\nSimplex.prototype.solve = function() {\n  switch (this.m_count) {\n  case 1:\n    break;\n\n  case 2:\n    this.solve2();\n    break;\n\n  case 3:\n    this.solve3();\n    break;\n\n  default:\n    _ASSERT && common.assert(false);\n  }\n}\n\n// Solve a line segment using barycentric coordinates.\n//\n// p = a1 * w1 + a2 * w2\n// a1 + a2 = 1\n//\n// The vector from the origin to the closest point on the line is\n// perpendicular to the line.\n// e12 = w2 - w1\n// dot(p, e) = 0\n// a1 * dot(w1, e) + a2 * dot(w2, e) = 0\n//\n// 2-by-2 linear system\n// [1 1 ][a1] = [1]\n// [w1.e12 w2.e12][a2] = [0]\n//\n// Define\n// d12_1 = dot(w2, e12)\n// d12_2 = -dot(w1, e12)\n// d12 = d12_1 + d12_2\n//\n// Solution\n// a1 = d12_1 / d12\n// a2 = d12_2 / d12\nSimplex.prototype.solve2 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var e12 = Vec2.sub(w2, w1);\n\n  // w1 region\n  var d12_2 = -Vec2.dot(w1, e12);\n  if (d12_2 <= 0.0) {\n    // a2 <= 0, so we clamp it to 0\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // w2 region\n  var d12_1 = Vec2.dot(w2, e12);\n  if (d12_1 <= 0.0) {\n    // a1 <= 0, so we clamp it to 0\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // Must be in e12 region.\n  var inv_d12 = 1.0 / (d12_1 + d12_2);\n  this.m_v1.a = d12_1 * inv_d12;\n  this.m_v2.a = d12_2 * inv_d12;\n  this.m_count = 2;\n}\n\n// Possible regions:\n// - points[2]\n// - edge points[0]-points[2]\n// - edge points[1]-points[2]\n// - inside the triangle\nSimplex.prototype.solve3 = function() {\n  var w1 = this.m_v1.w;\n  var w2 = this.m_v2.w;\n  var w3 = this.m_v3.w;\n\n  // Edge12\n  // [1 1 ][a1] = [1]\n  // [w1.e12 w2.e12][a2] = [0]\n  // a3 = 0\n  var e12 = Vec2.sub(w2, w1);\n  var w1e12 = Vec2.dot(w1, e12);\n  var w2e12 = Vec2.dot(w2, e12);\n  var d12_1 = w2e12;\n  var d12_2 = -w1e12;\n\n  // Edge13\n  // [1 1 ][a1] = [1]\n  // [w1.e13 w3.e13][a3] = [0]\n  // a2 = 0\n  var e13 = Vec2.sub(w3, w1);\n  var w1e13 = Vec2.dot(w1, e13);\n  var w3e13 = Vec2.dot(w3, e13);\n  var d13_1 = w3e13;\n  var d13_2 = -w1e13;\n\n  // Edge23\n  // [1 1 ][a2] = [1]\n  // [w2.e23 w3.e23][a3] = [0]\n  // a1 = 0\n  var e23 = Vec2.sub(w3, w2);// Vec2\n  var w2e23 = Vec2.dot(w2, e23);\n  var w3e23 = Vec2.dot(w3, e23);\n  var d23_1 = w3e23;\n  var d23_2 = -w2e23;\n\n  // Triangle123\n  var n123 = Vec2.cross(e12, e13);\n\n  var d123_1 = n123 * Vec2.cross(w2, w3);\n  var d123_2 = n123 * Vec2.cross(w3, w1);\n  var d123_3 = n123 * Vec2.cross(w1, w2);\n\n  // w1 region\n  if (d12_2 <= 0.0 && d13_2 <= 0.0) {\n    this.m_v1.a = 1.0;\n    this.m_count = 1;\n    return;\n  }\n\n  // e12\n  if (d12_1 > 0.0 && d12_2 > 0.0 && d123_3 <= 0.0) {\n    var inv_d12 = 1.0 / (d12_1 + d12_2);\n    this.m_v1.a = d12_1 * inv_d12;\n    this.m_v2.a = d12_2 * inv_d12;\n    this.m_count = 2;\n    return;\n  }\n\n  // e13\n  if (d13_1 > 0.0 && d13_2 > 0.0 && d123_2 <= 0.0) {\n    var inv_d13 = 1.0 / (d13_1 + d13_2);\n    this.m_v1.a = d13_1 * inv_d13;\n    this.m_v3.a = d13_2 * inv_d13;\n    this.m_count = 2;\n    this.m_v2.set(this.m_v3);\n    return;\n  }\n\n  // w2 region\n  if (d12_1 <= 0.0 && d23_2 <= 0.0) {\n    this.m_v2.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v2);\n    return;\n  }\n\n  // w3 region\n  if (d13_1 <= 0.0 && d23_1 <= 0.0) {\n    this.m_v3.a = 1.0;\n    this.m_count = 1;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // e23\n  if (d23_1 > 0.0 && d23_2 > 0.0 && d123_1 <= 0.0) {\n    var inv_d23 = 1.0 / (d23_1 + d23_2);\n    this.m_v2.a = d23_1 * inv_d23;\n    this.m_v3.a = d23_2 * inv_d23;\n    this.m_count = 2;\n    this.m_v1.set(this.m_v3);\n    return;\n  }\n\n  // Must be in triangle123\n  var inv_d123 = 1.0 / (d123_1 + d123_2 + d123_3);\n  this.m_v1.a = d123_1 * inv_d123;\n  this.m_v2.a = d123_2 * inv_d123;\n  this.m_v3.a = d123_3 * inv_d123;\n  this.m_count = 3;\n}\n\n/**\n * Determine if two generic shapes overlap.\n */\nDistance.testOverlap = function(shapeA, indexA, shapeB, indexB, xfA, xfB) {\n  var input = new DistanceInput();\n  input.proxyA.set(shapeA, indexA);\n  input.proxyB.set(shapeB, indexB);\n  input.transformA = xfA;\n  input.transformB = xfB;\n  input.useRadii = true;\n\n  var cache = new SimplexCache();\n\n  var output = new DistanceOutput();\n  Distance(output, cache, input);\n\n  return output.distance < 10.0 * Math.EPSILON;\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = CircleShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\n\nCircleShape._super = Shape;\nCircleShape.prototype = create(CircleShape._super.prototype);\n\nCircleShape.TYPE = 'circle';\nShape.TYPES[CircleShape.TYPE] = CircleShape;\n\nfunction CircleShape(a, b) {\n  if (!(this instanceof CircleShape)) {\n    return new CircleShape(a, b);\n  }\n\n  CircleShape._super.call(this);\n\n  this.m_type = CircleShape.TYPE;\n  this.m_p = Vec2.zero();\n  this.m_radius = 1;\n\n  if (typeof a === 'object' && Vec2.isValid(a)) {\n    this.m_p.set(a);\n\n    if (typeof b === 'number') {\n      this.m_radius = b;\n    }\n\n  } else if (typeof a === 'number') {\n    this.m_radius = a;\n  }\n}\n\nCircleShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    p: this.m_p,\n    radius: this.m_radius,\n  };\n};\n\nCircleShape._deserialize = function(data) {\n  return new CircleShape(data.p, data.radius);\n};\n\nCircleShape.prototype.getRadius = function() {\n  return this.m_radius;\n}\n\nCircleShape.prototype.getCenter = function() {\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(index == 0);\n  return this.m_p;\n}\n\nCircleShape.prototype.getVertexCount = function(index) {\n  return 1;\n}\n\n/**\n * @deprecated\n */\nCircleShape.prototype._clone = function() {\n  var clone = new CircleShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_p = this.m_p.clone();\n  return clone;\n}\n\nCircleShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nCircleShape.prototype.testPoint = function(xf, p) {\n  var center = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var d = Vec2.sub(p, center);\n  return Vec2.dot(d, d) <= this.m_radius * this.m_radius;\n}\n\n// Collision Detection in Interactive 3D Environments by Gino van den Bergen\n// From Section 3.1.2\n// x = s + a * r\n// norm(x) = radius\nCircleShape.prototype.rayCast = function(output, input, xf, childIndex) {\n\n  var position = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  var s = Vec2.sub(input.p1, position);\n  var b = Vec2.dot(s, s) - this.m_radius * this.m_radius;\n\n  // Solve quadratic equation.\n  var r = Vec2.sub(input.p2, input.p1);\n  var c = Vec2.dot(s, r);\n  var rr = Vec2.dot(r, r);\n  var sigma = c * c - rr * b;\n\n  // Check for negative discriminant and short segment.\n  if (sigma < 0.0 || rr < Math.EPSILON) {\n    return false;\n  }\n\n  // Find the point of intersection of the line with the circle.\n  var a = -(c + Math.sqrt(sigma));\n\n  // Is the intersection point on the segment?\n  if (0.0 <= a && a <= input.maxFraction * rr) {\n    a /= rr;\n    output.fraction = a;\n    output.normal = Vec2.add(s, Vec2.mul(a, r));\n    output.normal.normalize();\n    return true;\n  }\n\n  return false;\n}\n\nCircleShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var p = Vec2.add(xf.p, Rot.mulVec2(xf.q, this.m_p));\n  aabb.lowerBound.set(p.x - this.m_radius, p.y - this.m_radius);\n  aabb.upperBound.set(p.x + this.m_radius, p.y + this.m_radius);\n}\n\nCircleShape.prototype.computeMass = function(massData, density) {\n  massData.mass = density * Math.PI * this.m_radius * this.m_radius;\n  massData.center = this.m_p;\n  // inertia about the local origin\n  massData.I = massData.mass\n      * (0.5 * this.m_radius * this.m_radius + Vec2.dot(this.m_p, this.m_p));\n}\n\nCircleShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_p);\n  proxy.m_count = 1;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = EdgeShape;\n\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\n\nEdgeShape._super = Shape;\nEdgeShape.prototype = create(EdgeShape._super.prototype);\n\nEdgeShape.TYPE = 'edge';\nShape.TYPES[EdgeShape.TYPE] = EdgeShape;\n\n/**\n * A line segment (edge) shape. These can be connected in chains or loops to\n * other edge shapes. The connectivity information is used to ensure correct\n * contact normals.\n */\nfunction EdgeShape(v1, v2) {\n  if (!(this instanceof EdgeShape)) {\n    return new EdgeShape(v1, v2);\n  }\n\n  EdgeShape._super.call(this);\n\n  this.m_type = EdgeShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n\n  // These are the edge vertices\n  this.m_vertex1 = v1 ? Vec2.clone(v1) : Vec2.zero();\n  this.m_vertex2 = v2 ? Vec2.clone(v2) : Vec2.zero();\n\n  // Optional adjacent vertices. These are used for smooth collision.\n  // Used by chain shape.\n  this.m_vertex0 = Vec2.zero();\n  this.m_vertex3 = Vec2.zero();\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n}\n\nEdgeShape.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n\n    vertex1: this.m_vertex1,\n    vertex2: this.m_vertex2,\n\n    vertex0: this.m_vertex0,\n    vertex3: this.m_vertex3,\n    hasVertex0: this.m_hasVertex0,\n    hasVertex3: this.m_hasVertex3,\n  };\n};\n\nEdgeShape._deserialize = function(data) {\n  var shape = new EdgeShape(data.vertex1, data.vertex2);\n  if (shape.hasVertex0) {\n    shape.setPrev(data.vertex0);\n  }\n  if (shape.hasVertex3) {\n    shape.setNext(data.vertex3);\n  }\n  return shape;\n};\n\nEdgeShape.prototype.setNext = function(v3) {\n  if (v3) {\n    this.m_vertex3.set(v3);\n    this.m_hasVertex3 = true;\n  } else {\n    this.m_vertex3.setZero();\n    this.m_hasVertex3 = false;\n  }\n  return this;\n};\n\nEdgeShape.prototype.setPrev = function(v0) {\n  if (v0) {\n    this.m_vertex0.set(v0);\n    this.m_hasVertex0 = true;\n  } else {\n    this.m_vertex0.setZero();\n    this.m_hasVertex0 = false;\n  }\n  return this;\n};\n\n/**\n * Set this as an isolated edge.\n */\nEdgeShape.prototype._set = function(v1, v2) {\n  this.m_vertex1.set(v1);\n  this.m_vertex2.set(v2);\n  this.m_hasVertex0 = false;\n  this.m_hasVertex3 = false;\n  return this;\n}\n\n/**\n * @deprecated\n */\nEdgeShape.prototype._clone = function() {\n  var clone = new EdgeShape();\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_vertex1.set(this.m_vertex1);\n  clone.m_vertex2.set(this.m_vertex2);\n  clone.m_vertex0.set(this.m_vertex0);\n  clone.m_vertex3.set(this.m_vertex3);\n  clone.m_hasVertex0 = this.m_hasVertex0;\n  clone.m_hasVertex3 = this.m_hasVertex3;\n  return clone;\n}\n\nEdgeShape.prototype.getChildCount = function() {\n  return 1;\n}\n\nEdgeShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\n// p = p1 + t * d\n// v = v1 + s * e\n// p1 + t * d = v1 + s * e\n// s * e - t * d = p1 - v1\nEdgeShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  // NOT_USED(childIndex);\n\n  // Put the ray into the edge's frame of reference.\n  var p1 = Rot.mulTVec2(xf.q, Vec2.sub(input.p1, xf.p));\n  var p2 = Rot.mulTVec2(xf.q, Vec2.sub(input.p2, xf.p));\n  var d = Vec2.sub(p2, p1);\n\n  var v1 = this.m_vertex1;\n  var v2 = this.m_vertex2;\n  var e = Vec2.sub(v2, v1);\n  var normal = Vec2.neo(e.y, -e.x);\n  normal.normalize();\n\n  // q = p1 + t * d\n  // dot(normal, q - v1) = 0\n  // dot(normal, p1 - v1) + t * dot(normal, d) = 0\n  var numerator = Vec2.dot(normal, Vec2.sub(v1, p1));\n  var denominator = Vec2.dot(normal, d);\n\n  if (denominator == 0.0) {\n    return false;\n  }\n\n  var t = numerator / denominator;\n  if (t < 0.0 || input.maxFraction < t) {\n    return false;\n  }\n\n  var q = Vec2.add(p1, Vec2.mul(t, d));\n\n  // q = v1 + s * r\n  // s = dot(q - v1, r) / dot(r, r)\n  var r = Vec2.sub(v2, v1);\n  var rr = Vec2.dot(r, r);\n  if (rr == 0.0) {\n    return false;\n  }\n\n  var s = Vec2.dot(Vec2.sub(q, v1), r) / rr;\n  if (s < 0.0 || 1.0 < s) {\n    return false;\n  }\n\n  output.fraction = t;\n  if (numerator > 0.0) {\n    output.normal = Rot.mulVec2(xf.q, normal).neg();\n  } else {\n    output.normal = Rot.mulVec2(xf.q, normal);\n  }\n  return true;\n}\n\nEdgeShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  var v1 = Transform.mulVec2(xf, this.m_vertex1);\n  var v2 = Transform.mulVec2(xf, this.m_vertex2);\n\n  aabb.combinePoints(v1, v2);\n  aabb.extend(this.m_radius)\n}\n\nEdgeShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center.setCombine(0.5, this.m_vertex1, 0.5, this.m_vertex2);\n  massData.I = 0.0;\n}\n\nEdgeShape.prototype.computeDistanceProxy = function(proxy) {\n  proxy.m_vertices.push(this.m_vertex1);\n  proxy.m_vertices.push(this.m_vertex2);\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nexports.toString = function(newline) {\n  newline = typeof newline === 'string' ? newline : '\\n';\n  var string = \"\";\n  for (var name in this) {\n    if (typeof this[name] !== 'function' && typeof this[name] !== 'object') {\n      string += name + ': ' + this[name] + newline;\n    }\n  }\n  return string;\n};","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = ChainShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar options = require('../util/options');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar EdgeShape = require('./EdgeShape');\n\nChainShape._super = Shape;\nChainShape.prototype = create(ChainShape._super.prototype);\n\nChainShape.TYPE = 'chain';\nShape.TYPES[ChainShape.TYPE] = ChainShape;\n\n/**\n * A chain shape is a free form sequence of line segments. The chain has\n * two-sided collision, so you can use inside and outside collision. Therefore,\n * you may use any winding order. Connectivity information is used to create\n * smooth collisions.\n *\n * WARNING: The chain will not collide properly if there are self-intersections.\n */\nfunction ChainShape(vertices, loop) {\n  if (!(this instanceof ChainShape)) {\n    return new ChainShape(vertices, loop);\n  }\n\n  ChainShape._super.call(this);\n\n  this.m_type = ChainShape.TYPE;\n  this.m_radius = Settings.polygonRadius;\n  this.m_vertices = [];\n  this.m_count = 0;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n\n  this.m_isLoop = loop;\n\n  if (vertices && vertices.length) {\n    if (loop) {\n      this._createLoop(vertices);\n    } else {\n      this._createChain(vertices);\n    }\n  }\n}\n\nChainShape.prototype._serialize = function() {\n  const data = {\n    type: this.m_type,\n    vertices: this.m_vertices,\n    isLoop: this.m_isLoop,\n    hasPrevVertex: this.m_hasPrevVertex,\n    hasNextVertex: this.m_hasNextVertex,\n  };\n  if (this.m_prevVertex) {\n    data.prevVertex = this.m_prevVertex;\n  }\n  if (this.m_nextVertex) {\n    data.nextVertex = this.m_nextVertex;\n  }\n  return data;\n};\n\nChainShape._deserialize = function(data) {\n  var shape = new ChainShape(data.vertices.map(Vec2._deserialize), data.isLoop);\n  if (data.prevVertex) {\n    shape._setPrevVertex(data.prevVertex);\n  }\n  if (data.nextVertex) {\n    shape._setNextVertex(data.nextVertex);\n  }\n  return shape;\n};\n\n// ChainShape.clear = function() {\n// this.m_vertices.length = 0;\n// this.m_count = 0;\n// }\n\n/**\n * Create a loop. This automatically adjusts connectivity.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createLoop = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 3);\n  for (var i = 1; i < vertices.length; ++i) {\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    // If the code crashes here, it means your vertices are too close together.\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_vertices = [];\n  this.m_count = vertices.length + 1;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n  this.m_vertices[vertices.length] = Vec2.clone(vertices[0]);\n\n  this.m_prevVertex = this.m_vertices[this.m_count - 2];\n  this.m_nextVertex = this.m_vertices[1];\n  this.m_hasPrevVertex = true;\n  this.m_hasNextVertex = true;\n  return this;\n}\n\n/**\n * Create a chain with isolated end vertices.\n *\n * @param vertices an array of vertices, these are copied\n * @param count the vertex count\n */\nChainShape.prototype._createChain = function(vertices) {\n  _ASSERT && common.assert(this.m_vertices.length == 0 && this.m_count == 0);\n  _ASSERT && common.assert(vertices.length >= 2);\n  for (var i = 1; i < vertices.length; ++i) {\n    // If the code crashes here, it means your vertices are too close together.\n    var v1 = vertices[i - 1];\n    var v2 = vertices[i];\n    _ASSERT && common.assert(Vec2.distanceSquared(v1, v2) > Settings.linearSlopSquared);\n  }\n\n  this.m_count = vertices.length;\n  for (var i = 0; i < vertices.length; ++i) {\n    this.m_vertices[i] = Vec2.clone(vertices[i]);\n  }\n\n  this.m_hasPrevVertex = false;\n  this.m_hasNextVertex = false;\n  this.m_prevVertex = null;\n  this.m_nextVertex = null;\n  return this;\n}\n\nChainShape.prototype._reset = function() {\n  if (this.m_isLoop) {\n    this._createLoop(this.m_vertices);\n  } else {\n    this._createChain(this.m_vertices);\n  }\n}\n\n/**\n * Establish connectivity to a vertex that precedes the first vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setPrevVertex = function(prevVertex) {\n  this.m_prevVertex = prevVertex;\n  this.m_hasPrevVertex = true;\n}\n\n/**\n * Establish connectivity to a vertex that follows the last vertex. Don't call\n * this for loops.\n */\nChainShape.prototype._setNextVertex = function(nextVertex) {\n  this.m_nextVertex = nextVertex;\n  this.m_hasNextVertex = true;\n}\n\n/**\n * @deprecated\n */\nChainShape.prototype._clone = function() {\n  var clone = new ChainShape();\n  clone.createChain(this.m_vertices);\n  clone.m_type = this.m_type;\n  clone.m_radius = this.m_radius;\n  clone.m_prevVertex = this.m_prevVertex;\n  clone.m_nextVertex = this.m_nextVertex;\n  clone.m_hasPrevVertex = this.m_hasPrevVertex;\n  clone.m_hasNextVertex = this.m_hasNextVertex;\n  return clone;\n}\n\nChainShape.prototype.getChildCount = function() {\n  // edge count = vertex count - 1\n  return this.m_count - 1;\n}\n\n// Get a child edge.\nChainShape.prototype.getChildEdge = function(edge, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count - 1);\n  edge.m_type = EdgeShape.TYPE;\n  edge.m_radius = this.m_radius;\n\n  edge.m_vertex1 = this.m_vertices[childIndex];\n  edge.m_vertex2 = this.m_vertices[childIndex + 1];\n\n  if (childIndex > 0) {\n    edge.m_vertex0 = this.m_vertices[childIndex - 1];\n    edge.m_hasVertex0 = true;\n  } else {\n    edge.m_vertex0 = this.m_prevVertex;\n    edge.m_hasVertex0 = this.m_hasPrevVertex;\n  }\n\n  if (childIndex < this.m_count - 2) {\n    edge.m_vertex3 = this.m_vertices[childIndex + 2];\n    edge.m_hasVertex3 = true;\n  } else {\n    edge.m_vertex3 = this.m_nextVertex;\n    edge.m_hasVertex3 = this.m_hasNextVertex;\n  }\n}\n\nChainShape.prototype.getVertex = function(index) {\n  _ASSERT && common.assert(0 <= index && index <= this.m_count);\n  if (index < this.m_count) {\n    return this.m_vertices[index];\n  } else {\n    return this.m_vertices[0];\n  }\n}\n\n/**\n * This always return false.\n */\nChainShape.prototype.testPoint = function(xf, p) {\n  return false;\n}\n\nChainShape.prototype.rayCast = function(output, input, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var edgeShape = new EdgeShape(this.getVertex(childIndex), this.getVertex(childIndex + 1));\n  return edgeShape.rayCast(output, input, xf, 0);\n}\n\nChainShape.prototype.computeAABB = function(aabb, xf, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n\n  var v1 = Transform.mulVec2(xf, this.getVertex(childIndex));\n  var v2 = Transform.mulVec2(xf, this.getVertex(childIndex + 1));\n\n  aabb.combinePoints(v1, v2);\n}\n\n/**\n * Chains have zero mass.\n */\nChainShape.prototype.computeMass = function(massData, density) {\n  massData.mass = 0.0;\n  massData.center = Vec2.neo();\n  massData.I = 0.0;\n}\n\nChainShape.prototype.computeDistanceProxy = function(proxy, childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_count);\n  proxy.m_buffer[0] = this.getVertex(childIndex);\n  proxy.m_buffer[1] = this.getVertex(childIndex + 1);\n  proxy.m_vertices = proxy.m_buffer;\n  proxy.m_count = 2;\n  proxy.m_radius = this.m_radius;\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = World;\n\nvar options = require('./util/options');\nvar common = require('./util/common');\nvar Vec2 = require('./common/Vec2');\nvar BroadPhase = require('./collision/BroadPhase');\nvar Solver = require('./Solver');\nvar Body = require('./Body');\nvar Joint = require('./Joint');\nvar Contact = require('./Contact');\n\n/**\n * @typedef {Object} WorldDef\n *\n * @prop {Vec2} [gravity = { x : 0, y : 0}]\n * @prop {boolean} [allowSleep = true]\n * @prop {boolean} [warmStarting = true]\n * @prop {boolean} [continuousPhysics = true]\n * @prop {boolean} [subStepping = false]\n * @prop {boolean} [blockSolve = true]\n * @prop {int} [velocityIterations = 8] For the velocity constraint solver.\n * @prop {int} [positionIterations = 3] For the position constraint solver.\n */\nvar WorldDef = {\n  gravity : Vec2.zero(),\n  allowSleep : true,\n  warmStarting : true,\n  continuousPhysics : true,\n  subStepping : false,\n  blockSolve : true,\n  velocityIterations : 8,\n  positionIterations : 3\n};\n\n/**\n * @param {WordDef|Vec2} def World definition or gravity vector.\n */\nfunction World(def) {\n  if (!(this instanceof World)) {\n    return new World(def);\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {gravity : def};\n  }\n\n  def = options(def, WorldDef);\n\n  this.m_solver = new Solver(this);\n\n  this.m_broadPhase = new BroadPhase();\n\n  this.m_contactList = null;\n  this.m_contactCount = 0;\n\n  this.m_bodyList = null;\n  this.m_bodyCount = 0;\n\n  this.m_jointList = null;\n  this.m_jointCount = 0;\n\n  this.m_stepComplete = true;\n\n  this.m_allowSleep = def.allowSleep;\n  this.m_gravity = Vec2.clone(def.gravity);\n\n  this.m_clearForces = true;\n  this.m_newFixture = false;\n  this.m_locked = false;\n\n  // These are for debugging the solver.\n  this.m_warmStarting = def.warmStarting;\n  this.m_continuousPhysics = def.continuousPhysics;\n  this.m_subStepping = def.subStepping;\n\n  this.m_blockSolve = def.blockSolve;\n  this.m_velocityIterations = def.velocityIterations;\n  this.m_positionIterations = def.positionIterations;\n\n  this.m_t = 0;\n\n  this.m_stepCount = 0;\n\n  // Broad-phase callback.\n  this.addPair = this.createContact.bind(this);\n}\n\nWorld.prototype._serialize = function() {\n  var bodies = [];\n  var joints = [];\n\n  for (var b = this.getBodyList(); b; b = b.getNext()) {\n    bodies.push(b);\n  }\n\n  for (var j = this.getJointList(); j; j = j.getNext()) {\n    if (typeof j._serialize === 'function') {\n      joints.push(j);\n    }\n  }\n\n  return {\n    gravity: this.m_gravity,\n    bodies: bodies,\n    joints: joints,\n  };\n};\n\nWorld._deserialize = function(data, context, restore) {\n  if (!data) {\n    return new World();\n  }\n\n  var world = new World(data.gravity);\n\n  if (data.bodies) {\n    for(var i = data.bodies.length - 1; i >= 0; i -= 1) {\n      world._addBody(restore(Body, data.bodies[i], world));\n    }\n  }\n\n  if (data.joints) {\n    for(var i = data.joints.length - 1; i >= 0; i--) {\n      world.createJoint(restore(Joint, data.joints[i], world));\n    }\n  }\n\n  return world;\n};\n\n/**\n * Get the world body list. With the returned body, use Body.getNext to get the\n * next body in the world list. A null body indicates the end of the list.\n *\n * @return the head of the world body list.\n */\nWorld.prototype.getBodyList = function() {\n  return this.m_bodyList;\n}\n\n/**\n * Get the world joint list. With the returned joint, use Joint.getNext to get\n * the next joint in the world list. A null joint indicates the end of the list.\n *\n * @return the head of the world joint list.\n */\nWorld.prototype.getJointList = function() {\n  return this.m_jointList;\n}\n\n/**\n * Get the world contact list. With the returned contact, use Contact.getNext to\n * get the next contact in the world list. A null contact indicates the end of\n * the list.\n *\n * @return the head of the world contact list. Warning: contacts are created and\n *         destroyed in the middle of a time step. Use ContactListener to avoid\n *         missing contacts.\n */\nWorld.prototype.getContactList = function() {\n  return this.m_contactList;\n}\n\nWorld.prototype.getBodyCount = function() {\n  return this.m_bodyCount;\n}\n\nWorld.prototype.getJointCount = function() {\n  return this.m_jointCount;\n}\n\n/**\n * Get the number of contacts (each may have 0 or more contact points).\n */\nWorld.prototype.getContactCount = function() {\n  return this.m_contactCount;\n}\n\n/**\n * Change the global gravity vector.\n */\nWorld.prototype.setGravity = function(gravity) {\n  this.m_gravity = gravity;\n}\n\n/**\n * Get the global gravity vector.\n */\nWorld.prototype.getGravity = function() {\n  return this.m_gravity;\n}\n\n/**\n * Is the world locked (in the middle of a time step).\n */\nWorld.prototype.isLocked = function() {\n  return this.m_locked;\n}\n\n/**\n * Enable/disable sleep.\n */\nWorld.prototype.setAllowSleeping = function(flag) {\n  if (flag == this.m_allowSleep) {\n    return;\n  }\n\n  this.m_allowSleep = flag;\n  if (this.m_allowSleep == false) {\n    for (var b = this.m_bodyList; b; b = b.m_next) {\n      b.setAwake(true);\n    }\n  }\n}\n\nWorld.prototype.getAllowSleeping = function() {\n  return this.m_allowSleep;\n}\n\n/**\n * Enable/disable warm starting. For testing.\n */\nWorld.prototype.setWarmStarting = function(flag) {\n  this.m_warmStarting = flag;\n}\n\nWorld.prototype.getWarmStarting = function() {\n  return this.m_warmStarting;\n}\n\n/**\n * Enable/disable continuous physics. For testing.\n */\nWorld.prototype.setContinuousPhysics = function(flag) {\n  this.m_continuousPhysics = flag;\n}\n\nWorld.prototype.getContinuousPhysics = function() {\n  return this.m_continuousPhysics;\n}\n\n/**\n * Enable/disable single stepped continuous physics. For testing.\n */\nWorld.prototype.setSubStepping = function(flag) {\n  this.m_subStepping = flag;\n}\n\nWorld.prototype.getSubStepping = function() {\n  return this.m_subStepping;\n}\n\n/**\n * Set flag to control automatic clearing of forces after each time step.\n */\nWorld.prototype.setAutoClearForces = function(flag) {\n  this.m_clearForces = flag;\n}\n\n/**\n * Get the flag that controls automatic clearing of forces after each time step.\n */\nWorld.prototype.getAutoClearForces = function() {\n  return this.m_clearForces;\n}\n\n/**\n * Manually clear the force buffer on all bodies. By default, forces are cleared\n * automatically after each call to step. The default behavior is modified by\n * calling setAutoClearForces. The purpose of this function is to support\n * sub-stepping. Sub-stepping is often used to maintain a fixed sized time step\n * under a variable frame-rate. When you perform sub-stepping you will disable\n * auto clearing of forces and instead call clearForces after all sub-steps are\n * complete in one pass of your game loop.\n *\n * @see setAutoClearForces\n */\nWorld.prototype.clearForces = function() {\n  for (var body = this.m_bodyList; body; body = body.getNext()) {\n    body.m_force.setZero();\n    body.m_torque = 0.0;\n  }\n}\n\n/**\n * @function World~rayCastCallback\n *\n * @param fixture\n */\n\n/**\n * Query the world for all fixtures that potentially overlap the provided AABB.\n *\n * @param {World~queryCallback} queryCallback Called for each fixture\n *          found in the query AABB. It may return `false` to terminate the\n *          query.\n *\n * @param aabb The query box.\n */\nWorld.prototype.queryAABB = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n  this.m_broadPhase.query(aabb, function(proxyId) { //TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    return queryCallback(proxy.fixture);\n  });\n}\n\n/**\n * @function World~rayCastCallback\n *\n * Callback class for ray casts. See World.rayCast\n *\n * Called for each fixture found in the query. You control how the ray cast\n * proceeds by returning a float: return -1: ignore this fixture and continue\n * return 0: terminate the ray cast return fraction: clip the ray to this point\n * return 1: don't clip the ray and continue\n *\n * @param fixture The fixture hit by the ray\n * @param point The point of initial intersection\n * @param normal The normal vector at the point of intersection\n * @param fraction\n *\n * @return {float} -1 to filter, 0 to terminate, fraction to clip the ray for\n *         closest hit, 1 to continue\n */\n\n/**\n *\n * Ray-cast the world for all fixtures in the path of the ray. Your callback\n * controls whether you get the closest point, any point, or n-points. The\n * ray-cast ignores shapes that contain the starting point.\n *\n * @param {World~RayCastCallback} reportFixtureCallback A user implemented\n *          callback function.\n * @param point1 The ray starting point\n * @param point2 The ray ending point\n */\nWorld.prototype.rayCast = function(point1, point2, reportFixtureCallback) {\n  _ASSERT && common.assert(typeof reportFixtureCallback === 'function');\n  var broadPhase = this.m_broadPhase;\n\n  this.m_broadPhase.rayCast({\n    maxFraction : 1.0,\n    p1 : point1,\n    p2 : point2\n  }, function(input, proxyId) { // TODO GC\n    var proxy = broadPhase.getUserData(proxyId); // FixtureProxy\n    var fixture = proxy.fixture;\n    var index = proxy.childIndex;\n    var output = {}; // TODO GC\n    var hit = fixture.rayCast(output, input, index);\n    if (hit) {\n      var fraction = output.fraction;\n      var point = Vec2.add(Vec2.mul((1.0 - fraction), input.p1), Vec2.mul(fraction, input.p2));\n      return reportFixtureCallback(fixture, point, output.normal, fraction);\n    }\n    return input.maxFraction;\n  });\n}\n\n/**\n * Get the number of broad-phase proxies.\n */\nWorld.prototype.getProxyCount = function() {\n  return this.m_broadPhase.getProxyCount();\n}\n\n/**\n * Get the height of broad-phase dynamic tree.\n */\nWorld.prototype.getTreeHeight = function() {\n  return this.m_broadPhase.getTreeHeight();\n}\n\n/**\n * Get the balance of broad-phase dynamic tree.\n *\n * @returns {int}\n */\nWorld.prototype.getTreeBalance = function() {\n  return this.m_broadPhase.getTreeBalance();\n}\n\n/**\n * Get the quality metric of broad-phase dynamic tree. The smaller the better.\n * The minimum is 1.\n *\n * @returns {float}\n */\nWorld.prototype.getTreeQuality = function() {\n  return this.m_broadPhase.getTreeQuality();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The body shift formula is:\n * position -= newOrigin\n *\n * @param {Vec2} newOrigin The new origin with respect to the old origin\n */\nWorld.prototype.shiftOrigin = function(newOrigin) {\n  _ASSERT && common.assert(this.m_locked == false);\n  if (this.m_locked) {\n    return;\n  }\n\n  for (var b = this.m_bodyList; b; b = b.m_next) {\n    b.m_xf.p.sub(newOrigin);\n    b.m_sweep.c0.sub(newOrigin);\n    b.m_sweep.c.sub(newOrigin);\n  }\n\n  for (var j = this.m_jointList; j; j = j.m_next) {\n    j.shiftOrigin(newOrigin);\n  }\n\n  this.m_broadPhase.shiftOrigin(newOrigin);\n}\n\n/**\n * @internal Used for deserialize.\n */\nWorld.prototype._addBody = function(body) {\n  _ASSERT && common.assert(this.isLocked() === false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Add to world doubly linked list.\n  body.m_prev = null;\n  body.m_next = this.m_bodyList;\n  if (this.m_bodyList) {\n    this.m_bodyList.m_prev = body;\n  }\n  this.m_bodyList = body;\n  ++this.m_bodyCount;\n}\n\n/**\n * Create a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {BodyDef|Vec2} def Body definition or position.\n * @param {float} angle Body angle if def is position.\n */\nWorld.prototype.createBody = function(def, angle) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  if (def && Vec2.isValid(def)) {\n    def = {\n      position : def,\n      angle : angle\n    };\n  }\n\n  var body = new Body(this, def);\n\n  this._addBody(body);\n\n  return body;\n}\n\nWorld.prototype.createDynamicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'dynamic';\n  return this.createBody(def);\n}\n\nWorld.prototype.createKinematicBody = function(def, angle) {\n  if (!def) {\n    def = {};\n  } else if (Vec2.isValid(def)) {\n    def = { position : def, angle : angle };\n  }\n  def.type = 'kinematic';\n  return this.createBody(def);\n}\n\n/**\n * Destroy a rigid body given a definition. No reference to the definition is\n * retained.\n *\n * Warning: This automatically deletes all associated shapes and joints.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Body} b\n */\nWorld.prototype.destroyBody = function(b) {\n  _ASSERT && common.assert(this.m_bodyCount > 0);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  if (b.m_destroyed) {\n    return false;\n  }\n\n  // Delete the attached joints.\n  var je = b.m_jointList;\n  while (je) {\n    var je0 = je;\n    je = je.next;\n\n    this.publish('remove-joint', je0.joint);\n    this.destroyJoint(je0.joint);\n\n    b.m_jointList = je;\n  }\n  b.m_jointList = null;\n\n  // Delete the attached contacts.\n  var ce = b.m_contactList;\n  while (ce) {\n    var ce0 = ce;\n    ce = ce.next;\n\n    this.destroyContact(ce0.contact);\n\n    b.m_contactList = ce;\n  }\n  b.m_contactList = null;\n\n  // Delete the attached fixtures. This destroys broad-phase proxies.\n  var f = b.m_fixtureList;\n  while (f) {\n    var f0 = f;\n    f = f.m_next;\n\n    this.publish('remove-fixture', f0);\n    f0.destroyProxies(this.m_broadPhase);\n\n    b.m_fixtureList = f;\n  }\n  b.m_fixtureList = null;\n\n  // Remove world body list.\n  if (b.m_prev) {\n    b.m_prev.m_next = b.m_next;\n  }\n\n  if (b.m_next) {\n    b.m_next.m_prev = b.m_prev;\n  }\n\n  if (b == this.m_bodyList) {\n    this.m_bodyList = b.m_next;\n  }\n\n  b.m_destroyed = true;\n\n  --this.m_bodyCount;\n\n  this.publish('remove-body', b);\n\n  return true;\n}\n\n/**\n * Create a joint to constrain bodies together. No reference to the definition\n * is retained. This may cause the connected bodies to cease colliding.\n *\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n * @param {Body} bodyB\n * @param {Body} bodyA\n */\nWorld.prototype.createJoint = function(joint) {\n  _ASSERT && common.assert(!!joint.m_bodyA);\n  _ASSERT && common.assert(!!joint.m_bodyB);\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return null;\n  }\n\n  // Connect to the world list.\n  joint.m_prev = null;\n  joint.m_next = this.m_jointList;\n  if (this.m_jointList) {\n    this.m_jointList.m_prev = joint;\n  }\n  this.m_jointList = joint;\n  ++this.m_jointCount;\n\n  // Connect to the bodies' doubly linked lists.\n  joint.m_edgeA.joint = joint;\n  joint.m_edgeA.other = joint.m_bodyB;\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = joint.m_bodyA.m_jointList;\n  if (joint.m_bodyA.m_jointList)\n    joint.m_bodyA.m_jointList.prev = joint.m_edgeA;\n  joint.m_bodyA.m_jointList = joint.m_edgeA;\n\n  joint.m_edgeB.joint = joint;\n  joint.m_edgeB.other = joint.m_bodyA;\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = joint.m_bodyB.m_jointList;\n  if (joint.m_bodyB.m_jointList)\n    joint.m_bodyB.m_jointList.prev = joint.m_edgeB;\n  joint.m_bodyB.m_jointList = joint.m_edgeB;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    for (var edge = joint.m_bodyB.getContactList(); edge; edge = edge.next) {\n      if (edge.other == joint.m_bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n    }\n  }\n\n  // Note: creating a joint doesn't wake the bodies.\n\n  return joint;\n}\n\n/**\n * Destroy a joint. This may cause the connected bodies to begin colliding.\n * Warning: This function is locked during callbacks.\n *\n * @param {Joint} join\n */\nWorld.prototype.destroyJoint = function(joint) {\n  _ASSERT && common.assert(this.isLocked() == false);\n  if (this.isLocked()) {\n    return;\n  }\n\n  // Remove from the doubly linked list.\n  if (joint.m_prev) {\n    joint.m_prev.m_next = joint.m_next;\n  }\n\n  if (joint.m_next) {\n    joint.m_next.m_prev = joint.m_prev;\n  }\n\n  if (joint == this.m_jointList) {\n    this.m_jointList = joint.m_next;\n  }\n\n  // Disconnect from bodies.\n  var bodyA = joint.m_bodyA;\n  var bodyB = joint.m_bodyB;\n\n  // Wake up connected bodies.\n  bodyA.setAwake(true);\n  bodyB.setAwake(true);\n\n  // Remove from body 1.\n  if (joint.m_edgeA.prev) {\n    joint.m_edgeA.prev.next = joint.m_edgeA.next;\n  }\n\n  if (joint.m_edgeA.next) {\n    joint.m_edgeA.next.prev = joint.m_edgeA.prev;\n  }\n\n  if (joint.m_edgeA == bodyA.m_jointList) {\n    bodyA.m_jointList = joint.m_edgeA.next;\n  }\n\n  joint.m_edgeA.prev = null;\n  joint.m_edgeA.next = null;\n\n  // Remove from body 2\n  if (joint.m_edgeB.prev) {\n    joint.m_edgeB.prev.next = joint.m_edgeB.next;\n  }\n\n  if (joint.m_edgeB.next) {\n    joint.m_edgeB.next.prev = joint.m_edgeB.prev;\n  }\n\n  if (joint.m_edgeB == bodyB.m_jointList) {\n    bodyB.m_jointList = joint.m_edgeB.next;\n  }\n\n  joint.m_edgeB.prev = null;\n  joint.m_edgeB.next = null;\n\n  _ASSERT && common.assert(this.m_jointCount > 0);\n  --this.m_jointCount;\n\n  // If the joint prevents collisions, then flag any contacts for filtering.\n  if (joint.m_collideConnected == false) {\n    var edge = bodyB.getContactList();\n    while (edge) {\n      if (edge.other == bodyA) {\n        // Flag the contact for filtering at the next time step (where either\n        // body is awake).\n        edge.contact.flagForFiltering();\n      }\n\n      edge = edge.next;\n    }\n  }\n\n  this.publish('remove-joint', joint);\n}\n\nvar s_step = new Solver.TimeStep(); // reuse\n\n/**\n * Take a time step. This performs collision detection, integration, and\n * constraint solution.\n *\n * Broad-phase, narrow-phase, solve and solve time of impacts.\n *\n * @param {float} timeStep Time step, this should not vary.\n * @param {int} velocityIterations\n * @param {int} positionIterations\n */\nWorld.prototype.step = function(timeStep, velocityIterations, positionIterations) {\n\n  if ((velocityIterations | 0) !== velocityIterations) {\n    // TODO: remove this in future\n    velocityIterations = 0;\n  }\n\n  velocityIterations = velocityIterations || this.m_velocityIterations;\n  positionIterations = positionIterations || this.m_positionIterations;\n\n  // TODO: move this to testbed\n  this.m_stepCount++;\n\n  // If new fixtures were added, we need to find the new contacts.\n  if (this.m_newFixture) {\n    this.findNewContacts();\n    this.m_newFixture = false;\n  }\n\n  this.m_locked = true;\n\n  s_step.reset(timeStep);\n  s_step.velocityIterations = velocityIterations;\n  s_step.positionIterations = positionIterations;\n  s_step.warmStarting = this.m_warmStarting;\n  s_step.blockSolve = this.m_blockSolve;\n\n  // Update contacts. This is where some contacts are destroyed.\n  this.updateContacts();\n\n  // Integrate velocities, solve velocity constraints, and integrate positions.\n  if (this.m_stepComplete && timeStep > 0.0) {\n    this.m_solver.solveWorld(s_step);\n\n    // Synchronize fixtures, check for out of range bodies.\n    for (var b = this.m_bodyList; b; b = b.getNext()) {\n      // If a body was not in an island then it did not move.\n      if (b.m_islandFlag == false) {\n        continue;\n      }\n\n      if (b.isStatic()) {\n        continue;\n      }\n\n      // Update fixtures (for broad-phase).\n      b.synchronizeFixtures();\n    }\n    // Look for new contacts.\n    this.findNewContacts();\n  }\n\n  // Handle TOI events.\n  if (this.m_continuousPhysics && timeStep > 0.0) {\n    this.m_solver.solveWorldTOI(s_step);\n  }\n\n  if (this.m_clearForces) {\n    this.clearForces();\n  }\n\n  this.m_locked = false;\n}\n\n/**\n * Call this method to find new contacts.\n */\nWorld.prototype.findNewContacts = function() {\n  this.m_broadPhase.updatePairs(this.addPair);\n}\n\n/**\n * @private\n *\n * @param {FixtureProxy} proxyA\n * @param {FixtureProxy} proxyB\n */\nWorld.prototype.createContact = function(proxyA, proxyB) {\n  var fixtureA = proxyA.fixture;\n  var fixtureB = proxyB.fixture;\n\n  var indexA = proxyA.childIndex;\n  var indexB = proxyB.childIndex;\n\n  var bodyA = fixtureA.getBody();\n  var bodyB = fixtureB.getBody();\n\n  // Are the fixtures on the same body?\n  if (bodyA == bodyB) {\n    return;\n  }\n\n  // TODO_ERIN use a hash table to remove a potential bottleneck when both\n  // bodies have a lot of contacts.\n  // Does a contact already exist?\n  var edge = bodyB.getContactList(); // ContactEdge\n  while (edge) {\n    if (edge.other == bodyA) {\n      var fA = edge.contact.getFixtureA();\n      var fB = edge.contact.getFixtureB();\n      var iA = edge.contact.getChildIndexA();\n      var iB = edge.contact.getChildIndexB();\n\n      if (fA == fixtureA && fB == fixtureB && iA == indexA && iB == indexB) {\n        // A contact already exists.\n        return;\n      }\n\n      if (fA == fixtureB && fB == fixtureA && iA == indexB && iB == indexA) {\n        // A contact already exists.\n        return;\n      }\n    }\n\n    edge = edge.next;\n  }\n\n  if (bodyB.shouldCollide(bodyA) == false) {\n    return;\n  }\n  if (fixtureB.shouldCollide(fixtureA) == false) {\n    return;\n  }\n\n  // Call the factory.\n  var contact = Contact.create(fixtureA, indexA, fixtureB, indexB);\n  if (contact == null) {\n    return;\n  }\n\n  // Insert into the world.\n  contact.m_prev = null;\n  if (this.m_contactList != null) {\n    contact.m_next = this.m_contactList;\n    this.m_contactList.m_prev = contact;\n  }\n  this.m_contactList = contact;\n\n  ++this.m_contactCount;\n}\n\n/**\n * Removes old non-overlapping contacts, applies filters and updates contacts.\n */\nWorld.prototype.updateContacts = function() {\n  // Update awake contacts.\n  var c, next_c = this.m_contactList;\n  while (c = next_c) {\n    next_c = c.getNext()\n    var fixtureA = c.getFixtureA();\n    var fixtureB = c.getFixtureB();\n    var indexA = c.getChildIndexA();\n    var indexB = c.getChildIndexB();\n    var bodyA = fixtureA.getBody();\n    var bodyB = fixtureB.getBody();\n\n    // Is this contact flagged for filtering?\n    if (c.m_filterFlag) {\n      if (bodyB.shouldCollide(bodyA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      if (fixtureB.shouldCollide(fixtureA) == false) {\n        this.destroyContact(c);\n        continue;\n      }\n\n      // Clear the filtering flag.\n      c.m_filterFlag = false;\n    }\n\n    var activeA = bodyA.isAwake() && !bodyA.isStatic();\n    var activeB = bodyB.isAwake() && !bodyB.isStatic();\n\n    // At least one body must be awake and it must be dynamic or kinematic.\n    if (activeA == false && activeB == false) {\n      continue;\n    }\n\n    var proxyIdA = fixtureA.m_proxies[indexA].proxyId;\n    var proxyIdB = fixtureB.m_proxies[indexB].proxyId;\n    var overlap = this.m_broadPhase.testOverlap(proxyIdA, proxyIdB);\n\n    // Here we destroy contacts that cease to overlap in the broad-phase.\n    if (overlap == false) {\n      this.destroyContact(c);\n      continue;\n    }\n\n    // The contact persists.\n    c.update(this);\n  }\n}\n\n/**\n * @param {Contact} contact\n */\nWorld.prototype.destroyContact = function(contact) {\n  Contact.destroy(contact, this);\n\n  // Remove from the world.\n  if (contact.m_prev) {\n    contact.m_prev.m_next = contact.m_next;\n  }\n  if (contact.m_next) {\n    contact.m_next.m_prev = contact.m_prev;\n  }\n  if (contact == this.m_contactList) {\n    this.m_contactList = contact.m_next;\n  }\n\n  --this.m_contactCount;\n}\n\nWorld.prototype._listeners = null;\n\n/**\n * Register an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.on = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  if (!this._listeners) {\n    this._listeners = {};\n  }\n  if (!this._listeners[name]) {\n    this._listeners[name] = [];\n  }\n  this._listeners[name].push(listener);\n  return this;\n};\n\n/**\n * Remove an event listener.\n *\n * @param {string} name\n * @param {function} listener\n */\nWorld.prototype.off = function(name, listener) {\n  if (typeof name !== 'string' || typeof listener !== 'function') {\n    return this;\n  }\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return this;\n  }\n  var index = listeners.indexOf(listener);\n  if (index >= 0) {\n    listeners.splice(index, 1);\n  }\n  return this;\n};\n\nWorld.prototype.publish = function(name, arg1, arg2, arg3) {\n  var listeners = this._listeners && this._listeners[name];\n  if (!listeners || !listeners.length) {\n    return 0;\n  }\n  for (var l = 0; l < listeners.length; l++) {\n    listeners[l].call(this, arg1, arg2, arg3);\n  }\n  return listeners.length;\n};\n\n/**\n * @event World#remove-body\n * @event World#remove-joint\n * @event World#remove-fixture\n *\n * Joints and fixtures are destroyed when their associated body is destroyed.\n * Register a destruction listener so that you may nullify references to these\n * joints and shapes.\n *\n * `function(object)` is called when any joint or fixture is about to\n * be destroyed due to the destruction of one of its attached or parent bodies.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.beginContact = function(contact) {\n  this.publish('begin-contact', contact);\n};\n\n/**\n * @event World#begin-contact\n *\n * Called when two fixtures begin to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n */\nWorld.prototype.endContact = function(contact) {\n  this.publish('end-contact', contact);\n};\n\n/**\n * @event World#end-contact\n *\n * Called when two fixtures cease to touch.\n *\n * Implement contact callbacks to get contact information. You can use these\n * results for things like sounds and game logic. You can also get contact\n * results by traversing the contact lists after the time step. However, you\n * might miss some contacts because continuous physics leads to sub-stepping.\n * Additionally you may receive multiple callbacks for the same contact in a\n * single time step. You should strive to make your callbacks efficient because\n * there may be many callbacks per time step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {Manifold} oldManifold\n */\nWorld.prototype.preSolve = function(contact, oldManifold) {\n  this.publish('pre-solve', contact, oldManifold);\n};\n\n/**\n * @event World#pre-solve\n *\n * This is called after a contact is updated. This allows you to inspect a\n * contact before it goes to the solver. If you are careful, you can modify the\n * contact manifold (e.g. disable contact). A copy of the old manifold is\n * provided so that you can detect changes. Note: this is called only for awake\n * bodies. Note: this is called even when the number of contact points is zero.\n * Note: this is not called for sensors. Note: if you set the number of contact\n * points to zero, you will not get an endContact callback. However, you may get\n * a beginContact callback the next step.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * @private\n * @param {Contact} contact\n * @param {ContactImpulse} impulse\n */\nWorld.prototype.postSolve = function(contact, impulse) {\n  this.publish('post-solve', contact, impulse);\n};\n\n/**\n * @event World#post-solve\n *\n * This lets you inspect a contact after the solver is finished. This is useful\n * for inspecting impulses. Note: the contact manifold does not include time of\n * impact impulses, which can be arbitrarily large if the sub-step is small.\n * Hence the impulse is provided explicitly in a separate data structure. Note:\n * this is only called for contacts that are touching, solid, and awake.\n *\n * Warning: You cannot create/destroy world entities inside these callbacks.\n */\n\n/**\n * Register a contact filter to provide specific control over collision.\n * Otherwise the default filter is used (defaultFilter). The listener is owned\n * by you and must remain in scope.\n *\n * Moved to Fixture.\n */\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Pool = require('../util/Pool');\nvar Vec2 = require('../common/Vec2');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\n\nmodule.exports = DynamicTree;\n\n/**\n * A node in the dynamic tree. The client does not interact with this directly.\n * \n * @prop {AABB} aabb Enlarged AABB\n * @prop {integer} height 0: leaf, -1: free node\n */\nfunction TreeNode(id) {\n  this.id = id;\n  this.aabb = new AABB();\n  this.userData = null;\n  this.parent = null;\n  this.child1 = null;\n  this.child2 = null;\n  this.height = -1;\n\n  this.toString = function() {\n    return this.id + \": \" + this.userData;\n  }\n};\n\nTreeNode.prototype.isLeaf = function() {\n  return this.child1 == null;\n}\n/**\n * A dynamic AABB tree broad-phase, inspired by Nathanael Presson's btDbvt. A\n * dynamic tree arranges data in a binary tree to accelerate queries such as\n * volume queries and ray casts. Leafs are proxies with an AABB. In the tree we\n * expand the proxy AABB by `aabbExtension` so that the proxy AABB is bigger\n * than the client object. This allows the client object to move by small\n * amounts without triggering a tree update.\n * \n * Nodes are pooled and relocatable, so we use node indices rather than\n * pointers.\n */\nfunction DynamicTree() {\n  this.m_root = null;\n  this.m_nodes = {}\n  this.m_lastProxyId = 0;\n\n  this.m_pool = new Pool({\n    create : function() {\n      return new TreeNode();\n    }\n  });\n};\n\n/**\n * Get proxy user data.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getUserData = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.userData;\n}\n\n/**\n * Get the fat AABB for a node id.\n * \n * @return the proxy user data or 0 if the id is invalid.\n */\nDynamicTree.prototype.getFatAABB = function(id) {\n  var node = this.m_nodes[id];\n  _ASSERT && common.assert(!!node);\n  return node.aabb;\n}\n\nDynamicTree.prototype.allocateNode = function() {\n  var node = this.m_pool.allocate();\n  node.id = ++this.m_lastProxyId;\n  node.userData = null;\n  node.parent = null;\n  node.child1 = null;\n  node.child2 = null;\n  node.height = -1;\n  this.m_nodes[node.id] = node;\n  return node;\n}\n\nDynamicTree.prototype.freeNode = function(node) {\n  this.m_pool.release(node);\n  node.height = -1;\n  delete this.m_nodes[node.id];\n}\n\n/**\n * Create a proxy in the tree as a leaf node. We return the index of the node\n * instead of a pointer so that we can grow the node pool.\n * \n * Create a proxy. Provide a tight fitting AABB and a userData pointer.\n */\nDynamicTree.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb))\n\n  var node = this.allocateNode()\n\n  node.aabb.set(aabb);\n\n  // Fatten the aabb.\n  AABB.extend(node.aabb, Settings.aabbExtension);\n\n  node.userData = userData;\n  node.height = 0;\n\n  this.insertLeaf(node);\n\n  return node.id;\n}\n\n/**\n * Destroy a proxy. This asserts if the id is invalid.\n */\nDynamicTree.prototype.destroyProxy = function(id) {\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  this.removeLeaf(node);\n  this.freeNode(node);\n}\n\n/**\n * Move a proxy with a swepted AABB. If the proxy has moved outside of its\n * fattened AABB, then the proxy is removed from the tree and re-inserted.\n * Otherwise the function returns immediately.\n * \n * @param id\n * @param aabb\n * @param {Vec2} d Displacement\n * \n * @return true if the proxy was re-inserted.\n */\nDynamicTree.prototype.moveProxy = function(id, aabb, d) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  _ASSERT && common.assert(!d || Vec2.isValid(d));\n\n  var node = this.m_nodes[id];\n\n  _ASSERT && common.assert(!!node);\n  _ASSERT && common.assert(node.isLeaf());\n\n  if (node.aabb.contains(aabb)) {\n    return false;\n  }\n\n  this.removeLeaf(node);\n\n  node.aabb.set(aabb)\n\n  // Extend AABB.\n  aabb = node.aabb;\n  AABB.extend(aabb, Settings.aabbExtension);\n\n  // Predict AABB displacement.\n  // var d = Vec2.mul(Settings.aabbMultiplier, displacement);\n\n  if (d.x < 0.0) {\n    aabb.lowerBound.x += d.x * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.x += d.x * Settings.aabbMultiplier;\n  }\n\n  if (d.y < 0.0) {\n    aabb.lowerBound.y += d.y * Settings.aabbMultiplier;\n  } else {\n    aabb.upperBound.y += d.y * Settings.aabbMultiplier;\n  }\n\n  this.insertLeaf(node);\n\n  return true;\n}\n\nDynamicTree.prototype.insertLeaf = function(leaf) {\n  _ASSERT && common.assert(AABB.isValid(leaf.aabb));\n\n  if (this.m_root == null) {\n    this.m_root = leaf;\n    this.m_root.parent = null;\n    return;\n  }\n\n  // Find the best sibling for this node\n  var leafAABB = leaf.aabb;\n  var index = this.m_root;\n  while (index.isLeaf() == false) {\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    var area = index.aabb.getPerimeter();\n\n    var combinedAABB = new AABB();\n    combinedAABB.combine(index.aabb, leafAABB);\n    var combinedArea = combinedAABB.getPerimeter();\n\n    // Cost of creating a new parent for this node and the new leaf\n    var cost = 2.0 * combinedArea;\n\n    // Minimum cost of pushing the leaf further down the tree\n    var inheritanceCost = 2.0 * (combinedArea - area);\n\n    // Cost of descending into child1\n    var cost1;\n    if (child1.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      cost1 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child1.aabb);\n      var oldArea = child1.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost1 = (newArea - oldArea) + inheritanceCost;\n    }\n\n    // Cost of descending into child2\n    var cost2;\n    if (child2.isLeaf()) {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      cost2 = aabb.getPerimeter() + inheritanceCost;\n    } else {\n      var aabb = new AABB();\n      aabb.combine(leafAABB, child2.aabb);\n      var oldArea = child2.aabb.getPerimeter();\n      var newArea = aabb.getPerimeter();\n      cost2 = newArea - oldArea + inheritanceCost;\n    }\n\n    // Descend according to the minimum cost.\n    if (cost < cost1 && cost < cost2) {\n      break;\n    }\n\n    // Descend\n    if (cost1 < cost2) {\n      index = child1;\n    } else {\n      index = child2;\n    }\n  }\n\n  var sibling = index;\n\n  // Create a new parent.\n  var oldParent = sibling.parent;\n  var newParent = this.allocateNode();\n  newParent.parent = oldParent;\n  newParent.userData = null;\n  newParent.aabb.combine(leafAABB, sibling.aabb);\n  newParent.height = sibling.height + 1;\n\n  if (oldParent != null) {\n    // The sibling was not the root.\n    if (oldParent.child1 == sibling) {\n      oldParent.child1 = newParent;\n    } else {\n      oldParent.child2 = newParent;\n    }\n\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n  } else {\n    // The sibling was the root.\n    newParent.child1 = sibling;\n    newParent.child2 = leaf;\n    sibling.parent = newParent;\n    leaf.parent = newParent;\n    this.m_root = newParent;\n  }\n\n  // Walk back up the tree fixing heights and AABBs\n  index = leaf.parent;\n  while (index != null) {\n    index = this.balance(index);\n\n    var child1 = index.child1;\n    var child2 = index.child2;\n\n    _ASSERT && common.assert(child1 != null);\n    _ASSERT && common.assert(child2 != null);\n\n    index.height = 1 + Math.max(child1.height, child2.height);\n    index.aabb.combine(child1.aabb, child2.aabb);\n\n    index = index.parent;\n  }\n\n  // validate();\n}\n\nDynamicTree.prototype.removeLeaf = function(leaf) {\n  if (leaf == this.m_root) {\n    this.m_root = null;\n    return;\n  }\n\n  var parent = leaf.parent;\n  var grandParent = parent.parent;\n  var sibling;\n  if (parent.child1 == leaf) {\n    sibling = parent.child2;\n  } else {\n    sibling = parent.child1;\n  }\n\n  if (grandParent != null) {\n    // Destroy parent and connect sibling to grandParent.\n    if (grandParent.child1 == parent) {\n      grandParent.child1 = sibling;\n    } else {\n      grandParent.child2 = sibling;\n    }\n    sibling.parent = grandParent;\n    this.freeNode(parent);\n\n    // Adjust ancestor bounds.\n    var index = grandParent;\n    while (index != null) {\n      index = this.balance(index);\n\n      var child1 = index.child1;\n      var child2 = index.child2;\n\n      index.aabb.combine(child1.aabb, child2.aabb);\n      index.height = 1 + Math.max(child1.height, child2.height);\n\n      index = index.parent;\n    }\n  } else {\n    this.m_root = sibling;\n    sibling.parent = null;\n    this.freeNode(parent);\n  }\n\n  // validate();\n}\n\n/**\n * Perform a left or right rotation if node A is imbalanced. Returns the new\n * root index.\n */\nDynamicTree.prototype.balance = function(iA) {\n  _ASSERT && common.assert(iA != null);\n\n  var A = iA;\n  if (A.isLeaf() || A.height < 2) {\n    return iA;\n  }\n\n  var B = A.child1;\n  var C = A.child2;\n\n  var balance = C.height - B.height;\n\n  // Rotate C up\n  if (balance > 1) {\n    var F = C.child1;\n    var G = C.child2;\n\n    // Swap A and C\n    C.child1 = A;\n    C.parent = A.parent;\n    A.parent = C;\n\n    // A's old parent should point to C\n    if (C.parent != null) {\n      if (C.parent.child1 == iA) {\n        C.parent.child1 = C;\n      } else {\n        C.parent.child2 = C;\n      }\n    } else {\n      this.m_root = C;\n    }\n\n    // Rotate\n    if (F.height > G.height) {\n      C.child2 = F;\n      A.child2 = G;\n      G.parent = A;\n      A.aabb.combine(B.aabb, G.aabb);\n      C.aabb.combine(A.aabb, F.aabb);\n\n      A.height = 1 + Math.max(B.height, G.height);\n      C.height = 1 + Math.max(A.height, F.height);\n    } else {\n      C.child2 = G;\n      A.child2 = F;\n      F.parent = A;\n      A.aabb.combine(B.aabb, F.aabb);\n      C.aabb.combine(A.aabb, G.aabb);\n\n      A.height = 1 + Math.max(B.height, F.height);\n      C.height = 1 + Math.max(A.height, G.height);\n    }\n\n    return C;\n  }\n\n  // Rotate B up\n  if (balance < -1) {\n    var D = B.child1;\n    var E = B.child2;\n\n    // Swap A and B\n    B.child1 = A;\n    B.parent = A.parent;\n    A.parent = B;\n\n    // A's old parent should point to B\n    if (B.parent != null) {\n      if (B.parent.child1 == A) {\n        B.parent.child1 = B;\n      } else {\n        B.parent.child2 = B;\n      }\n    } else {\n      this.m_root = B;\n    }\n\n    // Rotate\n    if (D.height > E.height) {\n      B.child2 = D;\n      A.child1 = E;\n      E.parent = A;\n      A.aabb.combine(C.aabb, E.aabb);\n      B.aabb.combine(A.aabb, D.aabb);\n\n      A.height = 1 + Math.max(C.height, E.height);\n      B.height = 1 + Math.max(A.height, D.height);\n    } else {\n      B.child2 = E;\n      A.child1 = D;\n      D.parent = A;\n      A.aabb.combine(C.aabb, D.aabb);\n      B.aabb.combine(A.aabb, E.aabb);\n\n      A.height = 1 + Math.max(C.height, D.height);\n      B.height = 1 + Math.max(A.height, E.height);\n    }\n\n    return B;\n  }\n\n  return A;\n}\n\n/**\n * Compute the height of the binary tree in O(N) time. Should not be called\n * often.\n */\nDynamicTree.prototype.getHeight = function() {\n  if (this.m_root == null) {\n    return 0;\n  }\n\n  return this.m_root.height;\n}\n\n/**\n * Get the ratio of the sum of the node areas to the root area.\n */\nDynamicTree.prototype.getAreaRatio = function() {\n  if (this.m_root == null) {\n    return 0.0;\n  }\n\n  var root = this.m_root;\n  var rootArea = root.aabb.getPerimeter();\n\n  var totalArea = 0.0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // Free node in pool\n      continue;\n    }\n\n    totalArea += node.aabb.getPerimeter();\n  }\n\n  iteratorPool.release(it);\n\n  return totalArea / rootArea;\n}\n\n/**\n * Compute the height of a sub-tree.\n */\nDynamicTree.prototype.computeHeight = function(id) {\n  var node;\n  if (typeof id !== 'undefined') {\n    node = this.m_nodes[id];\n  } else {\n    node = this.m_root;\n  }\n\n  // _ASSERT && common.assert(0 <= id && id < this.m_nodeCapacity);\n\n  if (node.isLeaf()) {\n    return 0;\n  }\n\n  var height1 = this.computeHeight(node.child1.id);\n  var height2 = this.computeHeight(node.child2.id);\n  return 1 + Math.max(height1, height2);\n}\n\nDynamicTree.prototype.validateStructure = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  if (node == this.m_root) {\n    _ASSERT && common.assert(node.parent == null);\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  _ASSERT && common.assert(child1.parent == node);\n  _ASSERT && common.assert(child2.parent == node);\n\n  this.validateStructure(child1);\n  this.validateStructure(child2);\n}\n\nDynamicTree.prototype.validateMetrics = function(node) {\n  if (node == null) {\n    return;\n  }\n\n  var child1 = node.child1;\n  var child2 = node.child2;\n\n  if (node.isLeaf()) {\n    _ASSERT && common.assert(child1 == null);\n    _ASSERT && common.assert(child2 == null);\n    _ASSERT && common.assert(node.height == 0);\n    return;\n  }\n\n  // _ASSERT && common.assert(0 <= child1 && child1 < this.m_nodeCapacity);\n  // _ASSERT && common.assert(0 <= child2 && child2 < this.m_nodeCapacity);\n\n  var height1 = child1.height;\n  var height2 = child2.height;\n  var height = 1 + Math.max(height1, height2);\n  _ASSERT && common.assert(node.height == height);\n\n  var aabb = new AABB();\n  aabb.combine(child1.aabb, child2.aabb);\n\n  _ASSERT && common.assert(AABB.areEqual(aabb, node.aabb));\n\n  this.validateMetrics(child1);\n  this.validateMetrics(child2);\n}\n\n// Validate this tree. For testing.\nDynamicTree.prototype.validate = function() {\n  this.validateStructure(this.m_root);\n  this.validateMetrics(this.m_root);\n\n  _ASSERT && common.assert(this.getHeight() == this.computeHeight());\n}\n\n/**\n * Get the maximum balance of an node in the tree. The balance is the difference\n * in height of the two children of a node.\n */\nDynamicTree.prototype.getMaxBalance = function() {\n  var maxBalance = 0;\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height <= 1) {\n      continue;\n    }\n\n    _ASSERT && common.assert(node.isLeaf() == false);\n\n    var balance = Math.abs(node.child2.height - node.child1.height);\n    maxBalance = Math.max(maxBalance, balance);\n  }\n  iteratorPool.release(it);\n\n  return maxBalance;\n}\n\n/**\n * Build an optimal tree. Very expensive. For testing.\n */\nDynamicTree.prototype.rebuildBottomUp = function() {\n  var nodes = [];\n  var count = 0;\n\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    if (node.height < 0) {\n      // free node in pool\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      node.parent = null;\n      nodes[count] = node;\n      ++count;\n    } else {\n      this.freeNode(node);\n    }\n  }\n  iteratorPool.release(it);\n\n  while (count > 1) {\n    var minCost = Infinity;\n    var iMin = -1, jMin = -1;\n    for (var i = 0; i < count; ++i) {\n      var aabbi = nodes[i].aabb;\n      for (var j = i + 1; j < count; ++j) {\n        var aabbj = nodes[j].aabb;\n        var b = new AABB();\n        b.combine(aabbi, aabbj);\n        var cost = b.getPerimeter();\n        if (cost < minCost) {\n          iMin = i;\n          jMin = j;\n          minCost = cost;\n        }\n      }\n    }\n\n    var child1 = nodes[iMin];\n    var child2 = nodes[jMin];\n\n    var parent = this.allocateNode();\n    parent.child1 = child1;\n    parent.child2 = child2;\n    parent.height = 1 + Math.max(child1.height, child2.height);\n    parent.aabb.combine(child1.aabb, child2.aabb);\n    parent.parent = null;\n\n    child1.parent = parent;\n    child2.parent = parent;\n\n    nodes[jMin] = nodes[count - 1];\n    nodes[iMin] = parent;\n    --count;\n  }\n\n  this.m_root = nodes[0];\n\n  this.validate();\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nDynamicTree.prototype.shiftOrigin = function(newOrigin) {\n  // Build array of leaves. Free the rest.\n  var node, it = iteratorPool.allocate().preorder(this.m_root);\n  while (node = it.next()) {\n    var aabb = node.aabb;\n    aabb.lowerBound.x -= newOrigin.x;\n    aabb.lowerBound.y -= newOrigin.y;\n    aabb.upperBound.x -= newOrigin.x;\n    aabb.upperBound.y -= newOrigin.y;\n  }\n  iteratorPool.release(it);\n}\n\n/**\n * @function {DynamicTree~queryCallback}\n * \n * @param id Node id.\n */\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n * \n * @param {DynamicTree~queryCallback} queryCallback\n */\nDynamicTree.prototype.query = function(aabb, queryCallback) {\n  _ASSERT && common.assert(typeof queryCallback === 'function')\n  var stack = stackPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, aabb)) {\n      if (node.isLeaf()) {\n        var proceed = queryCallback(node.id);\n        if (proceed == false) {\n          return;\n        }\n      } else {\n        stack.push(node.child1);\n        stack.push(node.child2);\n      }\n    }\n  }\n\n  stackPool.release(stack);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nDynamicTree.prototype.rayCast = function(input, rayCastCallback) { // TODO GC\n  _ASSERT && common.assert(typeof rayCastCallback === 'function')\n  var p1 = input.p1;\n  var p2 = input.p2;\n  var r = Vec2.sub(p2, p1);\n  _ASSERT && common.assert(r.lengthSquared() > 0.0);\n  r.normalize();\n\n  // v is perpendicular to the segment.\n  var v = Vec2.cross(1.0, r);\n  var abs_v = Vec2.abs(v);\n\n  // Separating axis for segment (Gino, p80).\n  // |dot(v, p1 - c)| > dot(|v|, h)\n\n  var maxFraction = input.maxFraction;\n\n  // Build a bounding box for the segment.\n  var segmentAABB = new AABB();\n  var t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n  segmentAABB.combinePoints(p1, t);\n\n  var stack = stackPool.allocate();\n  var subInput = inputPool.allocate();\n\n  stack.push(this.m_root);\n  while (stack.length > 0) {\n    var node = stack.pop();\n    if (node == null) {\n      continue;\n    }\n\n    if (AABB.testOverlap(node.aabb, segmentAABB) == false) {\n      continue;\n    }\n\n    // Separating axis for segment (Gino, p80).\n    // |dot(v, p1 - c)| > dot(|v|, h)\n    var c = node.aabb.getCenter();\n    var h = node.aabb.getExtents();\n    var separation = Math.abs(Vec2.dot(v, Vec2.sub(p1, c)))\n        - Vec2.dot(abs_v, h);\n    if (separation > 0.0) {\n      continue;\n    }\n\n    if (node.isLeaf()) {\n      subInput.p1 = Vec2.clone(input.p1);\n      subInput.p2 = Vec2.clone(input.p2);\n      subInput.maxFraction = maxFraction;\n\n      var value = rayCastCallback(subInput, node.id);\n\n      if (value == 0.0) {\n        // The client has terminated the ray cast.\n        return;\n      }\n\n      if (value > 0.0) {\n        // update segment bounding box.\n        maxFraction = value;\n        t = Vec2.combine((1 - maxFraction), p1, maxFraction, p2);\n        segmentAABB.combinePoints(p1, t);\n      }\n    } else {\n      stack.push(node.child1);\n      stack.push(node.child2);\n    }\n  }\n\n  stackPool.release(stack);\n  inputPool.release(subInput);\n}\n\nvar inputPool = new Pool({\n  create : function() {\n    return {};\n  },\n  release : function(stack) {\n  }\n});\n\nvar stackPool = new Pool({\n  create : function() {\n    return [];\n  },\n  release : function(stack) {\n    stack.length = 0;\n  }\n});\n\nvar iteratorPool = new Pool({\n  create : function() {\n    return new Iterator();\n  },\n  release : function(iterator) {\n    iterator.close();\n  }\n});\n\nfunction Iterator() {\n  var parents = [];\n  var states = [];\n  return {\n    preorder : function(root) {\n      parents.length = 0;\n      parents.push(root);\n      states.length = 0;\n      states.push(0);\n      return this;\n    },\n    next : function() {\n      while (parents.length > 0) {\n        var i = parents.length - 1;\n        var node = parents[i];\n        if (states[i] === 0) {\n          states[i] = 1;\n          return node;\n        }\n        if (states[i] === 1) {\n          states[i] = 2;\n          if (node.child1) {\n            parents.push(node.child1);\n            states.push(1);\n            return node.child1;\n          }\n        }\n        if (states[i] === 2) {\n          states[i] = 3;\n          if (node.child2) {\n            parents.push(node.child2);\n            states.push(1);\n            return node.child2;\n          }\n        }\n        parents.pop();\n        states.pop();\n      }\n    },\n    close : function() {\n      parents.length = 0;\n    }\n  };\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Fixture;\n\nvar common = require('./util/common');\nvar options = require('./util/options');\n\nvar Math = require('./common/Math');\nvar Vec2 = require('./common/Vec2');\n\nvar AABB = require('./collision/AABB');\n\nvar Shape = require('./Shape');\n\n/**\n * @typedef {Object} FixtureDef\n *\n * A fixture definition is used to create a fixture. This class defines an\n * abstract fixture definition. You can reuse fixture definitions safely.\n * \n * @prop friction The friction coefficient, usually in the range [0,1]\n * @prop restitution The restitution (elasticity) usually in the range [0,1]\n * @prop density The density, usually in kg/m^2\n * @prop isSensor A sensor shape collects contact information but never\n *       generates a collision response\n * @prop userData\n * @prop filterGroupIndex Zero, positive or negative collision group. Fixtures with same positive groupIndex always collide and fixtures with same\n * negative groupIndex never collide.\n * @prop filterCategoryBits Collision category bit or bits that this fixture belongs\n *       to. If groupIndex is zero or not matching, then at least one bit in this fixture\n * categoryBits should match other fixture maskBits and vice versa.\n * @prop filterMaskBits Collision category bit or bits that this fixture accept for\n *       collision.\n */\nvar FixtureDef = {\n  userData : null,\n  friction : 0.2,\n  restitution : 0.0,\n  density : 0.0,\n  isSensor : false,\n\n  filterGroupIndex : 0,\n  filterCategoryBits : 0x0001,\n  filterMaskBits : 0xFFFF\n};\n\n/**\n * This proxy is used internally to connect shape children to the broad-phase.\n */\nfunction FixtureProxy(fixture, childIndex) {\n  this.aabb = new AABB();\n  this.fixture = fixture;\n  this.childIndex = childIndex;\n  this.proxyId;\n};\n\n/**\n * A fixture is used to attach a shape to a body for collision detection. A\n * fixture inherits its transform from its parent. Fixtures hold additional\n * non-geometric data such as friction, collision filters, etc. Fixtures are\n * created via Body.createFixture.\n * \n * @param {Body} body\n * @param {Shape|FixtureDef} shape Shape of fixture definition.\n * @param {FixtureDef|number} def Fixture definition or number.\n */\nfunction Fixture(body, shape, def) {\n  if (shape.shape) {\n    def = shape;\n    shape = shape.shape;\n\n  } else if (typeof def === 'number') {\n    def = {density : def};\n  }\n\n  def = options(def, FixtureDef);\n\n  this.m_body = body;\n\n  this.m_friction = def.friction;\n  this.m_restitution = def.restitution;\n  this.m_density = def.density;\n  this.m_isSensor = def.isSensor;\n\n  this.m_filterGroupIndex = def.filterGroupIndex;\n  this.m_filterCategoryBits = def.filterCategoryBits;\n  this.m_filterMaskBits = def.filterMaskBits;\n\n  // TODO validate shape\n  this.m_shape = shape; //.clone();\n\n  this.m_next = null;\n\n  this.m_proxies = [];\n  this.m_proxyCount = 0;\n\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n\n  this.m_userData = def.userData;\n};\n\n/**\n * Re-setup fixture.\n * @private\n */\nFixture.prototype._reset = function() {\n  var body = this.getBody();\n  var broadPhase = body.m_world.m_broadPhase;\n  this.destroyProxies(broadPhase);\n  if (this.m_shape._reset) {\n    this.m_shape._reset();\n  }\n  var childCount = this.m_shape.getChildCount();\n  for (var i = 0; i < childCount; ++i) {\n    this.m_proxies[i] = new FixtureProxy(this, i);\n  }\n  this.createProxies(broadPhase, body.m_xf);\n  body.resetMassData();\n};\n\nFixture.prototype._serialize = function() {\n  return {\n    friction: this.m_friction,\n    restitution: this.m_restitution,\n    density: this.m_density,\n    isSensor: this.m_isSensor,\n\n    filterGroupIndex: this.m_filterGroupIndex,\n    filterCategoryBits: this.m_filterCategoryBits,\n    filterMaskBits: this.m_filterMaskBits,\n\n    shape: this.m_shape,\n  };\n};\n\nFixture._deserialize = function(data, body, restore) {\n  var shape = restore(Shape, data.shape);\n  var fixture = shape && new Fixture(body, shape, data);\n  return fixture;\n};\n\n/**\n * Get the type of the child shape. You can use this to down cast to the\n * concrete shape.\n */\nFixture.prototype.getType = function() {\n  return this.m_shape.getType();\n}\n\n/**\n * Get the child shape. You can modify the child shape, however you should not\n * change the number of vertices because this will crash some collision caching\n * mechanisms. Manipulating the shape may lead to non-physical behavior.\n */\nFixture.prototype.getShape = function() {\n  return this.m_shape;\n}\n/**\n * A sensor shape collects contact information but never generates a collision\n * response.\n */\nFixture.prototype.isSensor = function() {\n  return this.m_isSensor;\n}\n\n/**\n * Set if this fixture is a sensor.\n */\nFixture.prototype.setSensor = function(sensor) {\n  if (sensor != this.m_isSensor) {\n    this.m_body.setAwake(true);\n    this.m_isSensor = sensor;\n  }\n}\n\n/**\n * Get the contact filtering data.\n */\n// Fixture.prototype.getFilterData = function() {\n//   return this.m_filter;\n// }\n\n/**\n * Get the user data that was assigned in the fixture definition. Use this to\n * store your application specific data.\n */\nFixture.prototype.getUserData = function() {\n  return this.m_userData;\n}\n\n/**\n * Set the user data. Use this to store your application specific data.\n */\nFixture.prototype.setUserData = function(data) {\n  this.m_userData = data;\n}\n\n/**\n * Get the parent body of this fixture. This is null if the fixture is not\n * attached.\n */\nFixture.prototype.getBody = function() {\n  return this.m_body;\n}\n\n/**\n * Get the next fixture in the parent body's fixture list.\n */\nFixture.prototype.getNext = function() {\n  return this.m_next;\n}\n\n/**\n * Get the density of this fixture.\n */\nFixture.prototype.getDensity = function() {\n  return this.m_density;\n}\n\n/**\n * Set the density of this fixture. This will _not_ automatically adjust the\n * mass of the body. You must call Body.resetMassData to update the body's mass.\n */\nFixture.prototype.setDensity = function(density) {\n  _ASSERT && common.assert(Math.isFinite(density) && density >= 0.0);\n  this.m_density = density;\n}\n\n/**\n * Get the coefficient of friction, usually in the range [0,1].\n */\nFixture.prototype.getFriction = function() {\n  return this.m_friction;\n}\n\n/**\n * Set the coefficient of friction. This will not change the friction of\n * existing contacts.\n */\nFixture.prototype.setFriction = function(friction) {\n  this.m_friction = friction;\n}\n\n/**\n * Get the coefficient of restitution.\n */\nFixture.prototype.getRestitution = function() {\n  return this.m_restitution;\n}\n\n/**\n * Set the coefficient of restitution. This will not change the restitution of\n * existing contacts.\n */\nFixture.prototype.setRestitution = function(restitution) {\n  this.m_restitution = restitution;\n}\n\n/**\n * Test a point in world coordinates for containment in this fixture.\n */\nFixture.prototype.testPoint = function(p) {\n  return this.m_shape.testPoint(this.m_body.getTransform(), p);\n}\n\n/**\n * Cast a ray against this shape.\n */\nFixture.prototype.rayCast = function(output, input, childIndex) {\n  return this.m_shape.rayCast(output, input, this.m_body.getTransform(), childIndex);\n}\n\n/**\n * Get the mass data for this fixture. The mass data is based on the density and\n * the shape. The rotational inertia is about the shape's origin. This operation\n * may be expensive.\n */\nFixture.prototype.getMassData = function(massData) {\n  this.m_shape.computeMass(massData, this.m_density);\n}\n\n/**\n * Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a\n * more accurate AABB, compute it using the shape and the body transform.\n */\nFixture.prototype.getAABB = function(childIndex) {\n  _ASSERT && common.assert(0 <= childIndex && childIndex < this.m_proxyCount);\n  return this.m_proxies[childIndex].aabb;\n}\n\n/**\n * These support body activation/deactivation.\n */\nFixture.prototype.createProxies = function(broadPhase, xf) {\n  _ASSERT && common.assert(this.m_proxyCount == 0);\n\n  // Create proxies in the broad-phase.\n  this.m_proxyCount = this.m_shape.getChildCount();\n\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    this.m_shape.computeAABB(proxy.aabb, xf, i);\n    proxy.proxyId = broadPhase.createProxy(proxy.aabb, proxy);\n  }\n}\n\nFixture.prototype.destroyProxies = function(broadPhase) {\n  // Destroy proxies in the broad-phase.\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    broadPhase.destroyProxy(proxy.proxyId);\n    proxy.proxyId = null;\n  }\n\n  this.m_proxyCount = 0;\n}\n\n/**\n * Updates this fixture proxy in broad-phase (with combined AABB of current and\n * next transformation).\n */\nFixture.prototype.synchronize = function(broadPhase, xf1, xf2) {\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    var proxy = this.m_proxies[i];\n    // Compute an AABB that covers the swept shape (may miss some rotation\n    // effect).\n    var aabb1 = new AABB();\n    var aabb2 = new AABB();\n    this.m_shape.computeAABB(aabb1, xf1, proxy.childIndex);\n    this.m_shape.computeAABB(aabb2, xf2, proxy.childIndex);\n\n    proxy.aabb.combine(aabb1, aabb2);\n\n    var displacement = Vec2.sub(xf2.p, xf1.p);\n\n    broadPhase.moveProxy(proxy.proxyId, proxy.aabb, displacement);\n  }\n}\n\n/**\n * Set the contact filtering data. This will not update contacts until the next\n * time step when either parent body is active and awake. This automatically\n * calls refilter.\n */\nFixture.prototype.setFilterData = function(filter) {\n  this.m_filterGroupIndex = filter.groupIndex;\n  this.m_filterCategoryBits = filter.categoryBits;\n  this.m_filterMaskBits = filter.maskBits;\n  this.refilter();\n}\n\nFixture.prototype.getFilterGroupIndex = function() {\n  return this.m_filterGroupIndex;\n}\n\nFixture.prototype.setFilterGroupIndex = function(groupIndex) {\n  return this.m_filterGroupIndex = groupIndex;\n}\n\nFixture.prototype.getFilterCategoryBits = function() {\n  return this.m_filterCategoryBits;\n}\n\nFixture.prototype.setFilterCategoryBits = function(categoryBits) {\n  this.m_filterCategoryBits = categoryBits;\n}\n\nFixture.prototype.getFilterMaskBits = function() {\n  return this.m_filterMaskBits;\n}\n\nFixture.prototype.setFilterMaskBits = function(maskBits) {\n  this.m_filterMaskBits = maskBits;\n}\n\n/**\n * Call this if you want to establish collision that was previously disabled by\n * ContactFilter.\n */\nFixture.prototype.refilter = function() {\n  if (this.m_body == null) {\n    return;\n  }\n\n  // Flag associated contacts for filtering.\n  var edge = this.m_body.getContactList();\n  while (edge) {\n    var contact = edge.contact;\n    var fixtureA = contact.getFixtureA();\n    var fixtureB = contact.getFixtureB();\n    if (fixtureA == this || fixtureB == this) {\n      contact.flagForFiltering();\n    }\n\n    edge = edge.next;\n  }\n\n  var world = this.m_body.getWorld();\n\n  if (world == null) {\n    return;\n  }\n\n  // Touch each proxy so that new pairs may be created\n  var broadPhase = world.m_broadPhase;\n  for (var i = 0; i < this.m_proxyCount; ++i) {\n    broadPhase.touchProxy(this.m_proxies[i].proxyId);\n  }\n}\n\n/**\n * Implement this method to provide collision filtering, if you want finer\n * control over contact creation.\n * \n * Return true if contact calculations should be performed between these two\n * fixtures.\n * \n * Warning: for performance reasons this is only called when the AABBs begin to\n * overlap.\n * \n * @param {Fixture} fixtureA\n * @param {Fixture} fixtureB\n */\nFixture.prototype.shouldCollide = function(that) {\n\n  if (that.m_filterGroupIndex == this.m_filterGroupIndex && that.m_filterGroupIndex != 0) {\n    return that.m_filterGroupIndex > 0;\n  }\n\n  var collide = (that.m_filterMaskBits & this.m_filterCategoryBits) != 0\n      && (that.m_filterCategoryBits & this.m_filterMaskBits) != 0;\n  return collide;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = TimeOfImpact;\nmodule.exports.Input = TOIInput;\nmodule.exports.Output = TOIOutput;\n\nvar Settings = require('../Settings');\n\nvar common = require('../util/common');\nvar Timer = require('../util/Timer');\n\nvar stats = require('../common/stats');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Distance = require('./Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\n/**\n * Input parameters for TimeOfImpact.\n * \n * @prop {DistanceProxy} proxyA\n * @prop {DistanceProxy} proxyB\n * @prop {Sweep} sweepA\n * @prop {Sweep} sweepB\n * @prop tMax defines sweep interval [0, tMax]\n */\nfunction TOIInput() {\n  this.proxyA = new DistanceProxy();\n  this.proxyB = new DistanceProxy();\n  this.sweepA = new Sweep();\n  this.sweepB = new Sweep();\n  this.tMax;\n};\n\n// TOIOutput State\nTOIOutput.e_unknown = 0;\nTOIOutput.e_failed = 1;\nTOIOutput.e_overlapped = 2;\nTOIOutput.e_touching = 3;\nTOIOutput.e_separated = 4;\n\n/**\n * Output parameters for TimeOfImpact.\n * \n * @prop state\n * @prop t\n */\nfunction TOIOutput() {\n  this.state;\n  this.t;\n};\n\nstats.toiTime = 0;\nstats.toiMaxTime = 0;\nstats.toiCalls = 0;\nstats.toiIters = 0;\nstats.toiMaxIters = 0;\nstats.toiRootIters = 0;\nstats.toiMaxRootIters = 0;\n\n/**\n * Compute the upper bound on time before two shapes penetrate. Time is\n * represented as a fraction between [0,tMax]. This uses a swept separating axis\n * and may miss some intermediate, non-tunneling collision. If you change the\n * time interval, you should call this function again.\n * \n * Note: use Distance to compute the contact point and normal at the time of\n * impact.\n * \n * CCD via the local separating axis method. This seeks progression by computing\n * the largest time at which separation is maintained.\n */\nfunction TimeOfImpact(output, input) {\n  var timer = Timer.now();\n\n  ++stats.toiCalls;\n\n  output.state = TOIOutput.e_unknown;\n  output.t = input.tMax;\n\n  var proxyA = input.proxyA; // DistanceProxy\n  var proxyB = input.proxyB; // DistanceProxy\n\n  var sweepA = input.sweepA; // Sweep\n  var sweepB = input.sweepB; // Sweep\n\n  // Large rotations can make the root finder fail, so we normalize the\n  // sweep angles.\n  sweepA.normalize();\n  sweepB.normalize();\n\n  var tMax = input.tMax;\n\n  var totalRadius = proxyA.m_radius + proxyB.m_radius;\n  var target = Math.max(Settings.linearSlop, totalRadius - 3.0 * Settings.linearSlop);\n  var tolerance = 0.25 * Settings.linearSlop;\n  _ASSERT && common.assert(target > tolerance);\n\n  var t1 = 0.0;\n  var k_maxIterations = Settings.maxTOIIterations;\n  var iter = 0;\n\n  // Prepare input for distance query.\n  var cache = new SimplexCache();\n\n  var distanceInput = new DistanceInput();\n  distanceInput.proxyA = input.proxyA;\n  distanceInput.proxyB = input.proxyB;\n  distanceInput.useRadii = false;\n\n  // The outer loop progressively attempts to compute new separating axes.\n  // This loop terminates when an axis is repeated (no progress is made).\n  for (;;) {\n    var xfA = Transform.identity();\n    var xfB = Transform.identity();\n    sweepA.getTransform(xfA, t1);\n    sweepB.getTransform(xfB, t1);\n\n    // Get the distance between shapes. We can also use the results\n    // to get a separating axis.\n    distanceInput.transformA = xfA;\n    distanceInput.transformB = xfB;\n    var distanceOutput = new DistanceOutput();\n    Distance(distanceOutput, cache, distanceInput);\n\n    // If the shapes are overlapped, we give up on continuous collision.\n    if (distanceOutput.distance <= 0.0) {\n      // Failure!\n      output.state = TOIOutput.e_overlapped;\n      output.t = 0.0;\n      break;\n    }\n\n    if (distanceOutput.distance < target + tolerance) {\n      // Victory!\n      output.state = TOIOutput.e_touching;\n      output.t = t1;\n      break;\n    }\n\n    // Initialize the separating axis.\n    var fcn = new SeparationFunction();\n    fcn.initialize(cache, proxyA, sweepA, proxyB, sweepB, t1);\n\n    // if (false) {\n    //   // Dump the curve seen by the root finder\n    //   var N = 100;\n    //   var dx = 1.0 / N;\n    //   var xs = []; // [ N + 1 ];\n    //   var fs = []; // [ N + 1 ];\n    //   var x = 0.0;\n    //   for (var i = 0; i <= N; ++i) {\n    //     sweepA.getTransform(xfA, x);\n    //     sweepB.getTransform(xfB, x);\n    //     var f = fcn.evaluate(xfA, xfB) - target;\n    //     printf(\"%g %g\\n\", x, f);\n    //     xs[i] = x;\n    //     fs[i] = f;\n    //     x += dx;\n    //   }\n    // }\n\n    // Compute the TOI on the separating axis. We do this by successively\n    // resolving the deepest point. This loop is bounded by the number of\n    // vertices.\n    var done = false;\n    var t2 = tMax;\n    var pushBackIter = 0;\n    for (;;) {\n      // Find the deepest point at t2. Store the witness point indices.\n      var s2 = fcn.findMinSeparation(t2);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Is the final configuration separated?\n      if (s2 > target + tolerance) {\n        // Victory!\n        output.state = TOIOutput.e_separated;\n        output.t = tMax;\n        done = true;\n        break;\n      }\n\n      // Has the separation reached tolerance?\n      if (s2 > target - tolerance) {\n        // Advance the sweeps\n        t1 = t2;\n        break;\n      }\n\n      // Compute the initial separation of the witness points.\n      var s1 = fcn.evaluate(t1);\n      var indexA = fcn.indexA;\n      var indexB = fcn.indexB;\n\n      // Check for initial overlap. This might happen if the root finder\n      // runs out of iterations.\n      if (s1 < target - tolerance) {\n        output.state = TOIOutput.e_failed;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Check for touching\n      if (s1 <= target + tolerance) {\n        // Victory! t1 should hold the TOI (could be 0.0).\n        output.state = TOIOutput.e_touching;\n        output.t = t1;\n        done = true;\n        break;\n      }\n\n      // Compute 1D root of: f(x) - target = 0\n      var rootIterCount = 0;\n      var a1 = t1, a2 = t2;\n      for (;;) {\n        // Use a mix of the secant rule and bisection.\n        var t;\n        if (rootIterCount & 1) {\n          // Secant rule to improve convergence.\n          t = a1 + (target - s1) * (a2 - a1) / (s2 - s1);\n        } else {\n          // Bisection to guarantee progress.\n          t = 0.5 * (a1 + a2);\n        }\n\n        ++rootIterCount;\n        ++stats.toiRootIters;\n\n        var s = fcn.evaluate(t);\n        var indexA = fcn.indexA;\n        var indexB = fcn.indexB;\n\n        if (Math.abs(s - target) < tolerance) {\n          // t2 holds a tentative value for t1\n          t2 = t;\n          break;\n        }\n\n        // Ensure we continue to bracket the root.\n        if (s > target) {\n          a1 = t;\n          s1 = s;\n        } else {\n          a2 = t;\n          s2 = s;\n        }\n\n        if (rootIterCount == 50) {\n          break;\n        }\n      }\n\n      stats.toiMaxRootIters = Math.max(stats.toiMaxRootIters, rootIterCount);\n\n      ++pushBackIter;\n\n      if (pushBackIter == Settings.maxPolygonVertices) {\n        break;\n      }\n    }\n\n    ++iter;\n    ++stats.toiIters;\n\n    if (done) {\n      break;\n    }\n\n    if (iter == k_maxIterations) {\n      // Root finder got stuck. Semi-victory.\n      output.state = TOIOutput.e_failed;\n      output.t = t1;\n      break;\n    }\n  }\n\n  stats.toiMaxIters = Math.max(stats.toiMaxIters, iter);\n\n  var time = Timer.diff(timer);\n  stats.toiMaxTime = Math.max(stats.toiMaxTime, time);\n  stats.toiTime += time;\n}\n\n// SeparationFunction Type\nvar e_points = 1;\nvar e_faceA = 2;\nvar e_faceB = 3;\n\nfunction SeparationFunction() {\n  this.m_proxyA = new DistanceProxy();\n  this.m_proxyB = new DistanceProxy();\n  this.m_sweepA;// Sweep\n  this.m_sweepB;// Sweep\n  this.indexA;// integer\n  this.indexB;// integer\n  this.m_type;\n  this.m_localPoint = Vec2.zero();\n  this.m_axis = Vec2.zero();\n};\n\n// TODO_ERIN might not need to return the separation\n\n/**\n * @param {SimplexCache} cache\n * @param {DistanceProxy} proxyA\n * @param {Sweep} sweepA\n * @param {DistanceProxy} proxyB\n * @param {Sweep} sweepB\n * @param {float} t1\n */\nSeparationFunction.prototype.initialize = function(cache, proxyA, sweepA, proxyB, sweepB, t1) {\n  this.m_proxyA = proxyA;\n  this.m_proxyB = proxyB;\n  var count = cache.count;\n  _ASSERT && common.assert(0 < count && count < 3);\n\n  this.m_sweepA = sweepA;\n  this.m_sweepB = sweepB;\n\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t1);\n  this.m_sweepB.getTransform(xfB, t1);\n\n  if (count == 1) {\n    this.m_type = e_points;\n    var localPointA = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n    this.m_axis.setCombine(1, pointB, -1, pointA);\n    var s = this.m_axis.normalize();\n    return s;\n\n  } else if (cache.indexA[0] == cache.indexA[1]) {\n    // Two points on B and one on A.\n    this.m_type = e_faceB;\n    var localPointB1 = proxyB.getVertex(cache.indexB[0]);\n    var localPointB2 = proxyB.getVertex(cache.indexB[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointB2, localPointB1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointB1, localPointB2);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    var localPointA = proxyA.getVertex(cache.indexA[0]);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var s = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n\n  } else {\n    // Two points on A and one or two points on B.\n    this.m_type = e_faceA;\n    var localPointA1 = this.m_proxyA.getVertex(cache.indexA[0]);\n    var localPointA2 = this.m_proxyA.getVertex(cache.indexA[1]);\n\n    this.m_axis = Vec2.cross(Vec2.sub(localPointA2, localPointA1), 1.0);\n    this.m_axis.normalize();\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n\n    this.m_localPoint = Vec2.mid(localPointA1, localPointA2);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    var localPointB = this.m_proxyB.getVertex(cache.indexB[0]);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var s = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    if (s < 0.0) {\n      this.m_axis = Vec2.neg(this.m_axis);\n      s = -s;\n    }\n    return s;\n  }\n};\n\nSeparationFunction.prototype.compute = function(find, t) {\n  // It was findMinSeparation and evaluate\n  var xfA = Transform.identity();\n  var xfB = Transform.identity();\n  this.m_sweepA.getTransform(xfA, t);\n  this.m_sweepB.getTransform(xfB, t);\n\n  switch (this.m_type) {\n  case e_points: {\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, this.m_axis);\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(this.m_axis));\n\n      this.indexA = this.m_proxyA.getSupport(axisA);\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n\n    var pointA = Transform.mulVec2(xfA, localPointA);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, this.m_axis) - Vec2.dot(pointA, this.m_axis);\n    return sep;\n  }\n\n  case e_faceA: {\n    var normal = Rot.mulVec2(xfA.q, this.m_axis);\n    var pointA = Transform.mulVec2(xfA, this.m_localPoint);\n\n    if (find) {\n      var axisB = Rot.mulTVec2(xfB.q, Vec2.neg(normal));\n\n      this.indexA = -1;\n      this.indexB = this.m_proxyB.getSupport(axisB);\n    }\n\n    var localPointB = this.m_proxyB.getVertex(this.indexB);\n    var pointB = Transform.mulVec2(xfB, localPointB);\n\n    var sep = Vec2.dot(pointB, normal) - Vec2.dot(pointA, normal);\n    return sep;\n  }\n\n  case e_faceB: {\n    var normal = Rot.mulVec2(xfB.q, this.m_axis);\n    var pointB = Transform.mulVec2(xfB, this.m_localPoint);\n\n    if (find) {\n      var axisA = Rot.mulTVec2(xfA.q, Vec2.neg(normal));\n\n      this.indexB = -1;\n      this.indexA = this.m_proxyA.getSupport(axisA);\n    }\n\n    var localPointA = this.m_proxyA.getVertex(this.indexA);\n    var pointA = Transform.mulVec2(xfA, localPointA);\n\n    var sep = Vec2.dot(pointA, normal) - Vec2.dot(pointB, normal);\n    return sep;\n  }\n\n  default:\n    _ASSERT && common.assert(false);\n    if (find) {\n      this.indexA = -1;\n      this.indexB = -1;\n    }\n    return 0.0;\n  }\n};\n\nSeparationFunction.prototype.findMinSeparation = function(t) {\n  return this.compute(true, t);\n};\n\nSeparationFunction.prototype.evaluate = function(t) {\n  return this.compute(false, t);\n};\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RevoluteJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRevoluteJoint.TYPE = 'revolute-joint';\nJoint.TYPES[RevoluteJoint.TYPE] = RevoluteJoint;\n\nRevoluteJoint._super = Joint;\nRevoluteJoint.prototype = create(RevoluteJoint._super.prototype);\n\n/**\n * @typedef {Object} RevoluteJointDef\n *\n * Revolute joint definition. This requires defining an anchor point where the\n * bodies are joined. The definition uses local anchor points so that the\n * initial configuration can violate the constraint slightly. You also need to\n * specify the initial relative angle for joint limits. This helps when saving\n * and loading a game.\n *\n * The local anchor points are measured from the body's origin rather than the\n * center of mass because: 1. you might not know where the center of mass will\n * be. 2. if you add/remove shapes from a body and recompute the mass, the\n * joints will be broken.\n *\n * @prop {bool} enableLimit A flag to enable joint limits.\n * @prop {bool} enableMotor A flag to enable the joint motor.\n * @prop {float} lowerAngle The lower angle for the joint limit (radians).\n * @prop {float} upperAngle The upper angle for the joint limit (radians).\n * @prop {float} motorSpeed The desired motor speed. Usually in radians per\n *       second.\n * @prop {float} maxMotorTorque The maximum motor torque used to achieve the\n *       desired motor speed. Usually in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\n\nvar DEFAULTS = {\n  lowerAngle : 0.0,\n  upperAngle : 0.0,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  enableLimit : false,\n  enableMotor : false\n};\n\n/**\n * A revolute joint constrains two bodies to share a common point while they are\n * free to rotate about the point. The relative rotation about the shared point\n * is the joint angle. You can limit the relative rotation with a joint limit\n * that specifies a lower and upper angle. You can use a motor to drive the\n * relative rotation about the shared point. A maximum motor torque is provided\n * so that infinite forces are not generated.\n *\n * @param {RevoluteJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RevoluteJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RevoluteJoint)) {\n    return new RevoluteJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RevoluteJoint.TYPE;\n\n  this.m_localAnchorA =  Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB =  Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerAngle = def.lowerAngle;\n  this.m_upperAngle = def.upperAngle;\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  // effective mass for point-to-point constraint.\n  this.m_mass = new Mat33();\n  // effective mass for motor/limit angular constraint.\n  this.m_motorMass; // float\n  this.m_limitState = inactiveLimit;\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Motor constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nRevoluteJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerAngle: this.m_lowerAngle,\n    upperAngle: this.m_upperAngle,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nRevoluteJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RevoluteJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nRevoluteJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRevoluteJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Get the reference angle.\n */\nRevoluteJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle in radians.\n */\nRevoluteJoint.prototype.getJointAngle = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_sweep.a - bA.m_sweep.a - this.m_referenceAngle;\n}\n\n/**\n * Get the current joint angle speed in radians per second.\n */\nRevoluteJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n  return bB.m_angularVelocity - bA.m_angularVelocity;\n}\n\n/**\n * Is the joint motor enabled?\n */\nRevoluteJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nRevoluteJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Get the current motor torque given the inverse time step. Unit is N*m.\n */\nRevoluteJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set the motor speed in radians per second.\n */\nRevoluteJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed in radians per second.\n */\nRevoluteJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set the maximum motor torque, usually in N-m.\n */\nRevoluteJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nRevoluteJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Is the joint limit enabled?\n */\nRevoluteJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nRevoluteJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit in radians.\n */\nRevoluteJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerAngle;\n}\n\n/**\n * Get the upper joint limit in radians.\n */\nRevoluteJoint.prototype.getUpperLimit = function() {\n  return this.m_upperAngle;\n}\n\n/**\n * Set the joint limits in radians.\n */\nRevoluteJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n\n  if (lower != this.m_lowerAngle || upper != this.m_upperAngle) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_impulse.z = 0.0;\n    this.m_lowerAngle = lower;\n    this.m_upperAngle = upper;\n  }\n}\n\nRevoluteJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRevoluteJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\n/**\n * Get the reaction force given the inverse time step. Unit is N.\n */\nRevoluteJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n}\n\n/**\n * Get the reaction torque due to the joint limit given the inverse time step.\n * Unit is N*m.\n */\nRevoluteJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n}\n\nRevoluteJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  this.m_mass.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y\n      * this.m_rB.y * iB;\n  this.m_mass.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y\n      * this.m_rB.x * iB;\n  this.m_mass.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  this.m_mass.ex.y = this.m_mass.ey.x;\n  this.m_mass.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x\n      * this.m_rB.x * iB;\n  this.m_mass.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  this.m_mass.ex.z = this.m_mass.ez.x;\n  this.m_mass.ey.z = this.m_mass.ez.y;\n  this.m_mass.ez.z = iA + iB;\n\n  this.m_motorMass = iA + iB;\n  if (this.m_motorMass > 0.0) {\n    this.m_motorMass = 1.0 / this.m_motorMass;\n  }\n\n  if (this.m_enableMotor == false || fixedRotation) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (this.m_enableLimit && fixedRotation == false) {\n    var jointAngle = aB - aA - this.m_referenceAngle; // float\n\n    if (Math.abs(this.m_upperAngle - this.m_lowerAngle) < 2.0 * Settings.angularSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointAngle <= this.m_lowerAngle) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atLowerLimit;\n\n    } else if (jointAngle >= this.m_upperAngle) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_impulse.z = 0.0;\n      }\n      this.m_limitState = atUpperLimit;\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_motorImpulse + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_motorImpulse + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var fixedRotation = (iA + iB === 0.0); // bool\n\n  // Solve motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits\n      && fixedRotation == false) {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var impulse = Vec3.neg(this.m_mass.solve33(Cdot)); // Vec3\n\n    if (this.m_limitState == equalLimits) {\n      this.m_impulse.add(impulse);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse < 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var newImpulse = this.m_impulse.z + impulse.z; // float\n\n      if (newImpulse > 0.0) {\n        var rhs = Vec2.combine(-1, Cdot1, this.m_impulse.z, Vec2.neo(this.m_mass.ez.x, this.m_mass.ez.y)); // Vec2\n        var reduced = this.m_mass.solve22(rhs); // Vec2\n        impulse.x = reduced.x;\n        impulse.y = reduced.y;\n        impulse.z = -this.m_impulse.z;\n        this.m_impulse.x += reduced.x;\n        this.m_impulse.y += reduced.y;\n        this.m_impulse.z = 0.0;\n\n      } else {\n        this.m_impulse.add(impulse);\n      }\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n\n  } else {\n    // Solve point-to-point constraint\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    var impulse = this.m_mass.solve22(Vec2.neg(Cdot)); // Vec2\n\n    this.m_impulse.x += impulse.x;\n    this.m_impulse.y += impulse.y;\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRevoluteJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var angularError = 0.0; // float\n  var positionError = 0.0; // float\n\n  var fixedRotation = (this.m_invIA + this.m_invIB == 0.0); // bool\n\n  // Solve angular limit constraint.\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit\n      && fixedRotation == false) {\n    var angle = aB - aA - this.m_referenceAngle; // float\n    var limitImpulse = 0.0; // float\n\n    if (this.m_limitState == equalLimits) {\n      // Prevent large angular corrections\n      var C = Math.clamp(angle - this.m_lowerAngle,\n          -Settings.maxAngularCorrection, Settings.maxAngularCorrection); // float\n      limitImpulse = -this.m_motorMass * C;\n      angularError = Math.abs(C);\n\n    } else if (this.m_limitState == atLowerLimit) {\n      var C = angle - this.m_lowerAngle; // float\n      angularError = -C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C + Settings.angularSlop, -Settings.maxAngularCorrection,\n          0.0);\n      limitImpulse = -this.m_motorMass * C;\n\n    } else if (this.m_limitState == atUpperLimit) {\n      var C = angle - this.m_upperAngle; // float\n      angularError = C;\n\n      // Prevent large angular corrections and allow some slop.\n      C = Math.clamp(C - Settings.angularSlop, 0.0,\n          Settings.maxAngularCorrection);\n      limitImpulse = -this.m_motorMass * C;\n    }\n\n    aA -= this.m_invIA * limitImpulse;\n    aB += this.m_invIB * limitImpulse;\n  }\n\n  // Solve point-to-point constraint.\n  {\n    qA.set(aA);\n    qB.set(aB);\n    var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n    var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n\n    var C = Vec2.zero();\n    C.addCombine(1, cB, 1, rB);\n    C.subCombine(1, cA, 1, rA);\n    positionError = C.length();\n\n    var mA = this.m_invMassA;\n    var mB = this.m_invMassB; // float\n    var iA = this.m_invIA;\n    var iB = this.m_invIB; // float\n\n    var K = new Mat22();\n    K.ex.x = mA + mB + iA * rA.y * rA.y + iB * rB.y * rB.y;\n    K.ex.y = -iA * rA.x * rA.y - iB * rB.x * rB.y;\n    K.ey.x = K.ex.y;\n    K.ey.y = mA + mB + iA * rA.x * rA.x + iB * rB.x * rB.x;\n\n    var impulse = Vec2.neg(K.solve(C)); // Vec2\n\n    cA.subMul(mA, impulse);\n    aA -= iA * Vec2.cross(rA, impulse);\n\n    cB.addMul(mB, impulse);\n    aB += iB * Vec2.cross(rB, impulse);\n  }\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PrismaticJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nPrismaticJoint.TYPE = 'prismatic-joint';\nJoint.TYPES[PrismaticJoint.TYPE] = PrismaticJoint;\n\nPrismaticJoint._super = Joint;\nPrismaticJoint.prototype = create(PrismaticJoint._super.prototype);\n\n/**\n * @typedef {Object} PrismaticJointDef\n *\n * Prismatic joint definition. This requires defining a line of motion using an\n * axis and an anchor point. The definition uses local anchor points and a local\n * axis so that the initial configuration can violate the constraint slightly.\n * The joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n * \n * @prop {boolean} enableLimit Enable/disable the joint limit.\n * @prop {float} lowerTranslation The lower translation limit, usually in\n *       meters.\n * @prop {float} upperTranslation The upper translation limit, usually in\n *       meters.\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorForce The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation unit axis in bodyA.\n * @prop {float} referenceAngle The constrained angle between the bodies:\n *       bodyB_angle - bodyA_angle.\n */\n\nvar DEFAULTS = {\n  enableLimit : false,\n  lowerTranslation : 0.0,\n  upperTranslation : 0.0,\n  enableMotor : false,\n  maxMotorForce : 0.0,\n  motorSpeed : 0.0\n};\n\n/**\n * A prismatic joint. This joint provides one degree of freedom: translation\n * along an axis fixed in bodyA. Relative rotation is prevented. You can use a\n * joint limit to restrict the range of motion and a joint motor to drive the\n * motion or to model joint friction.\n *\n * @param {PrismaticJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PrismaticJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof PrismaticJoint)) {\n    return new PrismaticJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PrismaticJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || Vec2.neo(1.0, 0.0));\n  this.m_localXAxisA.normalize();\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_impulse = Vec3();\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n\n  this.m_lowerTranslation = def.lowerTranslation;\n  this.m_upperTranslation = def.upperTranslation;\n  this.m_maxMotorForce = def.maxMotorForce;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableLimit = def.enableLimit;\n  this.m_enableMotor = def.enableMotor;\n  this.m_limitState = inactiveLimit;\n\n  this.m_axis = Vec2.zero();\n  this.m_perp = Vec2.zero();\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_axis, this.m_perp; // Vec2\n  this.m_s1, this.m_s2; // float\n  this.m_a1, this.m_a2; // float\n  this.m_K = new Mat33();\n  this.m_motorMass; // float\n\n  // Linear constraint (point-to-line)\n  // d = p2 - p1 = x2 + r2 - x1 - r1\n  // C = dot(perp, d)\n  // Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 -\n  // cross(w1, r1))\n  // = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) +\n  // dot(cross(r2, perp), v2)\n  // J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]\n  //\n  // Angular constraint\n  // C = a2 - a1 + a_initial\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  //\n  // K = J * invM * JT\n  //\n  // J = [-a -s1 a s2]\n  // [0 -1 0 1]\n  // a = perp\n  // s1 = cross(d + r1, a) = cross(p2 - x1, a)\n  // s2 = cross(r2, a) = cross(p2 - x2, a)\n\n  // Motor/Limit linear constraint\n  // C = dot(ax1, d)\n  // Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) +\n  // dot(cross(r2, ax1), v2)\n  // J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]\n\n  // Block Solver\n  // We develop a block solver that includes the joint limit. This makes the\n  // limit stiff (inelastic) even\n  // when the mass has poor distribution (leading to large torques about the\n  // joint anchor points).\n  //\n  // The Jacobian has 3 rows:\n  // J = [-uT -s1 uT s2] // linear\n  // [0 -1 0 1] // angular\n  // [-vT -a1 vT a2] // limit\n  //\n  // u = perp\n  // v = axis\n  // s1 = cross(d + r1, u), s2 = cross(r2, u)\n  // a1 = cross(d + r1, v), a2 = cross(r2, v)\n\n  // M * (v2 - v1) = JT * df\n  // J * v2 = bias\n  //\n  // v2 = v1 + invM * JT * df\n  // J * (v1 + invM * JT * df) = bias\n  // K * df = bias - J * v1 = -Cdot\n  // K = J * invM * JT\n  // Cdot = J * v1 - bias\n  //\n  // Now solve for f2.\n  // df = f2 - f1\n  // K * (f2 - f1) = -Cdot\n  // f2 = invK * (-Cdot) + f1\n  //\n  // Clamp accumulated limit impulse.\n  // lower: f2(3) = max(f2(3), 0)\n  // upper: f2(3) = min(f2(3), 0)\n  //\n  // Solve for correct f2(1:2)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1\n  // = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3)\n  // K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) +\n  // K(1:2,1:2) * f1(1:2)\n  // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n  // f1(1:2)\n  //\n  // Now compute impulse to be applied:\n  // df = f2 - f1\n}\n\nPrismaticJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    lowerTranslation: this.m_lowerTranslation,\n    upperTranslation: this.m_upperTranslation,\n    maxMotorForce: this.m_maxMotorForce,\n    motorSpeed: this.m_motorSpeed,\n    enableLimit: this.m_enableLimit,\n    enableMotor: this.m_enableMotor,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nPrismaticJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.localAxisA = Vec2(data.localAxisA);\n  var joint = new PrismaticJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nPrismaticJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nPrismaticJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nPrismaticJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the reference angle.\n */\nPrismaticJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nPrismaticJoint.prototype.getJointTranslation = function() {\n  var pA = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var pB = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var d = Vec2.sub(pB, pA);\n  var axis = this.m_bodyA.getWorldVector(this.m_localXAxisA);\n\n  var translation = Vec2.dot(d, axis);\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getJointSpeed = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var rA = Rot.mulVec2(bA.m_xf.q, Vec2.sub(this.m_localAnchorA, bA.m_sweep.localCenter)); // Vec2\n  var rB = Rot.mulVec2(bB.m_xf.q, Vec2.sub(this.m_localAnchorB, bB.m_sweep.localCenter)); // Vec2\n  var p1 = Vec2.add(bA.m_sweep.c, rA); // Vec2\n  var p2 = Vec2.add(bB.m_sweep.c, rB); // Vec2\n  var d = Vec2.sub(p2, p1); // Vec2\n  var axis = Rot.mulVec2(bA.m_xf.q, this.m_localXAxisA); // Vec2\n\n  var vA = bA.m_linearVelocity; // Vec2\n  var vB = bB.m_linearVelocity; // Vec2\n  var wA = bA.m_angularVelocity; // float\n  var wB = bB.m_angularVelocity; // float\n\n  var speed = Vec2.dot(d, Vec2.cross(wA, axis))\n      + Vec2.dot(axis, Vec2.sub(Vec2.addCross(vB, wB, rB), Vec2.addCross(vA, wA, rA))); // float\n  return speed;\n}\n\n/**\n * Is the joint limit enabled?\n */\nPrismaticJoint.prototype.isLimitEnabled = function() {\n  return this.m_enableLimit;\n}\n\n/**\n * Enable/disable the joint limit.\n */\nPrismaticJoint.prototype.enableLimit = function(flag) {\n  if (flag != this.m_enableLimit) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_enableLimit = flag;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Get the lower joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getLowerLimit = function() {\n  return this.m_lowerTranslation;\n}\n\n/**\n * Get the upper joint limit, usually in meters.\n */\nPrismaticJoint.prototype.getUpperLimit = function() {\n  return this.m_upperTranslation;\n}\n\n/**\n * Set the joint limits, usually in meters.\n */\nPrismaticJoint.prototype.setLimits = function(lower, upper) {\n  _ASSERT && common.assert(lower <= upper);\n  if (lower != this.m_lowerTranslation || upper != this.m_upperTranslation) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_lowerTranslation = lower;\n    this.m_upperTranslation = upper;\n    this.m_impulse.z = 0.0;\n  }\n}\n\n/**\n * Is the joint motor enabled?\n */\nPrismaticJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nPrismaticJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Set the maximum motor force, usually in N.\n */\nPrismaticJoint.prototype.setMaxMotorForce = function(force) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorForce = force;\n}\n\nPrismaticJoint.prototype.getMaxMotorForce = function() {\n  return this.m_maxMotorForce;\n}\n\n/**\n * Get the motor speed, usually in meters per second.\n */\nPrismaticJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Get the current motor force given the inverse time step, usually in N.\n */\nPrismaticJoint.prototype.getMotorForce = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nPrismaticJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPrismaticJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPrismaticJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse + this.m_impulse.z, this.m_axis).mul(inv_dt);\n}\n\nPrismaticJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.y;\n}\n\nPrismaticJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  // Compute motor Jacobian and effective mass.\n  {\n    this.m_axis = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_a1 = Vec2.cross(Vec2.add(d, rA), this.m_axis);\n    this.m_a2 = Vec2.cross(rB, this.m_axis);\n\n    this.m_motorMass = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2\n        * this.m_a2;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  }\n\n  // Prismatic constraint.\n  {\n    this.m_perp = Rot.mulVec2(qA, this.m_localYAxisA);\n\n    this.m_s1 = Vec2.cross(Vec2.add(d, rA), this.m_perp);\n    this.m_s2 = Vec2.cross(rB, this.m_perp);\n\n    var s1test = Vec2.cross(rA, this.m_perp);\n\n    var k11 = mA + mB + iA * this.m_s1 * this.m_s1 + iB * this.m_s2 * this.m_s2;\n    var k12 = iA * this.m_s1 + iB * this.m_s2;\n    var k13 = iA * this.m_s1 * this.m_a1 + iB * this.m_s2 * this.m_a2;\n    var k22 = iA + iB;\n    if (k22 == 0.0) {\n      // For bodies with fixed rotation.\n      k22 = 1.0;\n    }\n    var k23 = iA * this.m_a1 + iB * this.m_a2;\n    var k33 = mA + mB + iA * this.m_a1 * this.m_a1 + iB * this.m_a2 * this.m_a2;\n\n    this.m_K.ex.set(k11, k12, k13);\n    this.m_K.ey.set(k12, k22, k23);\n    this.m_K.ez.set(k13, k23, k33);\n  }\n\n  // Compute motor and limit terms.\n  if (this.m_enableLimit) {\n\n    var jointTranslation = Vec2.dot(this.m_axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * Settings.linearSlop) {\n      this.m_limitState = equalLimits;\n\n    } else if (jointTranslation <= this.m_lowerTranslation) {\n      if (this.m_limitState != atLowerLimit) {\n        this.m_limitState = atLowerLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else if (jointTranslation >= this.m_upperTranslation) {\n      if (this.m_limitState != atUpperLimit) {\n        this.m_limitState = atUpperLimit;\n        this.m_impulse.z = 0.0;\n      }\n\n    } else {\n      this.m_limitState = inactiveLimit;\n      this.m_impulse.z = 0.0;\n    }\n\n  } else {\n    this.m_limitState = inactiveLimit;\n    this.m_impulse.z = 0.0;\n  }\n\n  if (this.m_enableMotor == false) {\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse.mul(step.dtRatio);\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse.x, this.m_perp, this.m_motorImpulse\n        + this.m_impulse.z, this.m_axis);\n    var LA = this.m_impulse.x * this.m_s1 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a1;\n    var LB = this.m_impulse.x * this.m_s2 + this.m_impulse.y\n        + (this.m_motorImpulse + this.m_impulse.z) * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    this.m_impulse.setZero();\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Solve linear motor constraint.\n  if (this.m_enableMotor && this.m_limitState != equalLimits) {\n    var Cdot = Vec2.dot(this.m_axis, Vec2.sub(vB, vA)) + this.m_a2 * wB\n        - this.m_a1 * wA;\n    var impulse = this.m_motorMass * (this.m_motorSpeed - Cdot);\n    var oldImpulse = this.m_motorImpulse;\n    var maxImpulse = step.dt * this.m_maxMotorForce;\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    var P = Vec2.mul(impulse, this.m_axis);\n    var LA = impulse * this.m_a1;\n    var LB = impulse * this.m_a2;\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  var Cdot1 = Vec2.zero();\n  Cdot1.x += Vec2.dot(this.m_perp, vB) + this.m_s2 * wB;\n  Cdot1.x -= Vec2.dot(this.m_perp, vA) + this.m_s1 * wA;\n  Cdot1.y = wB - wA;\n\n  if (this.m_enableLimit && this.m_limitState != inactiveLimit) {\n    // Solve prismatic and limit constraint in block form.\n    var Cdot2 = 0;\n    Cdot2 += Vec2.dot(this.m_axis, vB) + this.m_a2 * wB;\n    Cdot2 -= Vec2.dot(this.m_axis, vA) + this.m_a1 * wA;\n\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2);\n\n    var f1 = Vec3(this.m_impulse);\n    var df = this.m_K.solve33(Vec3.neg(Cdot)); // Vec3\n    this.m_impulse.add(df);\n\n    if (this.m_limitState == atLowerLimit) {\n      this.m_impulse.z = Math.max(this.m_impulse.z, 0.0);\n    } else if (this.m_limitState == atUpperLimit) {\n      this.m_impulse.z = Math.min(this.m_impulse.z, 0.0);\n    }\n\n    // f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) +\n    // f1(1:2)\n    var b = Vec2.combine(-1, Cdot1, -(this.m_impulse.z - f1.z), Vec2.neo(this.m_K.ez.x, this.m_K.ez.y)); // Vec2\n    var f2r = Vec2.add(this.m_K.solve22(b), Vec2.neo(f1.x, f1.y)); // Vec2\n    this.m_impulse.x = f2r.x;\n    this.m_impulse.y = f2r.y;\n\n    df = Vec3.sub(this.m_impulse, f1);\n\n    var P = Vec2.combine(df.x, this.m_perp, df.z, this.m_axis); // Vec2\n    var LA = df.x * this.m_s1 + df.y + df.z * this.m_a1; // float\n    var LB = df.x * this.m_s2 + df.y + df.z * this.m_a2; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  } else {\n    // Limit is inactive, just solve the prismatic constraint in block form.\n    var df = this.m_K.solve22(Vec2.neg(Cdot1)); // Vec2\n    this.m_impulse.x += df.x;\n    this.m_impulse.y += df.y;\n\n    var P = Vec2.mul(df.x, this.m_perp); // Vec2\n    var LA = df.x * this.m_s1 + df.y; // float\n    var LB = df.x * this.m_s2 + df.y; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPrismaticJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  // Compute fresh Jacobians\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA)); // Vec2\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB)); // Vec2\n  var d = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA)); // Vec2\n\n  var axis = Rot.mulVec2(qA, this.m_localXAxisA); // Vec2\n  var a1 = Vec2.cross(Vec2.add(d, rA), axis); // float\n  var a2 = Vec2.cross(rB, axis); // float\n  var perp = Rot.mulVec2(qA, this.m_localYAxisA); // Vec2\n\n  var s1 = Vec2.cross(Vec2.add(d, rA), perp); // float\n  var s2 = Vec2.cross(rB, perp); // float\n\n  var impulse = Vec3();\n  var C1 = Vec2.zero(); // Vec2\n  C1.x = Vec2.dot(perp, d);\n  C1.y = aB - aA - this.m_referenceAngle;\n\n  var linearError = Math.abs(C1.x); // float\n  var angularError = Math.abs(C1.y); // float\n\n  var linearSlop = Settings.linearSlop;\n  var maxLinearCorrection = Settings.maxLinearCorrection;\n\n  var active = false; // bool\n  var C2 = 0.0; // float\n  if (this.m_enableLimit) {\n\n    var translation = Vec2.dot(axis, d); // float\n    if (Math.abs(this.m_upperTranslation - this.m_lowerTranslation) < 2.0 * linearSlop) {\n      // Prevent large angular corrections\n      C2 = Math.clamp(translation, -maxLinearCorrection, maxLinearCorrection);\n      linearError = Math.max(linearError, Math.abs(translation));\n      active = true;\n\n    } else if (translation <= this.m_lowerTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_lowerTranslation + linearSlop,\n          -maxLinearCorrection, 0.0);\n      linearError = Math\n          .max(linearError, this.m_lowerTranslation - translation);\n      active = true;\n\n    } else if (translation >= this.m_upperTranslation) {\n      // Prevent large linear corrections and allow some slop.\n      C2 = Math.clamp(translation - this.m_upperTranslation - linearSlop, 0.0,\n          maxLinearCorrection);\n      linearError = Math\n          .max(linearError, translation - this.m_upperTranslation);\n      active = true;\n    }\n  }\n\n  if (active) {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k13 = iA * s1 * a1 + iB * s2 * a2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      // For fixed rotation\n      k22 = 1.0;\n    }\n    var k23 = iA * a1 + iB * a2; // float\n    var k33 = mA + mB + iA * a1 * a1 + iB * a2 * a2; // float\n\n    var K = new Mat33()\n    K.ex.set(k11, k12, k13);\n    K.ey.set(k12, k22, k23);\n    K.ez.set(k13, k23, k33);\n\n    var C = Vec3();\n    C.x = C1.x;\n    C.y = C1.y;\n    C.z = C2;\n\n    impulse = K.solve33(Vec3.neg(C));\n  } else {\n    var k11 = mA + mB + iA * s1 * s1 + iB * s2 * s2; // float\n    var k12 = iA * s1 + iB * s2; // float\n    var k22 = iA + iB; // float\n    if (k22 == 0.0) {\n      k22 = 1.0;\n    }\n\n    var K = new Mat22();\n    K.ex.set(k11, k12);\n    K.ey.set(k12, k22);\n\n    var impulse1 = K.solve(Vec2.neg(C1)); // Vec2\n    impulse.x = impulse1.x;\n    impulse.y = impulse1.y;\n    impulse.z = 0.0;\n  }\n\n  var P = Vec2.combine(impulse.x, perp, impulse.z, axis); // Vec2\n  var LA = impulse.x * s1 + impulse.y + impulse.z * a1; // float\n  var LB = impulse.x * s2 + impulse.y + impulse.z * a2; // float\n\n  cA.subMul(mA, P);\n  aA -= iA * LA;\n  cB.addMul(mB, P);\n  aB += iB * LB;\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","exports.internal = {};\n\nexports.Serializer = require('./serializer');\n\nexports.Math = require('./common/Math');\nexports.Vec2 = require('./common/Vec2');\nexports.Vec3 = require('./common/Vec3');\nexports.Mat22 = require('./common/Mat22');\nexports.Mat33 = require('./common/Mat33');\nexports.Transform = require('./common/Transform');\nexports.Rot = require('./common/Rot');\n\nexports.AABB = require('./collision/AABB');\n\nexports.Shape = require('./Shape');\nexports.Fixture = require('./Fixture');\nexports.Body = require('./Body');\nexports.Contact = require('./Contact');\nexports.Joint = require('./Joint');\nexports.World = require('./World');\n\nexports.Circle = require('./shape/CircleShape');\nexports.Edge = require('./shape/EdgeShape');\nexports.Polygon = require('./shape/PolygonShape');\nexports.Chain = require('./shape/ChainShape');\nexports.Box = require('./shape/BoxShape');\n\nrequire('./shape/CollideCircle');\nrequire('./shape/CollideEdgeCircle');\nexports.internal.CollidePolygons = require('./shape/CollidePolygon');\nrequire('./shape/CollideCirclePolygone');\nrequire('./shape/CollideEdgePolygon');\n\nexports.DistanceJoint = require('./joint/DistanceJoint');\nexports.FrictionJoint = require('./joint/FrictionJoint');\nexports.GearJoint = require('./joint/GearJoint');\nexports.MotorJoint = require('./joint/MotorJoint');\nexports.MouseJoint = require('./joint/MouseJoint');\nexports.PrismaticJoint = require('./joint/PrismaticJoint');\nexports.PulleyJoint = require('./joint/PulleyJoint');\nexports.RevoluteJoint = require('./joint/RevoluteJoint');\nexports.RopeJoint = require('./joint/RopeJoint');\nexports.WeldJoint = require('./joint/WeldJoint');\nexports.WheelJoint = require('./joint/WheelJoint');\n\nexports.internal.Sweep = require('./common/Sweep');\nexports.internal.stats = require('./common/stats');\nexports.internal.Manifold = require('./Manifold');\nexports.internal.Distance = require('./collision/Distance');\nexports.internal.TimeOfImpact = require('./collision/TimeOfImpact');\nexports.internal.DynamicTree = require('./collision/DynamicTree');\nexports.internal.Settings = require('./Settings');\n","var World = require('../World');\nvar Body = require('../Body');\nvar Joint = require('../Joint');\nvar Shape = require('../Shape');\n\nvar SID = 0;\n\nfunction Serializer(opts) {\n  opts = opts || {};\n\n  var rootClass = opts.rootClass || World;\n\n  var preSerialize = opts.preSerialize || function (obj) { return obj; };\n  var postSerialize = opts.postSerialize || function (data, obj) { return data; };\n\n  var preDeserialize = opts.preDeserialize || function (data) { return data; };\n  var postDeserialize = opts.postDeserialize || function (obj, data) { return obj; };\n\n  var refTypes = {\n    'World': World,\n    'Body': Body,\n    'Joint': Joint,\n    'Shape': Shape,\n  };\n\n  this.toJson = function (root) {\n    var json = [];\n\n    var queue = [root];\n    var refMap = {};\n\n    function storeRef(value, typeName) {\n      value.__sid = value.__sid || ++SID;\n      if (!refMap[value.__sid]) {\n        queue.push(value);\n        var index = json.length + queue.length;\n        var ref = {\n          refIndex: index,\n          refType: typeName\n        };\n        refMap[value.__sid] = ref;\n      }\n      return refMap[value.__sid];\n    }\n\n    function serialize(obj) {\n      obj = preSerialize(obj);\n      var data = obj._serialize();\n      data = postSerialize(data, obj);\n      return data;\n    }\n\n    function toJson(value, top) {\n      if (typeof value !== 'object' || value === null) {\n        return value;\n      }\n      if (typeof value._serialize === 'function') {\n        if (value !== top) {\n          for (var typeName in refTypes) {\n            if (value instanceof refTypes[typeName]) {\n              return storeRef(value, typeName);\n            }\n          }\n        }\n        value = serialize(value);\n      }\n      if (Array.isArray(value)) {\n        var newValue = [];\n        for (var key = 0; key < value.length; key++) {\n          newValue[key] = toJson(value[key]);\n        }\n        value = newValue;\n\n      } else {\n        var newValue = {};\n        for (var key in value) {\n          if (value.hasOwnProperty(key)) {\n            newValue[key] = toJson(value[key]);\n          }\n        }\n        value = newValue;\n      }\n      return value;\n    }\n\n    while (queue.length) {\n      var obj = queue.shift();\n      var str = toJson(obj, obj);\n      json.push(str);\n    }\n\n    return json;\n  };\n\n  this.fromJson = function (json) {\n    var refMap = {};\n\n    function deserialize(cls, data, ctx) {\n      data = preDeserialize(data);\n      var obj = cls._deserialize(data, ctx, restoreRef);\n      obj = postDeserialize(obj, data);\n      return obj;\n    }\n\n    function restoreRef(cls, ref, ctx) {\n      if (!ref.refIndex) {\n        return cls && cls._deserialize && deserialize(cls, ref, ctx);\n      }\n      cls = refTypes[ref.refType] || cls;\n      var index = ref.refIndex;\n      if (!refMap[index]) {\n        var data = json[index];\n        var obj = deserialize(cls, data, ctx);\n        refMap[index] = obj;\n      }\n      return refMap[index];\n    }\n\n    var root = rootClass._deserialize(json[0], null, restoreRef);\n\n    return root;\n  }\n}\n\nmodule.exports = Serializer;\n\nvar serializer = new Serializer();\nmodule.exports.toJson = serializer.toJson;\nmodule.exports.fromJson = serializer.fromJson;\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar Settings = require('../Settings');\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar AABB = require('./AABB');\nvar DynamicTree = require('./DynamicTree');\n\nmodule.exports = BroadPhase;\n\n/**\n * The broad-phase wraps and extends a dynamic-tree to keep track of moved\n * objects and query them on update.\n */\nfunction BroadPhase() {\n  this.m_tree = new DynamicTree();\n  this.m_proxyCount = 0;\n  this.m_moveBuffer = [];\n  this.queryCallback = this.queryCallback.bind(this);\n};\n\n/**\n * Get user data from a proxy. Returns null if the id is invalid.\n */\nBroadPhase.prototype.getUserData = function(proxyId) {\n  return this.m_tree.getUserData(proxyId);\n}\n\n/**\n * Test overlap of fat AABBs.\n */\nBroadPhase.prototype.testOverlap = function(proxyIdA, proxyIdB) {\n  var aabbA = this.m_tree.getFatAABB(proxyIdA);\n  var aabbB = this.m_tree.getFatAABB(proxyIdB);\n  return AABB.testOverlap(aabbA, aabbB);\n}\n\n/**\n * Get the fat AABB for a proxy.\n */\nBroadPhase.prototype.getFatAABB = function(proxyId) {\n  return this.m_tree.getFatAABB(proxyId);\n}\n\n/**\n * Get the number of proxies.\n */\nBroadPhase.prototype.getProxyCount = function() {\n  return this.m_proxyCount;\n}\n\n/**\n * Get the height of the embedded tree.\n */\nBroadPhase.prototype.getTreeHeight = function() {\n  return this.m_tree.getHeight();\n}\n\n/**\n * Get the balance (integer) of the embedded tree.\n */\nBroadPhase.prototype.getTreeBalance = function() {\n  return this.m_tree.getMaxBalance();\n}\n\n/**\n * Get the quality metric of the embedded tree.\n */\nBroadPhase.prototype.getTreeQuality = function() {\n  return this.m_tree.getAreaRatio();\n}\n\n/**\n * Query an AABB for overlapping proxies. The callback class is called for each\n * proxy that overlaps the supplied AABB.\n */\nBroadPhase.prototype.query = function(aabb, queryCallback) {\n  this.m_tree.query(aabb, queryCallback);\n}\n\n/**\n * Ray-cast against the proxies in the tree. This relies on the callback to\n * perform a exact ray-cast in the case were the proxy contains a shape. The\n * callback also performs the any collision filtering. This has performance\n * roughly equal to k * log(n), where k is the number of collisions and n is the\n * number of proxies in the tree.\n * \n * @param input The ray-cast input data. The ray extends from p1 to p1 +\n *          maxFraction * (p2 - p1).\n * @param rayCastCallback A function that is called for each proxy that is hit by\n *          the ray.\n */\nBroadPhase.prototype.rayCast = function(input, rayCastCallback) {\n  this.m_tree.rayCast(input, rayCastCallback);\n}\n\n/**\n * Shift the world origin. Useful for large worlds. The shift formula is:\n * position -= newOrigin\n * \n * @param newOrigin The new origin with respect to the old origin\n */\nBroadPhase.prototype.shiftOrigin = function(newOrigin) {\n  this.m_tree.shiftOrigin(newOrigin);\n}\n\n/**\n * Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs\n * is called.\n */\nBroadPhase.prototype.createProxy = function(aabb, userData) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var proxyId = this.m_tree.createProxy(aabb, userData);\n  this.m_proxyCount++;\n  this.bufferMove(proxyId);\n  return proxyId;\n}\n\n/**\n * Destroy a proxy. It is up to the client to remove any pairs.\n */\nBroadPhase.prototype.destroyProxy = function(proxyId) {\n  this.unbufferMove(proxyId);\n  this.m_proxyCount--;\n  this.m_tree.destroyProxy(proxyId);\n}\n\n/**\n * Call moveProxy as many times as you like, then when you are done call\n * UpdatePairs to finalized the proxy pairs (for your time step).\n */\nBroadPhase.prototype.moveProxy = function(proxyId, aabb, displacement) {\n  _ASSERT && common.assert(AABB.isValid(aabb));\n  var changed = this.m_tree.moveProxy(proxyId, aabb, displacement);\n  if (changed) {\n    this.bufferMove(proxyId);\n  }\n}\n\n/**\n * Call to trigger a re-processing of it's pairs on the next call to\n * UpdatePairs.\n */\nBroadPhase.prototype.touchProxy = function(proxyId) {\n  this.bufferMove(proxyId);\n}\n\nBroadPhase.prototype.bufferMove = function(proxyId) {\n  this.m_moveBuffer.push(proxyId);\n}\n\nBroadPhase.prototype.unbufferMove = function(proxyId) {\n  for (var i = 0; i < this.m_moveBuffer.length; ++i) {\n    if (this.m_moveBuffer[i] == proxyId) {\n      this.m_moveBuffer[i] = null;\n    }\n  }\n}\n\n/**\n * @function BroadPhase~addPair\n * @param {Object} userDataA\n * @param {Object} userDataB\n */\n\n/**\n * Update the pairs. This results in pair callbacks. This can only add pairs.\n * \n * @param {BroadPhase~AddPair} addPairCallback\n */\nBroadPhase.prototype.updatePairs = function(addPairCallback) {\n  _ASSERT && common.assert(typeof addPairCallback === 'function');\n  this.m_callback = addPairCallback;\n\n  // Perform tree queries for all moving proxies.\n  while (this.m_moveBuffer.length > 0) {\n    this.m_queryProxyId = this.m_moveBuffer.pop();\n    if (this.m_queryProxyId === null) {\n      continue;\n    }\n\n    // We have to query the tree with the fat AABB so that\n    // we don't fail to create a pair that may touch later.\n    var fatAABB = this.m_tree.getFatAABB(this.m_queryProxyId);\n\n    // Query tree, create pairs and add them pair buffer.\n    this.m_tree.query(fatAABB, this.queryCallback);\n  }\n\n  // Try to keep the tree balanced.\n  // this.m_tree.rebalance(4);\n}\n\nBroadPhase.prototype.queryCallback = function(proxyId) {\n  // A proxy cannot form a pair with itself.\n  if (proxyId == this.m_queryProxyId) {\n    return true;\n  }\n\n  var proxyIdA = Math.min(proxyId, this.m_queryProxyId);\n  var proxyIdB = Math.max(proxyId, this.m_queryProxyId);\n\n  // TODO: Skip any duplicate pairs.\n\n  var userDataA = this.m_tree.getUserData(proxyIdA);\n  var userDataB = this.m_tree.getUserData(proxyIdB);\n\n  // Send the pairs back to the client.\n  this.m_callback(userDataA, userDataB);\n\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Pool;\n\nfunction Pool(opts) {\n  var _list = [];\n  var _max = opts.max || Infinity;\n\n  var _createFn = opts.create;\n  var _outFn = opts.allocate;\n  var _inFn = opts.release;\n  var _discardFn = opts.discard;\n\n  var _createCount = 0;\n  var _outCount = 0;\n  var _inCount = 0;\n  var _discardCount = 0;\n\n  this.max = function(n) {\n    if (typeof n === 'number') {\n      _max = n;\n      return this;\n    }\n    return _max;\n  };\n\n  this.size = function() {\n    return _list.length;\n  };\n\n  this.allocate = function() {\n    var item;\n    if (_list.length > 0) {\n      item = _list.shift();\n    } else {\n      _createCount++;\n      if (typeof _createFn === 'function') {\n        item = _createFn();\n      } else {\n        item = {};\n      }\n    }\n    _outCount++;\n    if (typeof _outFn === 'function') {\n      _outFn(item);\n    }\n    return item;\n  };\n\n  this.release = function(item) {\n    if (_list.length < _max) {\n      _inCount++;\n      if (typeof _inFn === 'function') {\n        _inFn(item);\n      }\n      _list.push(item);\n    } else {\n      _discardCount++;\n      if (typeof _discardFn === 'function') {\n        item = _discardFn(item);\n      }\n    }\n  };\n\n  this.toString = function() {\n    return \" +\" + _createCount + \" >\" + _outCount + \" <\" + _inCount + \" -\"\n        + _discardCount + \" =\" + _list.length + \"/\" + _max;\n  };\n}","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = Solver;\nmodule.exports.TimeStep = TimeStep;\n\nvar Settings = require('./Settings');\nvar common = require('./util/common');\n\nvar Vec2 = require('./common/Vec2');\nvar Math = require('./common/Math');\n\nvar Body = require('./Body');\nvar Contact = require('./Contact');\nvar Joint = require('./Joint');\n\nvar TimeOfImpact = require('./collision/TimeOfImpact');\nvar TOIInput = TimeOfImpact.Input;\nvar TOIOutput = TimeOfImpact.Output;\n\nvar Distance = require('./collision/Distance');\nvar DistanceInput = Distance.Input;\nvar DistanceOutput = Distance.Output;\nvar DistanceProxy = Distance.Proxy;\nvar SimplexCache = Distance.Cache;\n\nfunction TimeStep(dt) {\n  this.dt = 0; // time step\n  this.inv_dt = 0; // inverse time step (0 if dt == 0)\n  this.velocityIterations = 0;\n  this.positionIterations = 0;\n  this.warmStarting = false;\n  this.blockSolve = true;\n\n  // timestep ratio for variable timestep\n  this.inv_dt0 = 0.0;\n  this.dtRatio = 1; // dt * inv_dt0\n}\n\nTimeStep.prototype.reset = function(dt) {\n  if (this.dt > 0.0) {\n    this.inv_dt0 = this.inv_dt;\n  }\n  this.dt = dt;\n  this.inv_dt = dt == 0 ? 0 : 1 / dt;\n  this.dtRatio = dt * this.inv_dt0;\n}\n\n/**\n * Finds and solves islands. An island is a connected subset of the world.\n * \n * @param {World} world\n */\nfunction Solver(world) {\n  this.m_world = world;\n  this.m_stack = [];\n  this.m_bodies = [];\n  this.m_contacts = [];\n  this.m_joints = [];\n}\n\nSolver.prototype.clear = function() {\n  this.m_stack.length = 0;\n  this.m_bodies.length = 0;\n  this.m_contacts.length = 0;\n  this.m_joints.length = 0;\n}\n\nSolver.prototype.addBody = function(body) {\n  _ASSERT && common.assert(body instanceof Body, 'Not a Body!', body);\n  this.m_bodies.push(body);\n  // why?\n//  body.c_position.c.setZero();\n//  body.c_position.a = 0;\n//  body.c_velocity.v.setZero();\n//  body.c_velocity.w = 0;\n};\n\nSolver.prototype.addContact = function(contact) {\n  _ASSERT && common.assert(contact instanceof Contact, 'Not a Contact!', contact);\n  this.m_contacts.push(contact);\n};\n\nSolver.prototype.addJoint = function(joint) {\n  _ASSERT && common.assert(joint instanceof Joint, 'Not a Joint!', joint);\n  this.m_joints.push(joint);\n};\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorld = function(step) {\n  var world = this.m_world;\n\n  // Clear all the island flags.\n  for (var b = world.m_bodyList; b; b = b.m_next) {\n    b.m_islandFlag = false;\n  }\n  for (var c = world.m_contactList; c; c = c.m_next) {\n    c.m_islandFlag = false;\n  }\n  for (var j = world.m_jointList; j; j = j.m_next) {\n    j.m_islandFlag = false;\n  }\n\n  // Build and simulate all awake islands.\n  var stack = this.m_stack;\n  var loop = -1;\n  for (var seed = world.m_bodyList; seed; seed = seed.m_next) {\n    loop++;\n    if (seed.m_islandFlag) {\n      continue;\n    }\n\n    if (seed.isAwake() == false || seed.isActive() == false) {\n      continue;\n    }\n\n    // The seed can be dynamic or kinematic.\n    if (seed.isStatic()) {\n      continue;\n    }\n\n    // Reset island and stack.\n    this.clear();\n\n    stack.push(seed);\n\n    seed.m_islandFlag = true;\n\n    // Perform a depth first search (DFS) on the constraint graph.\n    while (stack.length > 0) {\n      // Grab the next body off the stack and add it to the island.\n      var b = stack.pop();\n      _ASSERT && common.assert(b.isActive() == true);\n      this.addBody(b);\n\n      // Make sure the body is awake.\n      b.setAwake(true);\n\n      // To keep islands as small as possible, we don't\n      // propagate islands across static bodies.\n      if (b.isStatic()) {\n        continue;\n      }\n      \n      // Search all contacts connected to this body.\n      for (var ce = b.m_contactList; ce; ce = ce.next) {\n        var contact = ce.contact;\n\n        // Has this contact already been added to an island?\n        if (contact.m_islandFlag) {\n          continue;\n        }\n\n        // Is this contact solid and touching?\n        if (contact.isEnabled() == false || contact.isTouching() == false) {\n          continue;\n        }\n\n        // Skip sensors.\n        var sensorA = contact.m_fixtureA.m_isSensor;\n        var sensorB = contact.m_fixtureB.m_isSensor;\n        if (sensorA || sensorB) {\n          continue;\n        }\n\n        this.addContact(contact);\n        contact.m_islandFlag = true;\n\n        var other = ce.other;\n\n        // Was the other body already added to this island?\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n\n      // Search all joints connect to this body.\n      for (var je = b.m_jointList; je; je = je.next) {\n        if (je.joint.m_islandFlag == true) {\n          continue;\n        }\n\n        var other = je.other;\n\n        // Don't simulate joints connected to inactive bodies.\n        if (other.isActive() == false) {\n          continue;\n        }\n\n        this.addJoint(je.joint);\n        je.joint.m_islandFlag = true;\n\n        if (other.m_islandFlag) {\n          continue;\n        }\n\n        // _ASSERT && common.assert(stack.length < world.m_bodyCount);\n        stack.push(other);\n        other.m_islandFlag = true;\n      }\n    }\n\n    this.solveIsland(step);\n\n    // Post solve cleanup.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      // Allow static bodies to participate in other islands.\n      // TODO: are they added at all?\n      var b = this.m_bodies[i];\n      if (b.isStatic()) {\n        b.m_islandFlag = false;\n      }\n    }\n  }\n}\n\n/**\n * @param {TimeStep} step\n */\nSolver.prototype.solveIsland = function(step) {\n  // B2: Island Solve\n  var world = this.m_world;\n  var gravity = world.m_gravity;\n  var allowSleep = world.m_allowSleep;\n\n  var h = step.dt;\n\n  // Integrate velocities and apply damping. Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.m_sweep.c);\n    var a = body.m_sweep.a;\n    var v = Vec2.clone(body.m_linearVelocity);\n    var w = body.m_angularVelocity;\n\n    // Store positions for continuous collision.\n    body.m_sweep.c0.set(body.m_sweep.c);\n    body.m_sweep.a0 = body.m_sweep.a;\n\n    if (body.isDynamic()) {\n      // Integrate velocities.\n      v.addMul(h * body.m_gravityScale, gravity);\n      v.addMul(h * body.m_invMass, body.m_force);\n      w += h * body.m_invI * body.m_torque;\n      /**\n       * <pre>\n       * Apply damping.\n       * ODE: dv/dt + c * v = 0\n       * Solution: v(t) = v0 * exp(-c * t)\n       * Time step: v(t + dt) = v0 * exp(-c * (t + dt)) = v0 * exp(-c * t) * exp(-c * dt) = v * exp(-c * dt)\n       * v2 = exp(-c * dt) * v1\n       * Pade approximation:\n       * v2 = v1 * 1 / (1 + c * dt)\n       * </pre>\n       */\n      v.mul(1.0 / (1.0 + h * body.m_linearDamping));\n      w *= 1.0 / (1.0 + h * body.m_angularDamping);\n    }\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('M: ');\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(step);\n  }\n\n  _DEBUG && this.printBodies('R: ');\n\n  if (step.warmStarting) {\n    // Warm start.\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var contact = this.m_contacts[i];\n      contact.warmStartConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('Q: ');\n  \n  for (var i = 0; i < this.m_joints.length; ++i) {\n    var joint = this.m_joints[i];\n    joint.initVelocityConstraints(step);\n  }\n\n  _DEBUG && this.printBodies('E: ');\n\n  // Solve velocity constraints\n  for (var i = 0; i < step.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      joint.solveVelocityConstraints(step);\n    }\n\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(step);\n    }\n  }\n\n  _DEBUG && this.printBodies('D: ');\n\n  // Store impulses for warm starting\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.storeConstraintImpulses(step);\n  }\n\n  _DEBUG && this.printBodies('C: ');\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.lengthSquared(translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c.set(c);\n    body.c_position.a = a;\n    body.c_velocity.v.set(v);\n    body.c_velocity.w = w;\n  }\n\n  _DEBUG && this.printBodies('B: ');\n\n  // Solve position constraints\n  var positionSolved = false;\n  for (var i = 0; i < step.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraint(step);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -3.0 * Settings.linearSlop;\n\n    var jointsOkay = true;\n    for (var j = 0; j < this.m_joints.length; ++j) {\n      var joint = this.m_joints[j];\n      var jointOkay = joint.solvePositionConstraints(step);\n      jointsOkay = jointsOkay && jointOkay;\n    }\n\n    if (contactsOkay && jointsOkay) {\n      // Exit early if the position errors are small.\n      positionSolved = true;\n      break;\n    }\n  }\n\n  _DEBUG && this.printBodies('L: ');\n\n  // Copy state buffers back to the bodies\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    body.m_sweep.c.set(body.c_position.c);\n    body.m_sweep.a = body.c_position.a;\n    body.m_linearVelocity.set(body.c_velocity.v);\n    body.m_angularVelocity = body.c_velocity.w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n\n  if (allowSleep) {\n    var minSleepTime = Infinity;\n\n    var linTolSqr = Settings.linearSleepToleranceSqr;\n    var angTolSqr = Settings.angularSleepToleranceSqr;\n\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      if (body.isStatic()) {\n        continue;\n      }\n\n      if ((body.m_autoSleepFlag == false)\n          || (body.m_angularVelocity * body.m_angularVelocity > angTolSqr)\n          || (Vec2.lengthSquared(body.m_linearVelocity) > linTolSqr)) {\n        body.m_sleepTime = 0.0;\n        minSleepTime = 0.0;\n      } else {\n        body.m_sleepTime += h;\n        minSleepTime = Math.min(minSleepTime, body.m_sleepTime);\n      }\n    }\n\n    if (minSleepTime >= Settings.timeToSleep && positionSolved) {\n      for (var i = 0; i < this.m_bodies.length; ++i) {\n        var body = this.m_bodies[i];\n        body.setAwake(false);\n      }\n    }\n  }\n};\n\nSolver.prototype.printBodies = function(tag) {\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var b = this.m_bodies[i];\n    common.debug(tag, b.c_position.a, b.c_position.c.x, b.c_position.c.y, b.c_velocity.w, b.c_velocity.v.x, b.c_velocity.v.y);\n  }\n};\n\nvar s_subStep = new TimeStep(); // reuse\n\n/**\n * Find TOI contacts and solve them.\n *\n * @param {TimeStep} step\n */\nSolver.prototype.solveWorldTOI = function(step) {\n  var world = this.m_world;\n\n  if (world.m_stepComplete) {\n    for (var b = world.m_bodyList; b; b = b.m_next) {\n      b.m_islandFlag = false;\n      b.m_sweep.alpha0 = 0.0;\n    }\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Invalidate TOI\n      c.m_toiFlag = false;\n      c.m_islandFlag = false;\n      c.m_toiCount = 0;\n      c.m_toi = 1.0;\n    }\n  }\n\n  // Find TOI events and solve them.\n  for (;;) {\n    // Find the first TOI.\n    var minContact = null; // Contact\n    var minAlpha = 1.0;\n\n    for (var c = world.m_contactList; c; c = c.m_next) {\n      // Is this contact disabled?\n      if (c.isEnabled() == false) {\n        continue;\n      }\n\n      // Prevent excessive sub-stepping.\n      if (c.m_toiCount > Settings.maxSubSteps) {\n        continue;\n      }\n\n      var alpha = 1.0;\n      if (c.m_toiFlag) {\n        // This contact has a valid cached TOI.\n        alpha = c.m_toi;\n      } else {\n        var fA = c.getFixtureA();\n        var fB = c.getFixtureB();\n\n        // Is there a sensor?\n        if (fA.isSensor() || fB.isSensor()) {\n          continue;\n        }\n\n        var bA = fA.getBody();\n        var bB = fB.getBody();\n\n        _ASSERT && common.assert(bA.isDynamic() || bB.isDynamic());\n\n        var activeA = bA.isAwake() && !bA.isStatic();\n        var activeB = bB.isAwake() && !bB.isStatic();\n\n        // Is at least one body active (awake and dynamic or kinematic)?\n        if (activeA == false && activeB == false) {\n          continue;\n        }\n\n        var collideA = bA.isBullet() || !bA.isDynamic();\n        var collideB = bB.isBullet() || !bB.isDynamic();\n\n        // Are these two non-bullet dynamic bodies?\n        if (collideA == false && collideB == false) {\n          continue;\n        }\n\n        // Compute the TOI for this contact.\n        // Put the sweeps onto the same time interval.\n        var alpha0 = bA.m_sweep.alpha0;\n\n        if (bA.m_sweep.alpha0 < bB.m_sweep.alpha0) {\n          alpha0 = bB.m_sweep.alpha0;\n          bA.m_sweep.advance(alpha0);\n        } else if (bB.m_sweep.alpha0 < bA.m_sweep.alpha0) {\n          alpha0 = bA.m_sweep.alpha0;\n          bB.m_sweep.advance(alpha0);\n        }\n\n        _ASSERT && common.assert(alpha0 < 1.0);\n\n        var indexA = c.getChildIndexA();\n        var indexB = c.getChildIndexB();\n\n        var sweepA = bA.m_sweep;\n        var sweepB = bB.m_sweep;\n\n        // Compute the time of impact in interval [0, minTOI]\n        var input = new TOIInput(); // TODO: reuse\n        input.proxyA.set(fA.getShape(), indexA);\n        input.proxyB.set(fB.getShape(), indexB);\n        input.sweepA.set(bA.m_sweep);\n        input.sweepB.set(bB.m_sweep);\n        input.tMax = 1.0;\n\n        var output = new TOIOutput(); // TODO: reuse\n        TimeOfImpact(output, input);\n\n        // Beta is the fraction of the remaining portion of the [time?].\n        var beta = output.t;\n        if (output.state == TOIOutput.e_touching) {\n          alpha = Math.min(alpha0 + (1.0 - alpha0) * beta, 1.0);\n        } else {\n          alpha = 1.0;\n        }\n\n        c.m_toi = alpha;\n        c.m_toiFlag = true;\n      }\n\n      if (alpha < minAlpha) {\n        // This is the minimum TOI found so far.\n        minContact = c;\n        minAlpha = alpha;\n      }\n    }\n\n    if (minContact == null || 1.0 - 10.0 * Math.EPSILON < minAlpha) {\n      // No more TOI events. Done!\n      world.m_stepComplete = true;\n      break;\n    }\n\n    // Advance the bodies to the TOI.\n    var fA = minContact.getFixtureA();\n    var fB = minContact.getFixtureB();\n    var bA = fA.getBody();\n    var bB = fB.getBody();\n\n    var backup1 = bA.m_sweep.clone();\n    var backup2 = bB.m_sweep.clone();\n\n    bA.advance(minAlpha);\n    bB.advance(minAlpha);\n\n    // The TOI contact likely has some new contact points.\n    minContact.update(world);\n    minContact.m_toiFlag = false;\n    ++minContact.m_toiCount;\n\n    // Is the contact solid?\n    if (minContact.isEnabled() == false || minContact.isTouching() == false) {\n      // Restore the sweeps.\n      minContact.setEnabled(false);\n      bA.m_sweep.set(backup1);\n      bB.m_sweep.set(backup2);\n      bA.synchronizeTransform();\n      bB.synchronizeTransform();\n      continue;\n    }\n\n    bA.setAwake(true);\n    bB.setAwake(true);\n\n    // Build the island\n    this.clear();\n    this.addBody(bA);\n    this.addBody(bB);\n    this.addContact(minContact);\n\n    bA.m_islandFlag = true;\n    bB.m_islandFlag = true;\n    minContact.m_islandFlag = true;\n\n    // Get contacts on bodyA and bodyB.\n    var bodies = [ bA, bB ];\n    for (var i = 0; i < bodies.length; ++i) {\n      var body = bodies[i];\n      if (body.isDynamic()) {\n        for (var ce = body.m_contactList; ce; ce = ce.next) {\n          // if (this.m_bodyCount == this.m_bodyCapacity) { break; }\n          // if (this.m_contactCount == this.m_contactCapacity) { break; }\n\n          var contact = ce.contact;\n\n          // Has this contact already been added to the island?\n          if (contact.m_islandFlag) {\n            continue;\n          }\n\n          // Only add if either is static, kinematic or bullet.\n          var other = ce.other;\n          if (other.isDynamic() && !body.isBullet() && !other.isBullet()) {\n            continue;\n          }\n\n          // Skip sensors.\n          var sensorA = contact.m_fixtureA.m_isSensor;\n          var sensorB = contact.m_fixtureB.m_isSensor;\n          if (sensorA || sensorB) {\n            continue;\n          }\n\n          // Tentatively advance the body to the TOI.\n          var backup = other.m_sweep.clone();\n          if (other.m_islandFlag == false) {\n            other.advance(minAlpha);\n          }\n\n          // Update the contact points\n          contact.update(world);\n\n          // Was the contact disabled by the user?\n          // Are there contact points?\n          if (contact.isEnabled() == false || contact.isTouching() == false) {\n            other.m_sweep.set(backup);\n            other.synchronizeTransform();\n            continue;\n          }\n\n          // Add the contact to the island\n          contact.m_islandFlag = true;\n          this.addContact(contact);\n\n          // Has the other body already been added to the island?\n          if (other.m_islandFlag) {\n            continue;\n          }\n\n          // Add the other body to the island.\n          other.m_islandFlag = true;\n\n          if (!other.isStatic()) {\n            other.setAwake(true);\n          }\n\n          this.addBody(other);\n        }\n      }\n    }\n\n    s_subStep.reset((1.0 - minAlpha) * step.dt);\n    s_subStep.dtRatio = 1.0;\n    s_subStep.positionIterations = 20;\n    s_subStep.velocityIterations = step.velocityIterations;\n    s_subStep.warmStarting = false;\n\n    this.solveIslandTOI(s_subStep, bA, bB);\n\n    // Reset island flags and synchronize broad-phase proxies.\n    for (var i = 0; i < this.m_bodies.length; ++i) {\n      var body = this.m_bodies[i];\n      body.m_islandFlag = false;\n\n      if (!body.isDynamic()) {\n        continue;\n      }\n\n      body.synchronizeFixtures();\n\n      // Invalidate all contact TOIs on this displaced body.\n      for (var ce = body.m_contactList; ce; ce = ce.next) {\n        ce.contact.m_toiFlag = false;\n        ce.contact.m_islandFlag = false;\n      }\n    }\n\n    // Commit fixture proxy movements to the broad-phase so that new contacts\n    // are created.\n    // Also, some contacts can be destroyed.\n    world.findNewContacts();\n\n    if (world.m_subStepping) {\n      world.m_stepComplete = false;\n      break;\n    }\n  }\n\n  if (_DEBUG) for (var b = world.m_bodyList; b; b = b.m_next) {\n    var c = b.m_sweep.c;\n    var a = b.m_sweep.a;\n    var v = b.m_linearVelocity;\n    var w = b.m_angularVelocity;\n  }\n}\n\n/**\n * @param {TimeStep} subStep\n * @param toiA\n * @param toiB\n */\nSolver.prototype.solveIslandTOI = function(subStep, toiA, toiB) {\n  var world = this.m_world;\n\n  // Initialize the body state.\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n    body.c_position.c.set(body.m_sweep.c);\n    body.c_position.a = body.m_sweep.a;\n    body.c_velocity.v.set(body.m_linearVelocity);\n    body.c_velocity.w = body.m_angularVelocity;\n  }\n\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initConstraint(subStep);\n  }\n\n  // Solve position constraints.\n  for (var i = 0; i < subStep.positionIterations; ++i) {\n    var minSeparation = 0.0;\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      var separation = contact.solvePositionConstraintTOI(subStep, toiA, toiB);\n      minSeparation = Math.min(minSeparation, separation);\n    }\n    // We can't expect minSpeparation >= -Settings.linearSlop because we don't\n    // push the separation above -Settings.linearSlop.\n    var contactsOkay = minSeparation >= -1.5 * Settings.linearSlop;\n    if (contactsOkay) {\n      break;\n    }\n  }\n\n  if (false) {\n    // Is the new position really safe?\n    for (var i = 0; i < this.m_contacts.length; ++i) {\n      var c = this.m_contacts[i];\n      var fA = c.getFixtureA();\n      var fB = c.getFixtureB();\n\n      var bA = fA.getBody();\n      var bB = fB.getBody();\n\n      var indexA = c.getChildIndexA();\n      var indexB = c.getChildIndexB();\n\n      var input = new DistanceInput();\n      input.proxyA.set(fA.getShape(), indexA);\n      input.proxyB.set(fB.getShape(), indexB);\n      input.transformA = bA.getTransform();\n      input.transformB = bB.getTransform();\n      input.useRadii = false;\n\n      var output = new DistanceOutput();\n      var cache = new SimplexCache();\n      Distance(output, cache, input);\n\n      if (output.distance == 0 || cache.count == 3) {\n        cache.count += 0;\n      }\n    }\n  }\n\n  // Leap of faith to new safe state.\n  toiA.m_sweep.c0.set(toiA.c_position.c);\n  toiA.m_sweep.a0 = toiA.c_position.a;\n  toiB.m_sweep.c0.set(toiB.c_position.c);\n  toiB.m_sweep.a0 = toiB.c_position.a;\n\n  // No warm starting is needed for TOI events because warm\n  // starting impulses were applied in the discrete solver.\n  for (var i = 0; i < this.m_contacts.length; ++i) {\n    var contact = this.m_contacts[i];\n    contact.initVelocityConstraint(subStep);\n  }\n\n  // Solve velocity constraints.\n  for (var i = 0; i < subStep.velocityIterations; ++i) {\n    for (var j = 0; j < this.m_contacts.length; ++j) {\n      var contact = this.m_contacts[j];\n      contact.solveVelocityConstraint(subStep);\n    }\n  }\n\n  // Don't store the TOI contact forces for warm starting\n  // because they can be quite large.\n\n  var h = subStep.dt;\n\n  // Integrate positions\n  for (var i = 0; i < this.m_bodies.length; ++i) {\n    var body = this.m_bodies[i];\n\n    var c = Vec2.clone(body.c_position.c);\n    var a = body.c_position.a;\n    var v = Vec2.clone(body.c_velocity.v);\n    var w = body.c_velocity.w;\n\n    // Check for large velocities\n    var translation = Vec2.mul(h, v);\n    if (Vec2.dot(translation, translation) > Settings.maxTranslationSquared) {\n      var ratio = Settings.maxTranslation / translation.length();\n      v.mul(ratio);\n    }\n\n    var rotation = h * w;\n    if (rotation * rotation > Settings.maxRotationSquared) {\n      var ratio = Settings.maxRotation / Math.abs(rotation);\n      w *= ratio;\n    }\n\n    // Integrate\n    c.addMul(h, v);\n    a += h * w;\n\n    body.c_position.c = c;\n    body.c_position.a = a;\n    body.c_velocity.v = v;\n    body.c_velocity.w = w;\n\n    // Sync bodies\n    body.m_sweep.c = c;\n    body.m_sweep.a = a;\n    body.m_linearVelocity = v;\n    body.m_angularVelocity = w;\n    body.synchronizeTransform();\n  }\n\n  this.postSolveIsland();\n};\n\n/**\n * Contact impulses for reporting. Impulses are used instead of forces because\n * sub-step forces may approach infinity for rigid body collisions. These match\n * up one-to-one with the contact points in Manifold.\n */\nfunction ContactImpulse() {\n  this.normalImpulses = [];\n  this.tangentImpulses = [];\n};\n\nSolver.prototype.postSolveIsland = function() {\n  // TODO: report contact.v_points instead of new object?\n  var impulse = new ContactImpulse();\n  for (var c = 0; c < this.m_contacts.length; ++c) {\n    var contact = this.m_contacts[c];\n    for (var p = 0; p < contact.v_points.length; ++p) {\n      impulse.normalImpulses.push(contact.v_points[p].normalImpulse);\n      impulse.tangentImpulses.push(contact.v_points[p].tangentImpulse);\n    }\n    this.m_world.postSolve(contact, impulse);\n  }\n};\n","var _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports.now = function() {\n  return Date.now();\n}\n\nmodule.exports.diff = function(time) {\n  return Date.now() - time;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = BoxShape;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar PolygonShape = require('./PolygonShape');\n\nBoxShape._super = PolygonShape;\nBoxShape.prototype = create(BoxShape._super.prototype);\n\nBoxShape.TYPE = 'polygon';\n\n/**\n * A rectangle polygon which extend PolygonShape.\n */\nfunction BoxShape(hx, hy, center, angle) {\n  if (!(this instanceof BoxShape)) {\n    return new BoxShape(hx, hy, center, angle);\n  }\n\n  BoxShape._super.call(this);\n\n  this._setAsBox(hx, hy, center, angle);\n}\n\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(CircleShape.TYPE, CircleShape.TYPE, CircleCircleContact);\n\nfunction CircleCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == CircleShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollideCircles(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\nfunction CollideCircles(manifold, circleA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  var pA = Transform.mulVec2(xfA, circleA.m_p);\n  var pB = Transform.mulVec2(xfB, circleB.m_p);\n\n  var distSqr = Vec2.distanceSquared(pB, pA);\n  var rA = circleA.m_radius;\n  var rB = circleB.m_radius;\n  var radius = rA + rB;\n  if (distSqr > radius * radius) {\n    return;\n  }\n\n  manifold.type = Manifold.e_circles;\n  manifold.localPoint.set(circleA.m_p);\n  manifold.localNormal.setZero();\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n\nexports.CollideCircles = CollideCircles;","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar CircleShape = require('./CircleShape');\n\nContact.addType(EdgeShape.TYPE, CircleShape.TYPE, EdgeCircleContact);\nContact.addType(ChainShape.TYPE, CircleShape.TYPE, ChainCircleContact);\n\nfunction EdgeCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var shapeA = fixtureA.getShape();\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\nfunction ChainCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB,\n    indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n\n  var chain = fixtureA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  var shapeA = edge;\n  var shapeB = fixtureB.getShape();\n\n  CollideEdgeCircle(manifold, shapeA, xfA, shapeB, xfB);\n}\n\n// Compute contact points for edge versus circle.\n// This accounts for edge connectivity.\nfunction CollideEdgeCircle(manifold, edgeA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle in frame of edge\n  var Q = Transform.mulTVec2(xfA, Transform.mulVec2(xfB, circleB.m_p));\n\n  var A = edgeA.m_vertex1;\n  var B = edgeA.m_vertex2;\n  var e = Vec2.sub(B, A);\n\n  // Barycentric coordinates\n  var u = Vec2.dot(e, Vec2.sub(B, Q));\n  var v = Vec2.dot(e, Vec2.sub(Q, A));\n\n  var radius = edgeA.m_radius + circleB.m_radius;\n\n  // Region A\n  if (v <= 0.0) {\n    var P = Vec2.clone(A);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to A?\n    if (edgeA.m_hasVertex0) {\n      var A1 = edgeA.m_vertex0;\n      var B1 = A;\n      var e1 = Vec2.sub(B1, A1);\n      var u1 = Vec2.dot(e1, Vec2.sub(B1, Q));\n\n      // Is the circle in Region AB of the previous edge?\n      if (u1 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region B\n  if (u <= 0.0) {\n    var P = Vec2.clone(B);\n    var d = Vec2.sub(Q, P);\n    var dd = Vec2.dot(d, d);\n    if (dd > radius * radius) {\n      return;\n    }\n\n    // Is there an edge connected to B?\n    if (edgeA.m_hasVertex3) {\n      var B2 = edgeA.m_vertex3;\n      var A2 = B;\n      var e2 = Vec2.sub(B2, A2);\n      var v2 = Vec2.dot(e2, Vec2.sub(Q, A2));\n\n      // Is the circle in Region AB of the next edge?\n      if (v2 > 0.0) {\n        return;\n      }\n    }\n\n    manifold.type = Manifold.e_circles;\n    manifold.localNormal.setZero();\n    manifold.localPoint.set(P);\n    manifold.pointCount = 1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 1;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Region AB\n  var den = Vec2.dot(e, e);\n  _ASSERT && common.assert(den > 0.0);\n  var P = Vec2.combine(u / den, A, v / den, B);\n  var d = Vec2.sub(Q, P);\n  var dd = Vec2.dot(d, d);\n  if (dd > radius * radius) {\n    return;\n  }\n\n  var n = Vec2.neo(-e.y, e.x);\n  if (Vec2.dot(n, Vec2.sub(Q, A)) < 0.0) {\n    n.set(-n.x, -n.y);\n  }\n  n.normalize();\n\n  manifold.type = Manifold.e_faceA;\n  manifold.localNormal = n;\n  manifold.localPoint.set(A);\n  manifold.pointCount = 1;\n  manifold.points[0].localPoint.set(circleB.m_p);\n\n  // manifold.points[0].id.key = 0;\n  manifold.points[0].id.cf.indexA = 0;\n  manifold.points[0].id.cf.typeA = Manifold.e_face;\n  manifold.points[0].id.cf.indexB = 0;\n  manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar PolygonShape = require('./PolygonShape');\n\nmodule.exports = CollidePolygons;\n\nContact.addType(PolygonShape.TYPE, PolygonShape.TYPE, PolygonContact);\n\nfunction PolygonContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == PolygonShape.TYPE);\n  CollidePolygons(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(), xfB);\n}\n\n/**\n * Find the max separation between poly1 and poly2 using edge normals from\n * poly1.\n */\nfunction FindMaxSeparation(poly1, xf1, poly2, xf2) {\n  var count1 = poly1.m_count;\n  var count2 = poly2.m_count;\n  var n1s = poly1.m_normals;\n  var v1s = poly1.m_vertices;\n  var v2s = poly2.m_vertices;\n  var xf = Transform.mulTXf(xf2, xf1);\n\n  var bestIndex = 0;\n  var maxSeparation = -Infinity;\n  for (var i = 0; i < count1; ++i) {\n    // Get poly1 normal in frame2.\n    var n = Rot.mulVec2(xf.q, n1s[i]);\n    var v1 = Transform.mulVec2(xf, v1s[i]);\n\n    // Find deepest point for normal i.\n    var si = Infinity;\n    for (var j = 0; j < count2; ++j) {\n      var sij = Vec2.dot(n, v2s[j]) - Vec2.dot(n, v1);\n      if (sij < si) {\n        si = sij;\n      }\n    }\n\n    if (si > maxSeparation) {\n      maxSeparation = si;\n      bestIndex = i;\n    }\n  }\n\n  // used to keep last FindMaxSeparation call values\n  FindMaxSeparation._maxSeparation = maxSeparation;\n  FindMaxSeparation._bestIndex = bestIndex;\n}\n\n/**\n * @param {ClipVertex[2]} c\n * @param {int} edge1\n */\nfunction FindIncidentEdge(c, poly1, xf1, edge1, poly2, xf2) {\n  var normals1 = poly1.m_normals;\n\n  var count2 = poly2.m_count;\n  var vertices2 = poly2.m_vertices;\n  var normals2 = poly2.m_normals;\n\n  _ASSERT && common.assert(0 <= edge1 && edge1 < poly1.m_count);\n\n  // Get the normal of the reference edge in poly2's frame.\n  var normal1 = Rot.mulT(xf2.q, Rot.mulVec2(xf1.q, normals1[edge1]));\n\n  // Find the incident edge on poly2.\n  var index = 0;\n  var minDot = Infinity;\n  for (var i = 0; i < count2; ++i) {\n    var dot = Vec2.dot(normal1, normals2[i]);\n    if (dot < minDot) {\n      minDot = dot;\n      index = i;\n    }\n  }\n\n  // Build the clip vertices for the incident edge.\n  var i1 = index;\n  var i2 = i1 + 1 < count2 ? i1 + 1 : 0;\n\n  c[0].v = Transform.mulVec2(xf2, vertices2[i1]);\n  c[0].id.cf.indexA = edge1;\n  c[0].id.cf.indexB = i1;\n  c[0].id.cf.typeA = Manifold.e_face;\n  c[0].id.cf.typeB = Manifold.e_vertex;\n\n  c[1].v = Transform.mulVec2(xf2, vertices2[i2]);\n  c[1].id.cf.indexA = edge1;\n  c[1].id.cf.indexB = i2;\n  c[1].id.cf.typeA = Manifold.e_face;\n  c[1].id.cf.typeB = Manifold.e_vertex;\n}\n\n/**\n * \n * Find edge normal of max separation on A - return if separating axis is found<br>\n * Find edge normal of max separation on B - return if separation axis is found<br>\n * Choose reference edge as min(minA, minB)<br>\n * Find incident edge<br>\n * Clip\n * \n * The normal points from 1 to 2\n */\nfunction CollidePolygons(manifold, polyA, xfA, polyB, xfB) {\n  manifold.pointCount = 0;\n  var totalRadius = polyA.m_radius + polyB.m_radius;\n\n  FindMaxSeparation(polyA, xfA, polyB, xfB);\n  var edgeA = FindMaxSeparation._bestIndex;\n  var separationA = FindMaxSeparation._maxSeparation;\n  if (separationA > totalRadius)\n    return;\n\n  FindMaxSeparation(polyB, xfB, polyA, xfA);\n  var edgeB = FindMaxSeparation._bestIndex;\n  var separationB = FindMaxSeparation._maxSeparation;\n  if (separationB > totalRadius)\n    return;\n\n  var poly1; // reference polygon\n  var poly2; // incident polygon\n  var xf1;\n  var xf2;\n  var edge1; // reference edge\n  var flip;\n  var k_tol = 0.1 * Settings.linearSlop;\n\n  if (separationB > separationA + k_tol) {\n    poly1 = polyB;\n    poly2 = polyA;\n    xf1 = xfB;\n    xf2 = xfA;\n    edge1 = edgeB;\n    manifold.type = Manifold.e_faceB;\n    flip = 1;\n  } else {\n    poly1 = polyA;\n    poly2 = polyB;\n    xf1 = xfA;\n    xf2 = xfB;\n    edge1 = edgeA;\n    manifold.type = Manifold.e_faceA;\n    flip = 0;\n  }\n\n  var incidentEdge = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  FindIncidentEdge(incidentEdge, poly1, xf1, edge1, poly2, xf2);\n\n  var count1 = poly1.m_count;\n  var vertices1 = poly1.m_vertices;\n\n  var iv1 = edge1;\n  var iv2 = edge1 + 1 < count1 ? edge1 + 1 : 0;\n\n  var v11 = vertices1[iv1];\n  var v12 = vertices1[iv2];\n\n  var localTangent = Vec2.sub(v12, v11);\n  localTangent.normalize();\n\n  var localNormal = Vec2.cross(localTangent, 1.0);\n  var planePoint = Vec2.combine(0.5, v11, 0.5, v12);\n\n  var tangent = Rot.mulVec2(xf1.q, localTangent);\n  var normal = Vec2.cross(tangent, 1.0);\n\n  v11 = Transform.mulVec2(xf1, v11);\n  v12 = Transform.mulVec2(xf1, v12);\n\n  // Face offset.\n  var frontOffset = Vec2.dot(normal, v11);\n\n  // Side offsets, extended by polytope skin thickness.\n  var sideOffset1 = -Vec2.dot(tangent, v11) + totalRadius;\n  var sideOffset2 = Vec2.dot(tangent, v12) + totalRadius;\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, incidentEdge, Vec2.neg(tangent),\n      sideOffset1, iv1);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, tangent,\n      sideOffset2, iv2);\n\n  if (np < 2) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  manifold.localNormal = localNormal;\n  manifold.localPoint = planePoint;\n\n  var pointCount = 0;\n  for (var i = 0; i < clipPoints2.length/* maxManifoldPoints */; ++i) {\n    var separation = Vec2.dot(normal, clipPoints2[i].v) - frontOffset;\n\n    if (separation <= totalRadius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n      cp.localPoint.set(Transform.mulTVec2(xf2, clipPoints2[i].v));\n      cp.id = clipPoints2[i].id;\n      if (flip) {\n        // Swap features\n        var cf = cp.id.cf; // ContactFeature\n        var indexA = cf.indexA;\n        var indexB = cf.indexB;\n        var typeA = cf.typeA;\n        var typeB = cf.typeB;\n        cf.indexA = indexB;\n        cf.indexB = indexA;\n        cf.typeA = typeB;\n        cf.typeB = typeA;\n      }\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Rot = require('../common/Rot');\nvar Vec2 = require('../common/Vec2');\nvar AABB = require('../collision/AABB');\nvar Settings = require('../Settings');\nvar Manifold = require('../Manifold');\nvar Contact = require('../Contact');\nvar Shape = require('../Shape');\nvar CircleShape = require('./CircleShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(PolygonShape.TYPE, CircleShape.TYPE, PolygonCircleContact);\n\nfunction PolygonCircleContact(manifold, xfA, fixtureA, indexA, xfB, fixtureB, indexB) {\n  _ASSERT && common.assert(fixtureA.getType() == PolygonShape.TYPE);\n  _ASSERT && common.assert(fixtureB.getType() == CircleShape.TYPE);\n  CollidePolygonCircle(manifold, fixtureA.getShape(), xfA, fixtureB.getShape(),\n      xfB);\n}\n\nfunction CollidePolygonCircle(manifold, polygonA, xfA, circleB, xfB) {\n  manifold.pointCount = 0;\n\n  // Compute circle position in the frame of the polygon.\n  var c = Transform.mulVec2(xfB, circleB.m_p);\n  var cLocal = Transform.mulTVec2(xfA, c);\n\n  // Find the min separating edge.\n  var normalIndex = 0;\n  var separation = -Infinity;\n  var radius = polygonA.m_radius + circleB.m_radius;\n  var vertexCount = polygonA.m_count;\n  var vertices = polygonA.m_vertices;\n  var normals = polygonA.m_normals;\n\n  for (var i = 0; i < vertexCount; ++i) {\n    var s = Vec2.dot(normals[i], Vec2.sub(cLocal, vertices[i]));\n\n    if (s > radius) {\n      // Early out.\n      return;\n    }\n\n    if (s > separation) {\n      separation = s;\n      normalIndex = i;\n    }\n  }\n\n  // Vertices that subtend the incident face.\n  var vertIndex1 = normalIndex;\n  var vertIndex2 = vertIndex1 + 1 < vertexCount ? vertIndex1 + 1 : 0;\n  var v1 = vertices[vertIndex1];\n  var v2 = vertices[vertIndex2];\n\n  // If the center is inside the polygon ...\n  if (separation < Math.EPSILON) {\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[normalIndex]);\n    manifold.localPoint.setCombine(0.5, v1, 0.5, v2);\n    manifold.points[0].localPoint = circleB.m_p;\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n    return;\n  }\n\n  // Compute barycentric coordinates\n  var u1 = Vec2.dot(Vec2.sub(cLocal, v1), Vec2.sub(v2, v1));\n  var u2 = Vec2.dot(Vec2.sub(cLocal, v2), Vec2.sub(v1, v2));\n  if (u1 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v1) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v1);\n    manifold.localNormal.normalize();\n    manifold.localPoint = v1;\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else if (u2 <= 0.0) {\n    if (Vec2.distanceSquared(cLocal, v2) > radius * radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.setCombine(1, cLocal, -1, v2);\n    manifold.localNormal.normalize();\n    manifold.localPoint.set(v2);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  } else {\n    var faceCenter = Vec2.mid(v1, v2);\n    var separation = Vec2.dot(cLocal, normals[vertIndex1])\n        - Vec2.dot(faceCenter, normals[vertIndex1]);\n    if (separation > radius) {\n      return;\n    }\n\n    manifold.pointCount = 1;\n    manifold.type = Manifold.e_faceA;\n    manifold.localNormal.set(normals[vertIndex1]);\n    manifold.localPoint.set(faceCenter);\n    manifold.points[0].localPoint.set(circleB.m_p);\n\n    // manifold.points[0].id.key = 0;\n    manifold.points[0].id.cf.indexA = 0;\n    manifold.points[0].id.cf.typeA = Manifold.e_vertex;\n    manifold.points[0].id.cf.indexB = 0;\n    manifold.points[0].id.cf.typeB = Manifold.e_vertex;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nvar common = require('../util/common');\nvar create = require('../util/create');\nvar Math = require('../common/Math');\nvar Transform = require('../common/Transform');\nvar Vec2 = require('../common/Vec2');\nvar Rot = require('../common/Rot');\nvar Settings = require('../Settings');\nvar Shape = require('../Shape');\nvar Contact = require('../Contact');\nvar Manifold = require('../Manifold');\nvar EdgeShape = require('./EdgeShape');\nvar ChainShape = require('./ChainShape');\nvar PolygonShape = require('./PolygonShape');\n\nContact.addType(EdgeShape.TYPE, PolygonShape.TYPE, EdgePolygonContact);\nContact.addType(ChainShape.TYPE, PolygonShape.TYPE, ChainPolygonContact);\n\nfunction EdgePolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == EdgeShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  CollideEdgePolygon(manifold, fA.getShape(), xfA, fB.getShape(), xfB);\n}\n\nfunction ChainPolygonContact(manifold, xfA, fA, indexA, xfB, fB, indexB) {\n  _ASSERT && common.assert(fA.getType() == ChainShape.TYPE);\n  _ASSERT && common.assert(fB.getType() == PolygonShape.TYPE);\n\n  var chain = fA.getShape();\n  var edge = new EdgeShape();\n  chain.getChildEdge(edge, indexA);\n\n  CollideEdgePolygon(manifold, edge, xfA, fB.getShape(), xfB);\n}\n\n// EPAxis Type\nvar e_unknown = -1;\nvar e_edgeA = 1;\nvar e_edgeB = 2;\n\n// VertexType unused?\nvar e_isolated = 0;\nvar e_concave = 1;\nvar e_convex = 2;\n\n// This structure is used to keep track of the best separating axis.\nfunction EPAxis() {\n  this.type; // Type\n  this.index;\n  this.separation;\n};\n\n// This holds polygon B expressed in frame A.\nfunction TempPolygon() {\n  this.vertices = []; // Vec2[Settings.maxPolygonVertices]\n  this.normals = []; // Vec2[Settings.maxPolygonVertices];\n  this.count = 0;\n};\n\n// Reference face used for clipping\nfunction ReferenceFace() {\n  this.i1, this.i2; // int\n  this.v1, this.v2; // v\n  this.normal = Vec2.zero();\n  this.sideNormal1 = Vec2.zero();\n  this.sideOffset1; // float\n  this.sideNormal2 = Vec2.zero();\n  this.sideOffset2; // float\n};\n\n// reused\nvar edgeAxis = new EPAxis();\nvar polygonAxis = new EPAxis();\nvar polygonBA = new TempPolygon();\nvar rf = new ReferenceFace();\n\n/**\n * This function collides and edge and a polygon, taking into account edge\n * adjacency.\n */\nfunction CollideEdgePolygon(manifold, edgeA, xfA, polygonB, xfB) {\n  // Algorithm:\n  // 1. Classify v1 and v2\n  // 2. Classify polygon centroid as front or back\n  // 3. Flip normal if necessary\n  // 4. Initialize normal range to [-pi, pi] about face normal\n  // 5. Adjust normal range according to adjacent edges\n  // 6. Visit each separating axes, only accept axes within the range\n  // 7. Return if _any_ axis indicates separation\n  // 8. Clip\n\n  var m_type1, m_type2; // VertexType unused?\n\n  var xf = Transform.mulTXf(xfA, xfB);\n\n  var centroidB = Transform.mulVec2(xf, polygonB.m_centroid);\n\n  var v0 = edgeA.m_vertex0;\n  var v1 = edgeA.m_vertex1;\n  var v2 = edgeA.m_vertex2;\n  var v3 = edgeA.m_vertex3;\n\n  var hasVertex0 = edgeA.m_hasVertex0;\n  var hasVertex3 = edgeA.m_hasVertex3;\n\n  var edge1 = Vec2.sub(v2, v1);\n  edge1.normalize();\n  var normal1 = Vec2.neo(edge1.y, -edge1.x);\n  var offset1 = Vec2.dot(normal1, Vec2.sub(centroidB, v1));\n  var offset0 = 0.0;\n  var offset2 = 0.0;\n  var convex1 = false;\n  var convex2 = false;\n\n  // Is there a preceding edge?\n  if (hasVertex0) {\n    var edge0 = Vec2.sub(v1, v0);\n    edge0.normalize();\n    var normal0 = Vec2.neo(edge0.y, -edge0.x);\n    convex1 = Vec2.cross(edge0, edge1) >= 0.0;\n    offset0 = Vec2.dot(normal0, centroidB) - Vec2.dot(normal0, v0);\n  }\n\n  // Is there a following edge?\n  if (hasVertex3) {\n    var edge2 = Vec2.sub(v3, v2);\n    edge2.normalize();\n    var normal2 = Vec2.neo(edge2.y, -edge2.x);\n    convex2 = Vec2.cross(edge1, edge2) > 0.0;\n    offset2 = Vec2.dot(normal2, centroidB) - Vec2.dot(normal2, v2);\n  }\n\n  var front;\n  var normal = Vec2.zero();\n  var lowerLimit = Vec2.zero();\n  var upperLimit = Vec2.zero();\n\n  // Determine front or back collision. Determine collision normal limits.\n  if (hasVertex0 && hasVertex3) {\n    if (convex1 && convex2) {\n      front = offset0 >= 0.0 || offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex1) {\n      front = offset0 >= 0.0 || (offset1 >= 0.0 && offset2 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else if (convex2) {\n      front = offset2 >= 0.0 || (offset0 >= 0.0 && offset1 >= 0.0);\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex0) {\n    if (convex1) {\n      front = offset0 >= 0.0 || offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal0);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      }\n    } else {\n      front = offset0 >= 0.0 && offset1 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.set(normal1);\n        upperLimit.setMul(-1, normal0);\n      }\n    }\n  } else if (hasVertex3) {\n    if (convex2) {\n      front = offset1 >= 0.0 || offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal2);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      }\n    } else {\n      front = offset1 >= 0.0 && offset2 >= 0.0;\n      if (front) {\n        normal.set(normal1);\n        lowerLimit.setMul(-1, normal1);\n        upperLimit.set(normal1);\n      } else {\n        normal.setMul(-1, normal1);\n        lowerLimit.setMul(-1, normal2);\n        upperLimit.set(normal1);\n      }\n    }\n  } else {\n    front = offset1 >= 0.0;\n    if (front) {\n      normal.set(normal1);\n      lowerLimit.setMul(-1, normal1);\n      upperLimit.setMul(-1, normal1);\n    } else {\n      normal.setMul(-1, normal1);\n      lowerLimit.set(normal1);\n      upperLimit.set(normal1);\n    }\n  }\n\n  // Get polygonB in frameA\n  polygonBA.count = polygonB.m_count;\n  for (var i = 0; i < polygonB.m_count; ++i) {\n    polygonBA.vertices[i] = Transform.mulVec2(xf, polygonB.m_vertices[i]);\n    polygonBA.normals[i] = Rot.mulVec2(xf.q, polygonB.m_normals[i]);\n  }\n\n  var radius = 2.0 * Settings.polygonRadius;\n\n  manifold.pointCount = 0;\n\n  { // ComputeEdgeSeparation\n    edgeAxis.type = e_edgeA;\n    edgeAxis.index = front ? 0 : 1;\n    edgeAxis.separation = Infinity;\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var s = Vec2.dot(normal, Vec2.sub(polygonBA.vertices[i], v1));\n      if (s < edgeAxis.separation) {\n        edgeAxis.separation = s;\n      }\n    }\n  }\n\n  // If no valid normal can be found than this edge should not collide.\n  if (edgeAxis.type == e_unknown) {\n    return;\n  }\n\n  if (edgeAxis.separation > radius) {\n    return;\n  }\n\n  { // ComputePolygonSeparation\n    polygonAxis.type = e_unknown;\n    polygonAxis.index = -1;\n    polygonAxis.separation = -Infinity;\n\n    var perp = Vec2.neo(-normal.y, normal.x);\n\n    for (var i = 0; i < polygonBA.count; ++i) {\n      var n = Vec2.neg(polygonBA.normals[i]);\n\n      var s1 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v1));\n      var s2 = Vec2.dot(n, Vec2.sub(polygonBA.vertices[i], v2));\n      var s = Math.min(s1, s2);\n\n      if (s > radius) {\n        // No collision\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n        break;\n      }\n\n      // Adjacency\n      if (Vec2.dot(n, perp) >= 0.0) {\n        if (Vec2.dot(Vec2.sub(n, upperLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      } else {\n        if (Vec2.dot(Vec2.sub(n, lowerLimit), normal) < -Settings.angularSlop) {\n          continue;\n        }\n      }\n\n      if (s > polygonAxis.separation) {\n        polygonAxis.type = e_edgeB;\n        polygonAxis.index = i;\n        polygonAxis.separation = s;\n      }\n    }\n  }\n\n  if (polygonAxis.type != e_unknown && polygonAxis.separation > radius) {\n    return;\n  }\n\n  // Use hysteresis for jitter reduction.\n  var k_relativeTol = 0.98;\n  var k_absoluteTol = 0.001;\n\n  var primaryAxis;\n  if (polygonAxis.type == e_unknown) {\n    primaryAxis = edgeAxis;\n  } else if (polygonAxis.separation > k_relativeTol * edgeAxis.separation + k_absoluteTol) {\n    primaryAxis = polygonAxis;\n  } else {\n    primaryAxis = edgeAxis;\n  }\n\n  var ie = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  if (primaryAxis.type == e_edgeA) {\n    manifold.type = Manifold.e_faceA;\n\n    // Search for the polygon normal that is most anti-parallel to the edge\n    // normal.\n    var bestIndex = 0;\n    var bestValue = Vec2.dot(normal, polygonBA.normals[0]);\n    for (var i = 1; i < polygonBA.count; ++i) {\n      var value = Vec2.dot(normal, polygonBA.normals[i]);\n      if (value < bestValue) {\n        bestValue = value;\n        bestIndex = i;\n      }\n    }\n\n    var i1 = bestIndex;\n    var i2 = i1 + 1 < polygonBA.count ? i1 + 1 : 0;\n\n    ie[0].v = polygonBA.vertices[i1];\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = i1;\n    ie[0].id.cf.typeA = Manifold.e_face;\n    ie[0].id.cf.typeB = Manifold.e_vertex;\n\n    ie[1].v = polygonBA.vertices[i2];\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = i2;\n    ie[1].id.cf.typeA = Manifold.e_face;\n    ie[1].id.cf.typeB = Manifold.e_vertex;\n\n    if (front) {\n      rf.i1 = 0;\n      rf.i2 = 1;\n      rf.v1 = v1;\n      rf.v2 = v2;\n      rf.normal.set(normal1);\n    } else {\n      rf.i1 = 1;\n      rf.i2 = 0;\n      rf.v1 = v2;\n      rf.v2 = v1;\n      rf.normal.setMul(-1, normal1);\n    }\n  } else {\n    manifold.type = Manifold.e_faceB;\n\n    ie[0].v = v1;\n    ie[0].id.cf.indexA = 0;\n    ie[0].id.cf.indexB = primaryAxis.index;\n    ie[0].id.cf.typeA = Manifold.e_vertex;\n    ie[0].id.cf.typeB = Manifold.e_face;\n\n    ie[1].v = v2;\n    ie[1].id.cf.indexA = 0;\n    ie[1].id.cf.indexB = primaryAxis.index;\n    ie[1].id.cf.typeA = Manifold.e_vertex;\n    ie[1].id.cf.typeB = Manifold.e_face;\n\n    rf.i1 = primaryAxis.index;\n    rf.i2 = rf.i1 + 1 < polygonBA.count ? rf.i1 + 1 : 0;\n    rf.v1 = polygonBA.vertices[rf.i1];\n    rf.v2 = polygonBA.vertices[rf.i2];\n    rf.normal.set(polygonBA.normals[rf.i1]);\n  }\n\n  rf.sideNormal1.set(rf.normal.y, -rf.normal.x);\n  rf.sideNormal2.setMul(-1, rf.sideNormal1);\n  rf.sideOffset1 = Vec2.dot(rf.sideNormal1, rf.v1);\n  rf.sideOffset2 = Vec2.dot(rf.sideNormal2, rf.v2);\n\n  // Clip incident edge against extruded edge1 side edges.\n  var clipPoints1 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n  var clipPoints2 = [ new Manifold.clipVertex(), new Manifold.clipVertex() ];\n\n  var np;\n\n  // Clip to box side 1\n  np = Manifold.clipSegmentToLine(clipPoints1, ie, rf.sideNormal1, rf.sideOffset1, rf.i1);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Clip to negative box side 1\n  np = Manifold.clipSegmentToLine(clipPoints2, clipPoints1, rf.sideNormal2, rf.sideOffset2, rf.i2);\n\n  if (np < Settings.maxManifoldPoints) {\n    return;\n  }\n\n  // Now clipPoints2 contains the clipped points.\n  if (primaryAxis.type == e_edgeA) {\n    manifold.localNormal = Vec2.clone(rf.normal);\n    manifold.localPoint = Vec2.clone(rf.v1);\n  } else {\n    manifold.localNormal = Vec2.clone(polygonB.m_normals[rf.i1]);\n    manifold.localPoint = Vec2.clone(polygonB.m_vertices[rf.i1]);\n  }\n\n  var pointCount = 0;\n  for (var i = 0; i < Settings.maxManifoldPoints; ++i) {\n    var separation = Vec2.dot(rf.normal, Vec2.sub(clipPoints2[i].v, rf.v1));\n\n    if (separation <= radius) {\n      var cp = manifold.points[pointCount]; // ManifoldPoint\n\n      if (primaryAxis.type == e_edgeA) {\n        cp.localPoint = Transform.mulT(xf, clipPoints2[i].v);\n        cp.id = clipPoints2[i].id;\n      } else {\n        cp.localPoint = clipPoints2[i].v;\n        cp.id.cf.typeA = clipPoints2[i].id.cf.typeB;\n        cp.id.cf.typeB = clipPoints2[i].id.cf.typeA;\n        cp.id.cf.indexA = clipPoints2[i].id.cf.indexB;\n        cp.id.cf.indexB = clipPoints2[i].id.cf.indexA;\n      }\n\n      ++pointCount;\n    }\n  }\n\n  manifold.pointCount = pointCount;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = DistanceJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nDistanceJoint.TYPE = 'distance-joint';\nJoint.TYPES[DistanceJoint.TYPE] = DistanceJoint;\n\nDistanceJoint._super = Joint;\nDistanceJoint.prototype = create(DistanceJoint._super.prototype);\n\n/**\n * @typedef {Object} DistanceJointDef\n *\n * Distance joint definition. This requires defining an anchor point on both\n * bodies and the non-zero length of the distance joint. The definition uses\n * local anchor points so that the initial configuration can violate the\n * constraint slightly. This helps when saving and loading a game. Warning: Do\n * not use a zero or short length.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. A value\n *       of 0 disables softness.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {number} length Distance length.\n */\n\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0\n};\n\n/**\n * A distance joint constrains two points on two bodies to remain at a fixed\n * distance from each other. You can view this as a massless, rigid rod.\n *\n * @param {DistanceJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchorA Anchor A in global coordination.\n * @param {Vec2} anchorB Anchor B in global coordination.\n */\nfunction DistanceJoint(def, bodyA, bodyB, anchorA, anchorB) {\n  if (!(this instanceof DistanceJoint)) {\n    return new DistanceJoint(def, bodyA, bodyB, anchorA, anchorB);\n  }\n\n  // order of constructor arguments is changed in v0.2\n  if (bodyB && anchorA && ('m_type' in anchorA) && ('x' in bodyB) && ('y' in bodyB)) {\n    var temp = bodyB;\n    bodyB = anchorA;\n    anchorA = temp;\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = DistanceJoint.TYPE;\n\n  // Solver shared\n  this.m_localAnchorA = Vec2.clone(anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.zero());\n  this.m_length = Math.isFinite(def.length) ? def.length :\n    Vec2.distance(bodyA.getWorldPoint(this.m_localAnchorA), bodyB.getWorldPoint(this.m_localAnchorB));\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n  this.m_impulse = 0.0;\n  this.m_gamma = 0.0;\n  this.m_bias = 0.0;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA;\n  this.m_invMassB;\n  this.m_invIA;\n  this.m_invIB;\n  this.m_mass;\n\n  // 1-D constrained system\n  // m (v2 - v1) = lambda\n  // v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.\n  // x2 = x1 + h * v2\n\n  // 1-D mass-damper-spring system\n  // m (v2 - v1) + h * d * v2 + h * k *\n\n  // C = norm(p2 - p1) - L\n  // u = (p2 - p1) / norm(p2 - p1)\n  // Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))\n  // J = [-u -cross(r1, u) u cross(r2, u)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2\n};\n\nDistanceJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    length: this.m_length,\n\n    impulse: this.m_impulse,\n    gamma: this.m_gamma,\n    bias: this.m_bias,\n  };\n};\n\nDistanceJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new DistanceJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nDistanceJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.length > 0) {\n    this.m_length = +def.length;\n  } else if (def.length < 0) { // don't change length\n  } else if (def.anchorA || def.anchorA || def.anchorA || def.anchorA) {\n    this.m_length = Vec2.distance(\n        this.m_bodyA.getWorldPoint(this.m_localAnchorA),\n        this.m_bodyB.getWorldPoint(this.m_localAnchorB)\n    );\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nDistanceJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nDistanceJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/get the natural length. Manipulating the length can lead to non-physical\n * behavior when the frequency is zero.\n */\nDistanceJoint.prototype.setLength = function(length) {\n  this.m_length = length;\n}\n\nDistanceJoint.prototype.getLength = function() {\n  return this.m_length;\n}\n\nDistanceJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nDistanceJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\nDistanceJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nDistanceJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nDistanceJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nDistanceJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nDistanceJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nDistanceJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nDistanceJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  this.m_u = Vec2.sub(Vec2.add(cB, this.m_rB), Vec2.add(cA, this.m_rA));\n\n  // Handle singularity.\n  var length = this.m_u.length();\n  if (length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / length);\n  } else {\n    this.m_u.set(0.0, 0.0);\n  }\n\n  var crAu = Vec2.cross(this.m_rA, this.m_u);\n  var crBu = Vec2.cross(this.m_rB, this.m_u);\n  var invMass = this.m_invMassA + this.m_invIA * crAu * crAu + this.m_invMassB\n      + this.m_invIB * crBu * crBu;\n\n  // Compute the effective mass matrix.\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C = length - this.m_length;\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n    // Damping coefficient\n    var d = 2.0 * this.m_mass * this.m_dampingRatio * omega;\n\n    // Spring stiffness\n    var k = this.m_mass * omega * omega;\n\n    // magic formulas\n    var h = step.dt;\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invMass += this.m_gamma;\n    this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n  } else {\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n  var Cdot = Vec2.dot(this.m_u, vpB) - Vec2.dot(this.m_u, vpA);\n\n  var impulse = -this.m_mass\n      * (Cdot + this.m_bias + this.m_gamma * this.m_impulse);\n  this.m_impulse += impulse;\n\n  var P = Vec2.mul(impulse, this.m_u);\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nDistanceJoint.prototype.solvePositionConstraints = function(step) {\n  if (this.m_frequencyHz > 0.0) {\n    // There is no position correction for soft distance constraints.\n    return true;\n  }\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.sub(Vec2.add(cB, rB), Vec2.add(cA, rA));\n\n  var length = u.normalize();\n  var C = length - this.m_length;\n  C = Math\n      .clamp(C, -Settings.maxLinearCorrection, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C;\n  var P = Vec2.mul(impulse, u);\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = FrictionJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nFrictionJoint.TYPE = 'friction-joint';\nJoint.TYPES[FrictionJoint.TYPE] = FrictionJoint;\n\nFrictionJoint._super = Joint;\nFrictionJoint.prototype = create(FrictionJoint._super.prototype);\n\n/**\n * @typedef {Object} FrictionJointDef\n *\n * Friction joint definition.\n * \n * @prop {float} maxForce The maximum friction force in N.\n * @prop {float} maxTorque The maximum friction torque in N-m.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  maxTorque : 0.0,\n};\n\n/**\n * Friction joint. This is used for top-down friction. It provides 2D\n * translational friction and angular friction.\n *\n * @param {FrictionJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n * @param {Vec2} anchor Anchor in global coordination.\n */\nfunction FrictionJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof FrictionJoint)) {\n    return new FrictionJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = FrictionJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n\n  // Solver shared\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nFrictionJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n  };\n};\n\nFrictionJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new FrictionJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nFrictionJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nFrictionJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nFrictionJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set the maximum friction force in N.\n */\nFrictionJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nFrictionJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nFrictionJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\nFrictionJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nFrictionJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nFrictionJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nFrictionJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nFrictionJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var K = new Mat22()\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var h = step.dt; // float\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA; // float\n    var impulse = -this.m_angularMass * Cdot; // float\n\n    var oldImpulse = this.m_angularImpulse; // float\n    var maxImpulse = h * this.m_maxTorque; // float\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.sub(Vec2.add(vB, Vec2.cross(wB, this.m_rB)), Vec2.add(vA,\n        Vec2.cross(wA, this.m_rA))); // Vec2\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot)); // Vec2\n    var oldImpulse = this.m_linearImpulse; // Vec2\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce; // float\n\n    if (this.m_linearImpulse.lengthSquared() > maxImpulse * maxImpulse) {\n      this.m_linearImpulse.normalize();\n      this.m_linearImpulse.mul(maxImpulse);\n    }\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nFrictionJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = GearJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar RevoluteJoint = require('./RevoluteJoint');\nvar PrismaticJoint = require('./PrismaticJoint');\n\nGearJoint.TYPE = 'gear-joint';\nJoint.TYPES[GearJoint.TYPE] = GearJoint;\n\nGearJoint._super = Joint;\nGearJoint.prototype = create(GearJoint._super.prototype);\n\n/**\n * @typedef {Object} GearJointDef\n *\n * Gear joint definition.\n *\n * @prop {float} ratio The gear ratio. See GearJoint for explanation.\n *\n * @prop {RevoluteJoint|PrismaticJoint} joint1 The first revolute/prismatic\n *          joint attached to the gear joint.\n * @prop {PrismaticJoint|RevoluteJoint} joint2 The second prismatic/revolute\n *          joint attached to the gear joint.\n */\n\nvar DEFAULTS = {\n  ratio : 1.0\n};\n\n/**\n * A gear joint is used to connect two joints together. Either joint can be a\n * revolute or prismatic joint. You specify a gear ratio to bind the motions\n * together: coordinate1 + ratio * coordinate2 = constant\n * \n * The ratio can be negative or positive. If one joint is a revolute joint and\n * the other joint is a prismatic joint, then the ratio will have units of\n * length or units of 1/length. Warning: You have to manually destroy the gear\n * joint if joint1 or joint2 is destroyed.\n * \n * This definition requires two existing revolute or prismatic joints (any\n * combination will work).\n *\n * @param {GearJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction GearJoint(def, bodyA, bodyB, joint1, joint2, ratio) {\n  if (!(this instanceof GearJoint)) {\n    return new GearJoint(def, bodyA, bodyB, joint1, joint2, ratio);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = GearJoint.TYPE;\n\n  _ASSERT && common.assert(joint1.m_type === RevoluteJoint.TYPE\n      || joint1.m_type === PrismaticJoint.TYPE);\n  _ASSERT && common.assert(joint2.m_type === RevoluteJoint.TYPE\n      || joint2.m_type === PrismaticJoint.TYPE);\n\n  this.m_joint1 = joint1 ? joint1 : def.joint1;\n  this.m_joint2 = joint2 ? joint2 : def.joint2;\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  this.m_type1 = this.m_joint1.getType();\n  this.m_type2 = this.m_joint2.getType();\n\n  // joint1 connects body A to body C\n  // joint2 connects body B to body D\n\n  var coordinateA, coordinateB; // float\n\n  // TODO_ERIN there might be some problem with the joint edges in Joint.\n\n  this.m_bodyC = this.m_joint1.getBodyA();\n  this.m_bodyA = this.m_joint1.getBodyB();\n\n  // Get geometry of joint1\n  var xfA = this.m_bodyA.m_xf;\n  var aA = this.m_bodyA.m_sweep.a;\n  var xfC = this.m_bodyC.m_xf;\n  var aC = this.m_bodyC.m_sweep.a;\n\n  if (this.m_type1 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint1;// RevoluteJoint\n    this.m_localAnchorC = revolute.m_localAnchorA;\n    this.m_localAnchorA = revolute.m_localAnchorB;\n    this.m_referenceAngleA = revolute.m_referenceAngle;\n    this.m_localAxisC = Vec2.zero();\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var prismatic = this.m_joint1; // PrismaticJoint\n    this.m_localAnchorC = prismatic.m_localAnchorA;\n    this.m_localAnchorA = prismatic.m_localAnchorB;\n    this.m_referenceAngleA = prismatic.m_referenceAngle;\n    this.m_localAxisC = prismatic.m_localXAxisA;\n\n    var pC = this.m_localAnchorC;\n    var pA = Rot.mulTVec2(xfC.q, Vec2.add(Rot.mul(xfA.q, this.m_localAnchorA), Vec2.sub(xfA.p, xfC.p)));\n    coordinateA = Vec2.dot(pA, this.m_localAxisC) - Vec2.dot(pC, this.m_localAxisC);\n  }\n\n  this.m_bodyD = this.m_joint2.getBodyA();\n  this.m_bodyB = this.m_joint2.getBodyB();\n\n  // Get geometry of joint2\n  var xfB = this.m_bodyB.m_xf;\n  var aB = this.m_bodyB.m_sweep.a;\n  var xfD = this.m_bodyD.m_xf;\n  var aD = this.m_bodyD.m_sweep.a;\n\n  if (this.m_type2 === RevoluteJoint.TYPE) {\n    var revolute = this.m_joint2; // RevoluteJoint\n    this.m_localAnchorD = revolute.m_localAnchorA;\n    this.m_localAnchorB = revolute.m_localAnchorB;\n    this.m_referenceAngleB = revolute.m_referenceAngle;\n    this.m_localAxisD = Vec2.zero();\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var prismatic = this.m_joint2; // PrismaticJoint\n    this.m_localAnchorD = prismatic.m_localAnchorA;\n    this.m_localAnchorB = prismatic.m_localAnchorB;\n    this.m_referenceAngleB = prismatic.m_referenceAngle;\n    this.m_localAxisD = prismatic.m_localXAxisA;\n\n    var pD = this.m_localAnchorD;\n    var pB = Rot.mulTVec2(xfD.q, Vec2.add(Rot.mul(xfB.q, this.m_localAnchorB), Vec2.sub(xfB.p, xfD.p)));\n    coordinateB = Vec2.dot(pB, this.m_localAxisD) - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  this.m_constant = coordinateA + this.m_ratio * coordinateB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_lcA, this.m_lcB, this.m_lcC, this.m_lcD; // Vec2\n  this.m_mA, this.m_mB, this.m_mC, this.m_mD; // float\n  this.m_iA, this.m_iB, this.m_iC, this.m_iD; // float\n  this.m_JvAC, this.m_JvBD; // Vec2\n  this.m_JwA, this.m_JwB, this.m_JwC, this.m_JwD; // float\n  this.m_mass; // float\n\n  // Gear Joint:\n  // C0 = (coordinate1 + ratio * coordinate2)_initial\n  // C = (coordinate1 + ratio * coordinate2) - C0 = 0\n  // J = [J1 ratio * J2]\n  // K = J * invM * JT\n  // = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T\n  //\n  // Revolute:\n  // coordinate = rotation\n  // Cdot = angularVelocity\n  // J = [0 0 1]\n  // K = J * invM * JT = invI\n  //\n  // Prismatic:\n  // coordinate = dot(p - pg, ug)\n  // Cdot = dot(v + cross(w, r), ug)\n  // J = [ug cross(r, ug)]\n  // K = J * invM * JT = invMass + invI * cross(r, ug)^2\n};\n\nGearJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    joint1: this.m_joint1,\n    joint2: this.m_joint2,\n    ratio: this.m_ratio,\n\n    // _constant: this.m_constant,\n  };\n};\n\nGearJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.joint1 = restore(Joint, data.joint1, world);\n  data.joint2 = restore(Joint, data.joint2, world);\n  var joint = new GearJoint(data);\n  // if (data._constant) joint.m_constant = data._constant;\n  return joint;\n};\n\n/**\n * Get the first joint.\n */\nGearJoint.prototype.getJoint1 = function() {\n  return this.m_joint1;\n}\n\n/**\n * Get the second joint.\n */\nGearJoint.prototype.getJoint2 = function() {\n  return this.m_joint2;\n}\n\n/**\n * Set/Get the gear ratio.\n */\nGearJoint.prototype.setRatio = function(ratio) {\n  _ASSERT && common.assert(Math.isFinite(ratio));\n  this.m_ratio = ratio;\n}\n\nGearJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\nGearJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nGearJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nGearJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_JvAC).mul(inv_dt);\n}\n\nGearJoint.prototype.getReactionTorque = function(inv_dt) {\n  var L = this.m_impulse * this.m_JwA; // float\n  return inv_dt * L;\n}\n\nGearJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_lcA = this.m_bodyA.m_sweep.localCenter;\n  this.m_lcB = this.m_bodyB.m_sweep.localCenter;\n  this.m_lcC = this.m_bodyC.m_sweep.localCenter;\n  this.m_lcD = this.m_bodyD.m_sweep.localCenter;\n  this.m_mA = this.m_bodyA.m_invMass;\n  this.m_mB = this.m_bodyB.m_invMass;\n  this.m_mC = this.m_bodyC.m_invMass;\n  this.m_mD = this.m_bodyD.m_invMass;\n  this.m_iA = this.m_bodyA.m_invI;\n  this.m_iB = this.m_bodyB.m_invI;\n  this.m_iC = this.m_bodyC.m_invI;\n  this.m_iD = this.m_bodyD.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var aC = this.m_bodyC.c_position.a;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n\n  var aD = this.m_bodyD.c_position.a;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  this.m_mass = 0.0;\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    this.m_JvAC = Vec2.zero();\n    this.m_JwA = 1.0;\n    this.m_JwC = 1.0;\n    this.m_mass += this.m_iA + this.m_iC;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    this.m_JvAC = u;\n    this.m_JwC = Vec2.cross(rC, u);\n    this.m_JwA = Vec2.cross(rA, u);\n    this.m_mass += this.m_mC + this.m_mA + this.m_iC * this.m_JwC * this.m_JwC + this.m_iA * this.m_JwA * this.m_JwA;\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    this.m_JvBD = Vec2.zero();\n    this.m_JwB = this.m_ratio;\n    this.m_JwD = this.m_ratio;\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD); // Vec2\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD); // Vec2\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB); // Vec2\n    this.m_JvBD = Vec2.mul(this.m_ratio, u);\n    this.m_JwD = this.m_ratio * Vec2.cross(rD, u);\n    this.m_JwB = this.m_ratio * Vec2.cross(rB, u);\n    this.m_mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD * this.m_JwD * this.m_JwD + this.m_iB * this.m_JwB * this.m_JwB;\n  }\n\n  // Compute effective mass.\n  this.m_mass = this.m_mass > 0.0 ? 1.0 / this.m_mass : 0.0;\n\n  if (step.warmStarting) {\n    vA.addMul(this.m_mA * this.m_impulse, this.m_JvAC);\n    wA += this.m_iA * this.m_impulse * this.m_JwA;\n    \n    vB.addMul(this.m_mB * this.m_impulse, this.m_JvBD);\n    wB += this.m_iB * this.m_impulse * this.m_JwB;\n    \n    vC.subMul(this.m_mC * this.m_impulse, this.m_JvAC);\n    wC -= this.m_iC * this.m_impulse * this.m_JwC;\n  \n    vD.subMul(this.m_mD * this.m_impulse, this.m_JvBD);\n    wD -= this.m_iD * this.m_impulse * this.m_JwD;\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n  var vC = this.m_bodyC.c_velocity.v;\n  var wC = this.m_bodyC.c_velocity.w;\n  var vD = this.m_bodyD.c_velocity.v;\n  var wD = this.m_bodyD.c_velocity.w;\n\n  var Cdot = Vec2.dot(this.m_JvAC, vA) - Vec2.dot(this.m_JvAC, vC)\n      + Vec2.dot(this.m_JvBD, vB) - Vec2.dot(this.m_JvBD, vD); // float\n  Cdot += (this.m_JwA * wA - this.m_JwC * wC)\n      + (this.m_JwB * wB - this.m_JwD * wD);\n\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  vA.addMul(this.m_mA * impulse, this.m_JvAC);\n  wA += this.m_iA * impulse * this.m_JwA;\n  vB.addMul(this.m_mB * impulse, this.m_JvBD);\n  wB += this.m_iB * impulse * this.m_JwB;\n  vC.subMul(this.m_mC * impulse, this.m_JvAC);\n  wC -= this.m_iC * impulse * this.m_JwC;\n  vD.subMul(this.m_mD * impulse, this.m_JvBD);\n  wD -= this.m_iD * impulse * this.m_JwD;\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n  this.m_bodyC.c_velocity.v.set(vC);\n  this.m_bodyC.c_velocity.w = wC;\n  this.m_bodyD.c_velocity.v.set(vD);\n  this.m_bodyD.c_velocity.w = wD;\n}\n\nGearJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var cC = this.m_bodyC.c_position.c;\n  var aC = this.m_bodyC.c_position.a;\n  var cD = this.m_bodyD.c_position.c;\n  var aD = this.m_bodyD.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n  var qC = Rot.neo(aC);\n  var qD = Rot.neo(aD);\n\n  var linearError = 0.0; // float\n\n  var coordinateA, coordinateB; // float\n\n  var JvAC, JvBD; // Vec2\n  var JwA, JwB, JwC, JwD; // float\n  var mass = 0.0; // float\n\n  if (this.m_type1 == RevoluteJoint.TYPE) {\n    JvAC = Vec2.zero();\n    JwA = 1.0;\n    JwC = 1.0;\n    mass += this.m_iA + this.m_iC;\n\n    coordinateA = aA - aC - this.m_referenceAngleA;\n  } else {\n    var u = Rot.mulVec2(qC, this.m_localAxisC); // Vec2\n    var rC = Rot.mulSub(qC, this.m_localAnchorC, this.m_lcC); // Vec2\n    var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_lcA); // Vec2\n    JvAC = u;\n    JwC = Vec2.cross(rC, u);\n    JwA = Vec2.cross(rA, u);\n    mass += this.m_mC + this.m_mA + this.m_iC * JwC * JwC + this.m_iA * JwA * JwA;\n\n    var pC = Vec2.sub(this.m_localAnchorC, this.m_lcC); // Vec2\n    var pA = Rot.mulTVec2(qC, Vec2.add(rA, Vec2.sub(cA, cC))); // Vec2\n    coordinateA = Vec2.dot(Vec2.sub(pA, pC), this.m_localAxisC);\n  }\n\n  if (this.m_type2 == RevoluteJoint.TYPE) {\n    JvBD = Vec2.zero();\n    JwB = this.m_ratio;\n    JwD = this.m_ratio;\n    mass += this.m_ratio * this.m_ratio * (this.m_iB + this.m_iD);\n\n    coordinateB = aB - aD - this.m_referenceAngleB;\n  } else {\n    var u = Rot.mulVec2(qD, this.m_localAxisD);\n    var rD = Rot.mulSub(qD, this.m_localAnchorD, this.m_lcD);\n    var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_lcB);\n    JvBD = Vec2.mul(this.m_ratio, u);\n    JwD = this.m_ratio * Vec2.cross(rD, u);\n    JwB = this.m_ratio * Vec2.cross(rB, u);\n    mass += this.m_ratio * this.m_ratio * (this.m_mD + this.m_mB) + this.m_iD\n        * JwD * JwD + this.m_iB * JwB * JwB;\n\n    var pD = Vec2.sub(this.m_localAnchorD, this.m_lcD); // Vec2\n    var pB = Rot.mulTVec2(qD, Vec2.add(rB, Vec2.sub(cB, cD))); // Vec2\n    coordinateB = Vec2.dot(pB, this.m_localAxisD)\n        - Vec2.dot(pD, this.m_localAxisD);\n  }\n\n  var C = (coordinateA + this.m_ratio * coordinateB) - this.m_constant; // float\n\n  var impulse = 0.0; // float\n  if (mass > 0.0) {\n    impulse = -C / mass;\n  }\n\n  cA.addMul(this.m_mA * impulse, JvAC);\n  aA += this.m_iA * impulse * JwA;\n  cB.addMul(this.m_mB * impulse, JvBD);\n  aB += this.m_iB * impulse * JwB;\n  cC.subMul(this.m_mC * impulse, JvAC);\n  aC -= this.m_iC * impulse * JwC;\n  cD.subMul(this.m_mD * impulse, JvBD);\n  aD -= this.m_iD * impulse * JwD;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n  this.m_bodyC.c_position.c.set(cC);\n  this.m_bodyC.c_position.a = aC;\n  this.m_bodyD.c_position.c.set(cD);\n  this.m_bodyD.c_position.a = aD;\n\n  // TODO_ERIN not implemented\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MotorJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nMotorJoint.TYPE = 'motor-joint';\nJoint.TYPES[MotorJoint.TYPE] = MotorJoint;\n\nMotorJoint._super = Joint;\nMotorJoint.prototype = create(MotorJoint._super.prototype);\n\n/**\n * @typedef {Object} MotorJointDef\n *\n * Motor joint definition.\n * \n * @prop {float} angularOffset The bodyB angle minus bodyA angle in radians.\n * @prop {float} maxForce The maximum motor force in N.\n * @prop {float} maxTorque The maximum motor torque in N-m.\n * @prop {float} correctionFactor Position correction factor in the range [0,1].\n * @prop {Vec2} linearOffset Position of bodyB minus the position of bodyA, in\n *       bodyA's frame, in meters.\n */\n\nvar DEFAULTS = {\n  maxForce : 1.0,\n  maxTorque : 1.0,\n  correctionFactor : 0.3\n};\n\n/**\n * A motor joint is used to control the relative motion between two bodies. A\n * typical usage is to control the movement of a dynamic body with respect to\n * the ground.\n *\n * @param {MotorJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MotorJoint(def, bodyA, bodyB) {\n  if (!(this instanceof MotorJoint)) {\n    return new MotorJoint(def, bodyA, bodyB);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MotorJoint.TYPE;\n\n  this.m_linearOffset = Math.isFinite(def.linearOffset) ? def.linearOffset : bodyA.getLocalPoint(bodyB.getPosition());\n  this.m_angularOffset = Math.isFinite(def.angularOffset) ? def.angularOffset : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_linearImpulse = Vec2.zero();\n  this.m_angularImpulse = 0.0;\n\n  this.m_maxForce = def.maxForce;\n  this.m_maxTorque = def.maxTorque;\n  this.m_correctionFactor = def.correctionFactor;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_linearError; // Vec2\n  this.m_angularError; // float\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_linearMass; // Mat22\n  this.m_angularMass; // float\n\n  // Point-to-point constraint\n  // Cdot = v2 - v1\n  // = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nMotorJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    maxForce: this.m_maxForce,\n    maxTorque: this.m_maxTorque,\n    correctionFactor: this.m_correctionFactor,\n\n    linearOffset: this.m_linearOffset,\n    angularOffset: this.m_angularOffset,\n  };\n};\n\nMotorJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new MotorJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nMotorJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * Set the maximum friction force in N.\n */\nMotorJoint.prototype.setMaxForce = function(force) {\n  _ASSERT && common.assert(Math.isFinite(force) && force >= 0.0);\n  this.m_maxForce = force;\n}\n\n/**\n * Get the maximum friction force in N.\n */\nMotorJoint.prototype.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set the maximum friction torque in N*m.\n */\nMotorJoint.prototype.setMaxTorque = function(torque) {\n  _ASSERT && common.assert(Math.isFinite(torque) && torque >= 0.0);\n  this.m_maxTorque = torque;\n}\n\n/**\n * Get the maximum friction torque in N*m.\n */\nMotorJoint.prototype.getMaxTorque = function() {\n  return this.m_maxTorque;\n}\n\n/**\n * Set the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.setCorrectionFactor = function(factor) {\n  _ASSERT && common.assert(Math.isFinite(factor) && 0.0 <= factor && factor <= 1.0);\n  this.m_correctionFactor = factor;\n}\n\n/**\n * Get the position correction factor in the range [0,1].\n */\nMotorJoint.prototype.getCorrectionFactor = function() {\n  return this.m_correctionFactor;\n}\n\n/**\n * Set/get the target linear offset, in frame A, in meters.\n */\nMotorJoint.prototype.setLinearOffset = function(linearOffset) {\n  if (linearOffset.x != this.m_linearOffset.x\n      || linearOffset.y != this.m_linearOffset.y) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_linearOffset = linearOffset;\n  }\n}\n\nMotorJoint.prototype.getLinearOffset = function() {\n  return this.m_linearOffset;\n}\n\n/**\n * Set/get the target angular offset, in radians.\n */\nMotorJoint.prototype.setAngularOffset = function(angularOffset) {\n  if (angularOffset != this.m_angularOffset) {\n    this.m_bodyA.setAwake(true);\n    this.m_bodyB.setAwake(true);\n    this.m_angularOffset = angularOffset;\n  }\n}\n\nMotorJoint.prototype.getAngularOffset = function() {\n  return this.m_angularOffset;\n}\n\nMotorJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getPosition();\n}\n\nMotorJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getPosition();\n}\n\nMotorJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_linearImpulse);\n}\n\nMotorJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_angularImpulse;\n}\n\nMotorJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  // Compute the effective mass matrix.\n  this.m_rA = Rot.mulVec2(qA, Vec2.neg(this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.neg(this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB;\n  var iA = this.m_invIA;\n  var iB = this.m_invIB;\n\n  var K = new Mat22();\n  K.ex.x = mA + mB + iA * this.m_rA.y * this.m_rA.y + iB * this.m_rB.y\n      * this.m_rB.y;\n  K.ex.y = -iA * this.m_rA.x * this.m_rA.y - iB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = mA + mB + iA * this.m_rA.x * this.m_rA.x + iB * this.m_rB.x\n      * this.m_rB.x;\n\n  this.m_linearMass = K.getInverse();\n\n  this.m_angularMass = iA + iB;\n  if (this.m_angularMass > 0.0) {\n    this.m_angularMass = 1.0 / this.m_angularMass;\n  }\n\n  this.m_linearError = Vec2.zero();\n  this.m_linearError.addCombine(1, cB, 1, this.m_rB);\n  this.m_linearError.subCombine(1, cA, 1, this.m_rA);\n  this.m_linearError.sub(Rot.mulVec2(qA, this.m_linearOffset));\n\n  this.m_angularError = aB - aA - this.m_angularOffset;\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_linearImpulse.mul(step.dtRatio);\n    this.m_angularImpulse *= step.dtRatio;\n\n    var P = Vec2.neo(this.m_linearImpulse.x, this.m_linearImpulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_angularImpulse);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_angularImpulse);\n\n  } else {\n    this.m_linearImpulse.setZero();\n    this.m_angularImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA, mB = this.m_invMassB;\n  var iA = this.m_invIA, iB = this.m_invIB;\n\n  var h = step.dt;\n  var inv_h = step.inv_dt;\n\n  // Solve angular friction\n  {\n    var Cdot = wB - wA + inv_h * this.m_correctionFactor * this.m_angularError;\n    var impulse = -this.m_angularMass * Cdot;\n\n    var oldImpulse = this.m_angularImpulse;\n    var maxImpulse = h * this.m_maxTorque;\n    this.m_angularImpulse = Math.clamp(this.m_angularImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_angularImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve linear friction\n  {\n    var Cdot = Vec2.zero();\n    Cdot.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA));\n    Cdot.addMul(inv_h * this.m_correctionFactor, this.m_linearError);\n\n    var impulse = Vec2.neg(Mat22.mulVec2(this.m_linearMass, Cdot));\n    var oldImpulse = Vec2.clone(this.m_linearImpulse);\n    this.m_linearImpulse.add(impulse);\n\n    var maxImpulse = h * this.m_maxForce;\n\n    this.m_linearImpulse.clamp(maxImpulse);\n\n    impulse = Vec2.sub(this.m_linearImpulse, oldImpulse);\n\n    vA.subMul(mA, impulse);\n    wA -= iA * Vec2.cross(this.m_rA, impulse);\n\n    vB.addMul(mB, impulse);\n    wB += iB * Vec2.cross(this.m_rB, impulse);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nMotorJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = MouseJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nMouseJoint.TYPE = 'mouse-joint';\nJoint.TYPES[MouseJoint.TYPE] = MouseJoint;\n\nMouseJoint._super = Joint;\nMouseJoint.prototype = create(MouseJoint._super.prototype);\n\n/**\n * @typedef {Object} MouseJointDef\n *\n * Mouse joint definition. This requires a world target point, tuning\n * parameters, and the time step.\n * \n * @prop [maxForce = 0.0] The maximum constraint force that can be exerted to\n *       move the candidate body. Usually you will express as some multiple of\n *       the weight (multiplier * mass * gravity).\n * @prop [frequencyHz = 5.0] The response speed.\n * @prop [dampingRatio = 0.7] The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} target The initial world target point. This is assumed to\n *       coincide with the body anchor initially.\n */\n\nvar DEFAULTS = {\n  maxForce : 0.0,\n  frequencyHz : 5.0,\n  dampingRatio : 0.7\n};\n\n/**\n * A mouse joint is used to make a point on a body track a specified world\n * point. This a soft constraint with a maximum force. This allows the\n * constraint to stretch and without applying huge forces.\n * \n * NOTE: this joint is not documented in the manual because it was developed to\n * be used in the testbed. If you want to learn how to use the mouse joint, look\n * at the testbed.\n *\n * @param {MouseJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction MouseJoint(def, bodyA, bodyB, target) {\n  if (!(this instanceof MouseJoint)) {\n    return new MouseJoint(def, bodyA, bodyB, target);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = MouseJoint.TYPE;\n\n  _ASSERT && common.assert(Math.isFinite(def.maxForce) && def.maxForce >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.frequencyHz) && def.frequencyHz >= 0.0);\n  _ASSERT && common.assert(Math.isFinite(def.dampingRatio) && def.dampingRatio >= 0.0);\n\n  this.m_targetA = target ? Vec2.clone(target) : def.target || Vec2.zero();\n  this.m_localAnchorB = Transform.mulTVec2(bodyB.getTransform(), this.m_targetA);\n\n  this.m_maxForce = def.maxForce;\n  this.m_impulse = Vec2.zero();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_beta = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rB = Vec2.zero();\n  this.m_localCenterB = Vec2.zero();\n  this.m_invMassB = 0.0;\n  this.m_invIB = 0.0;\n  this.mass = new Mat22()\n  this.m_C = Vec2.zero();\n\n  // p = attached point, m = mouse point\n  // C = p - m\n  // Cdot = v\n  // = v + cross(w, r)\n  // J = [I r_skew]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n}\n\nMouseJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    target: this.m_targetA,\n    maxForce: this.m_maxForce,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    _localAnchorB: this.m_localAnchorB,\n  };\n};\n\nMouseJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  data.target = Vec2(data.target);\n  var joint = new MouseJoint(data);\n  if (data._localAnchorB) {\n    joint.m_localAnchorB = data._localAnchorB;\n  }\n  return joint;\n};\n\n/**\n * Use this to update the target point.\n */\nMouseJoint.prototype.setTarget = function(target) {\n  if (this.m_bodyB.isAwake() == false) {\n    this.m_bodyB.setAwake(true);\n  }\n  this.m_targetA = Vec2.clone(target);\n}\n\nMouseJoint.prototype.getTarget = function() {\n  return this.m_targetA;\n}\n\n/**\n * Set/get the maximum force in Newtons.\n */\nMouseJoint.prototype.setMaxForce = function(force) {\n  this.m_maxForce = force;\n}\n\nMouseJoint.getMaxForce = function() {\n  return this.m_maxForce;\n}\n\n/**\n * Set/get the frequency in Hertz.\n */\nMouseJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nMouseJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/get the damping ratio (dimensionless).\n */\nMouseJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nMouseJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nMouseJoint.prototype.getAnchorA = function() {\n  return Vec2.clone(this.m_targetA);\n}\n\nMouseJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nMouseJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(inv_dt, this.m_impulse);\n}\n\nMouseJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * 0.0;\n}\n\nMouseJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_targetA.sub(newOrigin);\n}\n\nMouseJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var position = this.m_bodyB.c_position;\n  var velocity = this.m_bodyB.c_velocity;\n\n  var cB = position.c;\n  var aB = position.a;\n  var vB = velocity.v;\n  var wB = velocity.w;\n\n  var qB = Rot.neo(aB);\n\n  var mass = this.m_bodyB.getMass();\n\n  // Frequency\n  var omega = 2.0 * Math.PI * this.m_frequencyHz;\n\n  // Damping coefficient\n  var d = 2.0 * mass * this.m_dampingRatio * omega;\n\n  // Spring stiffness\n  var k = mass * (omega * omega);\n\n  // magic formulas\n  // gamma has units of inverse mass.\n  // beta has units of inverse time.\n  var h = step.dt;\n  _ASSERT && common.assert(d + h * k > Math.EPSILON);\n  this.m_gamma = h * (d + h * k);\n  if (this.m_gamma != 0.0) {\n    this.m_gamma = 1.0 / this.m_gamma;\n  }\n  this.m_beta = h * k * this.m_gamma;\n\n  // Compute the effective mass matrix.\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // K = [(1/m1 + 1/m2) * eye(2) - skew(r1) * invI1 * skew(r1) - skew(r2) *\n  // invI2 * skew(r2)]\n  // = [1/m1+1/m2 0 ] + invI1 * [r1.y*r1.y -r1.x*r1.y] + invI2 * [r1.y*r1.y\n  // -r1.x*r1.y]\n  // [ 0 1/m1+1/m2] [-r1.x*r1.y r1.x*r1.x] [-r1.x*r1.y r1.x*r1.x]\n  var K = new Mat22();\n  K.ex.x = this.m_invMassB + this.m_invIB * this.m_rB.y * this.m_rB.y\n      + this.m_gamma;\n  K.ex.y = -this.m_invIB * this.m_rB.x * this.m_rB.y;\n  K.ey.x = K.ex.y;\n  K.ey.y = this.m_invMassB + this.m_invIB * this.m_rB.x * this.m_rB.x\n      + this.m_gamma;\n\n  this.m_mass = K.getInverse();\n\n  this.m_C.set(cB);\n  this.m_C.addCombine(1, this.m_rB, -1, this.m_targetA);\n  this.m_C.mul(this.m_beta);\n\n  // Cheat with some damping\n  wB *= 0.98;\n\n  if (step.warmStarting) {\n    this.m_impulse.mul(step.dtRatio);\n    vB.addMul(this.m_invMassB, this.m_impulse);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, this.m_impulse);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solveVelocityConstraints = function(step) {\n  var velocity = this.m_bodyB.c_velocity;\n  var vB = Vec2.clone(velocity.v);\n  var wB = velocity.w;\n\n  // Cdot = v + cross(w, r)\n\n  var Cdot = Vec2.cross(wB, this.m_rB);\n  Cdot.add(vB);\n\n  Cdot.addCombine(1, this.m_C, this.m_gamma, this.m_impulse);\n  Cdot.neg();\n\n  var impulse = Mat22.mulVec2(this.m_mass, Cdot);\n\n  var oldImpulse = Vec2.clone(this.m_impulse);\n  this.m_impulse.add(impulse);\n  var maxImpulse = step.dt * this.m_maxForce;\n  this.m_impulse.clamp(maxImpulse);\n  impulse = Vec2.sub(this.m_impulse, oldImpulse);\n\n  vB.addMul(this.m_invMassB, impulse);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, impulse);\n\n  velocity.v.set(vB);\n  velocity.w = wB;\n}\n\nMouseJoint.prototype.solvePositionConstraints = function(step) {\n  return true;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = PulleyJoint;\n\nvar common = require('../util/common');\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nPulleyJoint.TYPE = 'pulley-joint';\nPulleyJoint.MIN_PULLEY_LENGTH = 2.0; // minPulleyLength\nJoint.TYPES[PulleyJoint.TYPE] = PulleyJoint;\n\nPulleyJoint._super = Joint;\nPulleyJoint.prototype = create(PulleyJoint._super.prototype);\n\n/**\n * @typedef {Object} PulleyJointDef\n *\n * Pulley joint definition. This requires two ground anchors, two dynamic body\n * anchor points, and a pulley ratio.\n *\n * @prop {Vec2} groundAnchorA The first ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} groundAnchorB The second ground anchor in world coordinates.\n *          This point never moves.\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} ratio The pulley ratio, used to simulate a block-and-tackle.\n * @prop {float} lengthA The reference length for the segment attached to bodyA.\n * @prop {float} lengthB The reference length for the segment attached to bodyB.\n */\nvar PulleyJointDef = {\n  collideConnected : true\n};\n\n/**\n * The pulley joint is connected to two bodies and two fixed ground points. The\n * pulley supports a ratio such that: length1 + ratio * length2 <= constant\n * \n * Yes, the force transmitted is scaled by the ratio.\n * \n * Warning: the pulley joint can get a bit squirrelly by itself. They often work\n * better when combined with prismatic joints. You should also cover the the\n * anchor points with static shapes to prevent one side from going to zero\n * length.\n *\n * @param {PulleyJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio) {\n  if (!(this instanceof PulleyJoint)) {\n    return new PulleyJoint(def, bodyA, bodyB, groundA, groundB, anchorA, anchorB, ratio);\n  }\n\n  def = options(def, PulleyJointDef);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = PulleyJoint.TYPE;\n  this.m_groundAnchorA = groundA ? groundA : def.groundAnchorA || Vec2.neo(-1.0, 1.0);\n  this.m_groundAnchorB = groundB ? groundB : def.groundAnchorB || Vec2.neo(1.0, 1.0);\n  this.m_localAnchorA = anchorA ? bodyA.getLocalPoint(anchorA) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchorB ? bodyB.getLocalPoint(anchorB) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n  this.m_lengthA = Math.isFinite(def.lengthA) ? def.lengthA : Vec2.distance(anchorA, groundA);\n  this.m_lengthB = Math.isFinite(def.lengthB) ? def.lengthB : Vec2.distance(anchorB, groundB);\n  this.m_ratio = Math.isFinite(ratio) ? ratio : def.ratio;\n\n  _ASSERT && common.assert(ratio > Math.EPSILON);\n\n  this.m_constant = this.m_lengthA + this.m_ratio * this.m_lengthB;\n\n  this.m_impulse = 0.0;\n\n  // Solver temp\n  this.m_uA; // Vec2\n  this.m_uB; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Pulley:\n  // length1 = norm(p1 - s1)\n  // length2 = norm(p2 - s2)\n  // C0 = (length1 + ratio * length2)_initial\n  // C = C0 - (length1 + ratio * length2)\n  // u1 = (p1 - s1) / norm(p1 - s1)\n  // u2 = (p2 - s2) / norm(p2 - s2)\n  // Cdot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))\n  // J = -[u1 cross(r1, u1) ratio * u2 ratio * cross(r2, u2)]\n  // K = J * invM * JT\n  // = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 *\n  // cross(r2, u2)^2)\n}\n\nPulleyJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    groundAnchorA: this.m_groundAnchorA,\n    groundAnchorB: this.m_groundAnchorB,\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    lengthA: this.m_lengthA,\n    lengthB: this.m_lengthB,\n    ratio: this.m_ratio,\n  };\n};\n\nPulleyJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new PulleyJoint(data);\n  return joint;\n};\n\n/**\n * Get the first ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorA = function() {\n  return this.m_groundAnchorA;\n}\n\n/**\n * Get the second ground anchor.\n */\nPulleyJoint.prototype.getGroundAnchorB = function() {\n  return this.m_groundAnchorB;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getLengthA = function() {\n  return this.m_lengthA;\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getLengthB = function() {\n  return this.m_lengthB;\n}\n\n/**\n * Get the pulley ratio.\n */\nPulleyJoint.prototype.getRatio = function() {\n  return this.m_ratio;\n}\n\n/**\n * Get the current length of the segment attached to bodyA.\n */\nPulleyJoint.prototype.getCurrentLengthA = function() {\n  var p = this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n  var s = this.m_groundAnchorA;\n  return Vec2.distance(p, s);\n}\n\n/**\n * Get the current length of the segment attached to bodyB.\n */\nPulleyJoint.prototype.getCurrentLengthB = function() {\n  var p = this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n  var s = this.m_groundAnchorB;\n  return Vec2.distance(p, s);\n}\n\nPulleyJoint.prototype.shiftOrigin = function(newOrigin) {\n  this.m_groundAnchorA.sub(newOrigin);\n  this.m_groundAnchorB.sub(newOrigin);\n}\n\nPulleyJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nPulleyJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nPulleyJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_uB).mul(inv_dt);\n}\n\nPulleyJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nPulleyJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  this.m_uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  this.m_uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = this.m_uA.length();\n  var lengthB = this.m_uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    this.m_uA.mul(1.0 / lengthA);\n  } else {\n    this.m_uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    this.m_uB.mul(1.0 / lengthB);\n  } else {\n    this.m_uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(this.m_rA, this.m_uA); // float\n  var ruB = Vec2.cross(this.m_rB, this.m_uB); // float\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  this.m_mass = mA + this.m_ratio * this.m_ratio * mB;\n\n  if (this.m_mass > 0.0) {\n    this.m_mass = 1.0 / this.m_mass;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support variable time steps.\n    this.m_impulse *= step.dtRatio;\n\n    // Warm starting.\n    var PA = Vec2.mul(-this.m_impulse, this.m_uA);\n    var PB = Vec2.mul(-this.m_ratio * this.m_impulse, this.m_uB);\n\n    vA.addMul(this.m_invMassA, PA);\n    wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n\n    vB.addMul(this.m_invMassB, PB);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var vpA = Vec2.add(vA, Vec2.cross(wA, this.m_rA));\n  var vpB = Vec2.add(vB, Vec2.cross(wB, this.m_rB));\n\n  var Cdot = -Vec2.dot(this.m_uA, vpA) - this.m_ratio\n      * Vec2.dot(this.m_uB, vpB); // float\n  var impulse = -this.m_mass * Cdot; // float\n  this.m_impulse += impulse;\n\n  var PA = Vec2.mul(-impulse, this.m_uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, this.m_uB); // Vec2\n  vA.addMul(this.m_invMassA, PA);\n  wA += this.m_invIA * Vec2.cross(this.m_rA, PA);\n  vB.addMul(this.m_invMassB, PB);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, PB);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nPulleyJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // Get the pulley axes.\n  var uA = Vec2.sub(Vec2.add(cA, this.m_rA), this.m_groundAnchorA);\n  var uB = Vec2.sub(Vec2.add(cB, this.m_rB), this.m_groundAnchorB);\n\n  var lengthA = uA.length();\n  var lengthB = uB.length();\n\n  if (lengthA > 10.0 * Settings.linearSlop) {\n    uA.mul(1.0 / lengthA);\n  } else {\n    uA.setZero();\n  }\n\n  if (lengthB > 10.0 * Settings.linearSlop) {\n    uB.mul(1.0 / lengthB);\n  } else {\n    uB.setZero();\n  }\n\n  // Compute effective mass.\n  var ruA = Vec2.cross(rA, uA);\n  var ruB = Vec2.cross(rB, uB);\n\n  var mA = this.m_invMassA + this.m_invIA * ruA * ruA; // float\n  var mB = this.m_invMassB + this.m_invIB * ruB * ruB; // float\n\n  var mass = mA + this.m_ratio * this.m_ratio * mB; // float\n\n  if (mass > 0.0) {\n    mass = 1.0 / mass;\n  }\n\n  var C = this.m_constant - lengthA - this.m_ratio * lengthB; // float\n  var linearError = Math.abs(C); // float\n\n  var impulse = -mass * C; // float\n\n  var PA = Vec2.mul(-impulse, uA); // Vec2\n  var PB = Vec2.mul(-this.m_ratio * impulse, uB); // Vec2\n\n  cA.addMul(this.m_invMassA, PA);\n  aA += this.m_invIA * Vec2.cross(rA, PA);\n  cB.addMul(this.m_invMassB, PB);\n  aB += this.m_invIB * Vec2.cross(rB, PB);\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return linearError < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = RopeJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nvar inactiveLimit = 0;\nvar atLowerLimit = 1;\nvar atUpperLimit = 2;\nvar equalLimits = 3;\n\nRopeJoint.TYPE = 'rope-joint';\nJoint.TYPES[RopeJoint.TYPE] = RopeJoint;\n\nRopeJoint._super = Joint;\nRopeJoint.prototype = create(RopeJoint._super.prototype);\n\n/**\n * @typedef {Object} RopeJointDef\n *\n * Rope joint definition. This requires two body anchor points and a maximum\n * lengths. Note: by default the connected objects will not collide. see\n * collideConnected in JointDef.\n *\n * @prop {float} maxLength The maximum length of the rope. Warning: this must be\n *       larger than linearSlop or the joint will have no effect.\n *\n * @prop {Vec2} def.localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} def.localAnchorB The local anchor point relative to bodyB's origin.\n */\n\nvar DEFAULTS = {\n  maxLength : 0.0,\n};\n\n/**\n * A rope joint enforces a maximum distance between two points on two bodies. It\n * has no other effect.\n * \n * Warning: if you attempt to change the maximum length during the simulation\n * you will get some non-physical behavior.\n * \n * A model that would allow you to dynamically modify the length would have some\n * sponginess, so I chose not to implement it that way. See DistanceJoint if you\n * want to dynamically control length.\n *\n * @param {RopeJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction RopeJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof RopeJoint)) {\n    return new RopeJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = RopeJoint.TYPE;\n  this.m_localAnchorA = anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.neo(-1.0, 0.0);\n  this.m_localAnchorB = anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.neo(1.0, 0.0);\n\n  this.m_maxLength = def.maxLength;\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_length = 0.0;\n  this.m_state = inactiveLimit;\n\n  // Solver temp\n  this.m_u; // Vec2\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass; // float\n\n  // Limit:\n  // C = norm(pB - pA) - L\n  // u = (pB - pA) / norm(pB - pA)\n  // Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA))\n  // J = [-u -cross(rA, u) u cross(rB, u)]\n  // K = J * invM * JT\n  // = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2\n};\n\nRopeJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    maxLength: this.m_maxLength,\n  };\n};\n\nRopeJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new RopeJoint(data);\n  return joint;\n};\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nRopeJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nRopeJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * Set/Get the maximum length of the rope.\n */\nRopeJoint.prototype.setMaxLength = function(length) {\n  this.m_maxLength = length;\n}\n\nRopeJoint.prototype.getMaxLength = function() {\n  return this.m_maxLength;\n}\n\nRopeJoint.prototype.getLimitState = function() {\n  // TODO LimitState\n  return this.m_state;\n}\n\nRopeJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nRopeJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nRopeJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.mul(this.m_impulse, this.m_u).mul(inv_dt);\n}\n\nRopeJoint.prototype.getReactionTorque = function(inv_dt) {\n  return 0.0;\n}\n\nRopeJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  this.m_rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  this.m_u = Vec2.zero();\n  this.m_u.addCombine(1, cB, 1, this.m_rB);\n  this.m_u.subCombine(1, cA, 1, this.m_rA); // Vec2\n\n  this.m_length = this.m_u.length();\n\n  var C = this.m_length - this.m_maxLength; // float\n  if (C > 0.0) {\n    this.m_state = atUpperLimit;\n  } else {\n    this.m_state = inactiveLimit;\n  }\n\n  if (this.m_length > Settings.linearSlop) {\n    this.m_u.mul(1.0 / this.m_length);\n  } else {\n    this.m_u.setZero();\n    this.m_mass = 0.0;\n    this.m_impulse = 0.0;\n    return;\n  }\n\n  // Compute effective mass.\n  var crA = Vec2.cross(this.m_rA, this.m_u); // float\n  var crB = Vec2.cross(this.m_rB, this.m_u); // float\n  var invMass = this.m_invMassA + this.m_invIA * crA * crA + this.m_invMassB\n      + this.m_invIB * crB * crB; // float\n\n  this.m_mass = invMass != 0.0 ? 1.0 / invMass : 0.0;\n\n  if (step.warmStarting) {\n    // Scale the impulse to support a variable time step.\n    this.m_impulse *= step.dtRatio;\n\n    var P = Vec2.mul(this.m_impulse, this.m_u);\n    \n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n    \n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n    \n  } else {\n    this.m_impulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Cdot = dot(u, v + cross(w, r))\n  var vpA = Vec2.addCross(vA, wA, this.m_rA); // Vec2\n  var vpB = Vec2.addCross(vB, wB, this.m_rB); // Vec2\n  var C = this.m_length - this.m_maxLength; // float\n  var Cdot = Vec2.dot(this.m_u, Vec2.sub(vpB, vpA)); // float\n\n  // Predictive constraint.\n  if (C < 0.0) {\n    Cdot += step.inv_dt * C;\n  }\n\n  var impulse = -this.m_mass * Cdot; // float\n  var oldImpulse = this.m_impulse; // float\n  this.m_impulse = Math.min(0.0, this.m_impulse + impulse);\n  impulse = this.m_impulse - oldImpulse;\n\n  var P = Vec2.mul(impulse, this.m_u); // Vec2\n  vA.subMul(this.m_invMassA, P);\n  wA -= this.m_invIA * Vec2.cross(this.m_rA, P);\n  vB.addMul(this.m_invMassB, P);\n  wB += this.m_invIB * Vec2.cross(this.m_rB, P);\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nRopeJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c; // Vec2\n  var aA = this.m_bodyA.c_position.a; // float\n  var cB = this.m_bodyB.c_position.c; // Vec2\n  var aB = this.m_bodyB.c_position.a; // float\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulSub(qA, this.m_localAnchorA, this.m_localCenterA);\n  var rB = Rot.mulSub(qB, this.m_localAnchorB, this.m_localCenterB);\n  var u = Vec2.zero();\n  u.addCombine(1, cB, 1, rB);\n  u.subCombine(1, cA, 1, rA); // Vec2\n\n  var length = u.normalize(); // float\n  var C = length - this.m_maxLength; // float\n\n  C = Math.clamp(C, 0.0, Settings.maxLinearCorrection);\n\n  var impulse = -this.m_mass * C; // float\n  var P = Vec2.mul(impulse, u); // Vec2\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * Vec2.cross(rA, P);\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * Vec2.cross(rB, P);\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return length - this.m_maxLength < Settings.linearSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WeldJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nWeldJoint.TYPE = 'weld-joint';\nJoint.TYPES[WeldJoint.TYPE] = WeldJoint;\n\nWeldJoint._super = Joint;\nWeldJoint.prototype = create(WeldJoint._super.prototype);\n\n/**\n * @typedef {Object} WeldJointDef\n *\n * Weld joint definition. You need to specify local anchor points where they are\n * attached and the relative body angle. The position of the anchor points is\n * important for computing the reaction torque.\n * \n * @prop {float} frequencyHz The mass-spring-damper frequency in Hertz. Rotation\n *       only. Disable softness with a value of 0.\n * @prop {float} dampingRatio The damping ratio. 0 = no damping, 1 = critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {float} referenceAngle The bodyB angle minus bodyA angle in the\n *       reference state (radians).\n */\nvar DEFAULTS = {\n  frequencyHz : 0.0,\n  dampingRatio : 0.0,\n}\n\n/**\n * A weld joint essentially glues two bodies together. A weld joint may distort\n * somewhat because the island constraint solver is approximate.\n *\n * @param {WeldJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WeldJoint(def, bodyA, bodyB, anchor) {\n  if (!(this instanceof WeldJoint)) {\n    return new WeldJoint(def, bodyA, bodyB, anchor);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WeldJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_referenceAngle = Math.isFinite(def.referenceAngle) ? def.referenceAngle : bodyB.getAngle() - bodyA.getAngle();\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_impulse = Vec3();\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_rA; // Vec2\n  this.m_rB; // Vec2\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n  this.m_mass = new Mat33();\n\n  // Point-to-point constraint\n  // C = p2 - p1\n  // Cdot = v2 - v1\n  // / = v2 + cross(w2, r2) - v1 - cross(w1, r1)\n  // J = [-I -r1_skew I r2_skew ]\n  // Identity used:\n  // w k % (rx i + ry j) = w * (-ry i + rx j)\n\n  // Angle constraint\n  // C = angle2 - angle1 - referenceAngle\n  // Cdot = w2 - w1\n  // J = [0 0 -1 0 0 1]\n  // K = invI1 + invI2\n}\n\nWeldJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n    \n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    referenceAngle: this.m_referenceAngle,\n  };\n};\n\nWeldJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WeldJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWeldJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWeldJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n};\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWeldJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n};\n\n/**\n * Get the reference angle.\n */\nWeldJoint.prototype.getReferenceAngle = function() {\n  return this.m_referenceAngle;\n};\n\n/**\n * Set/get frequency in Hz.\n */\nWeldJoint.prototype.setFrequency = function(hz) {\n  this.m_frequencyHz = hz;\n};\n\nWeldJoint.prototype.getFrequency = function() {\n  return this.m_frequencyHz;\n};\n\n/**\n * Set/get damping ratio.\n */\nWeldJoint.prototype.setDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n};\n\nWeldJoint.prototype.getDampingRatio = function() {\n  return this.m_dampingRatio;\n};\n\nWeldJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n};\n\nWeldJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n};\n\nWeldJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.neo(this.m_impulse.x, this.m_impulse.y).mul(inv_dt);\n};\n\nWeldJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_impulse.z;\n};\n\nWeldJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  this.m_rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  this.m_rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  // J = [-I -r1_skew I r2_skew]\n  // [ 0 -1 0 1]\n  // r_skew = [-ry; rx]\n\n  // Matlab\n  // K = [ mA+r1y^2*iA+mB+r2y^2*iB, -r1y*iA*r1x-r2y*iB*r2x, -r1y*iA-r2y*iB]\n  // [ -r1y*iA*r1x-r2y*iB*r2x, mA+r1x^2*iA+mB+r2x^2*iB, r1x*iA+r2x*iB]\n  // [ -r1y*iA-r2y*iB, r1x*iA+r2x*iB, iA+iB]\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + this.m_rA.y * this.m_rA.y * iA + this.m_rB.y * this.m_rB.y\n      * iB;\n  K.ey.x = -this.m_rA.y * this.m_rA.x * iA - this.m_rB.y * this.m_rB.x * iB;\n  K.ez.x = -this.m_rA.y * iA - this.m_rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + this.m_rA.x * this.m_rA.x * iA + this.m_rB.x * this.m_rB.x\n      * iB;\n  K.ez.y = this.m_rA.x * iA + this.m_rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    K.getInverse22(this.m_mass);\n\n    var invM = iA + iB; // float\n    var m = invM > 0.0 ? 1.0 / invM : 0.0; // float\n\n    var C = aB - aA - this.m_referenceAngle; // float\n\n    // Frequency\n    var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n    // Damping coefficient\n    var d = 2.0 * m * this.m_dampingRatio * omega; // float\n\n    // Spring stiffness\n    var k = m * omega * omega; // float\n\n    // magic formulas\n    var h = step.dt; // float\n    this.m_gamma = h * (d + h * k);\n    this.m_gamma = this.m_gamma != 0.0 ? 1.0 / this.m_gamma : 0.0;\n    this.m_bias = C * h * k * this.m_gamma;\n\n    invM += this.m_gamma;\n    this.m_mass.ez.z = invM != 0.0 ? 1.0 / invM : 0.0;\n  } else if (K.ez.z == 0.0) {\n    K.getInverse22(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  } else {\n    K.getSymInverse33(this.m_mass);\n    this.m_gamma = 0.0;\n    this.m_bias = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Scale impulses to support a variable time step.\n    this.m_impulse.mul(step.dtRatio);\n\n    var P = Vec2.neo(this.m_impulse.x, this.m_impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + this.m_impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + this.m_impulse.z);\n\n  } else {\n    this.m_impulse.setZero();\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solveVelocityConstraints = function(step) {\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  if (this.m_frequencyHz > 0.0) {\n    var Cdot2 = wB - wA; // float\n\n    var impulse2 = -this.m_mass.ez.z\n        * (Cdot2 + this.m_bias + this.m_gamma * this.m_impulse.z); // float\n    this.m_impulse.z += impulse2;\n\n    wA -= iA * impulse2;\n    wB += iB * impulse2;\n\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n\n    var impulse1 = Vec2.neg(Mat33.mulVec2(this.m_mass, Cdot1)); // Vec2\n    this.m_impulse.x += impulse1.x;\n    this.m_impulse.y += impulse1.y;\n\n    var P = Vec2.clone(impulse1); // Vec2\n\n    vA.subMul(mA, P);\n    wA -= iA * Vec2.cross(this.m_rA, P);\n\n    vB.addMul(mB, P);\n    wB += iB * Vec2.cross(this.m_rB, P);\n  } else {\n    var Cdot1 = Vec2.zero();\n    Cdot1.addCombine(1, vB, 1, Vec2.cross(wB, this.m_rB));\n    Cdot1.subCombine(1, vA, 1, Vec2.cross(wA, this.m_rA)); // Vec2\n    var Cdot2 = wB - wA; // float\n    var Cdot = Vec3(Cdot1.x, Cdot1.y, Cdot2); // Vec3\n\n    var impulse = Vec3.neg(Mat33.mulVec3(this.m_mass, Cdot)); // Vec3\n    this.m_impulse.add(impulse);\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    vA.subMul(mA, P);\n    wA -= iA * (Vec2.cross(this.m_rA, P) + impulse.z);\n\n    vB.addMul(mB, P);\n    wB += iB * (Vec2.cross(this.m_rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_velocity.v = vA;\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v = vB;\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWeldJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA), qB = Rot.neo(aB);\n\n  var mA = this.m_invMassA, mB = this.m_invMassB; // float\n  var iA = this.m_invIA, iB = this.m_invIB; // float\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n\n  var positionError, angularError; // float\n\n  var K = new Mat33();\n  K.ex.x = mA + mB + rA.y * rA.y * iA + rB.y * rB.y * iB;\n  K.ey.x = -rA.y * rA.x * iA - rB.y * rB.x * iB;\n  K.ez.x = -rA.y * iA - rB.y * iB;\n  K.ex.y = K.ey.x;\n  K.ey.y = mA + mB + rA.x * rA.x * iA + rB.x * rB.x * iB;\n  K.ez.y = rA.x * iA + rB.x * iB;\n  K.ex.z = K.ez.x;\n  K.ey.z = K.ez.y;\n  K.ez.z = iA + iB;\n\n  if (this.m_frequencyHz > 0.0) {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA); // Vec2\n\n    positionError = C1.length();\n    angularError = 0.0;\n\n    var P = Vec2.neg(K.solve22(C1)); // Vec2\n\n    cA.subMul(mA, P);\n    aA -= iA * Vec2.cross(rA, P);\n\n    cB.addMul(mB, P);\n    aB += iB * Vec2.cross(rB, P);\n  } else {\n    var C1 = Vec2.zero();\n    C1.addCombine(1, cB, 1, rB);\n    C1.subCombine(1, cA, 1, rA);\n\n    var C2 = aB - aA - this.m_referenceAngle; // float\n\n    positionError = C1.length();\n    angularError = Math.abs(C2);\n\n    var C = Vec3(C1.x, C1.y, C2);\n\n    var impulse = Vec3();\n    if (K.ez.z > 0.0) {\n      impulse = Vec3.neg(K.solve33(C));\n    } else {\n      var impulse2 = Vec2.neg(K.solve22(C1));\n      impulse.set(impulse2.x, impulse2.y, 0.0);\n    }\n\n    var P = Vec2.neo(impulse.x, impulse.y);\n\n    cA.subMul(mA, P);\n    aA -= iA * (Vec2.cross(rA, P) + impulse.z);\n\n    cB.addMul(mB, P);\n    aB += iB * (Vec2.cross(rB, P) + impulse.z);\n  }\n\n  this.m_bodyA.c_position.c = cA;\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c = cB;\n  this.m_bodyB.c_position.a = aB;\n\n  return positionError <= Settings.linearSlop\n      && angularError <= Settings.angularSlop;\n}\n","/*\n * Copyright (c) 2016-2018 Ali Shakiba http://shakiba.me/planck.js\n * Copyright (c) 2006-2011 Erin Catto  http://www.box2d.org\n *\n * This software is provided 'as-is', without any express or implied\n * warranty.  In no event will the authors be held liable for any damages\n * arising from the use of this software.\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n * 1. The origin of this software must not be misrepresented; you must not\n * claim that you wrote the original software. If you use this software\n * in a product, an acknowledgment in the product documentation would be\n * appreciated but is not required.\n * 2. Altered source versions must be plainly marked as such, and must not be\n * misrepresented as being the original software.\n * 3. This notice may not be removed or altered from any source distribution.\n */\n\nvar _DEBUG = typeof DEBUG === 'undefined' ? false : DEBUG;\nvar _ASSERT = typeof ASSERT === 'undefined' ? false : ASSERT;\n\nmodule.exports = WheelJoint;\n\nvar options = require('../util/options');\nvar create = require('../util/create');\nvar Settings = require('../Settings');\n\nvar Math = require('../common/Math');\nvar Vec2 = require('../common/Vec2');\nvar Vec3 = require('../common/Vec3');\nvar Mat22 = require('../common/Mat22');\nvar Mat33 = require('../common/Mat33');\nvar Rot = require('../common/Rot');\nvar Sweep = require('../common/Sweep');\nvar Transform = require('../common/Transform');\nvar Velocity = require('../common/Velocity');\nvar Position = require('../common/Position');\n\nvar Joint = require('../Joint');\nvar Body = require('../Body');\n\nWheelJoint.TYPE = 'wheel-joint';\nJoint.TYPES[WheelJoint.TYPE] = WheelJoint;\n\nWheelJoint._super = Joint;\nWheelJoint.prototype = create(WheelJoint._super.prototype);\n\n/**\n * @typedef {Object} WheelJointDef\n *\n * Wheel joint definition. This requires defining a line of motion using an axis\n * and an anchor point. The definition uses local anchor points and a local axis\n * so that the initial configuration can violate the constraint slightly. The\n * joint translation is zero when the local anchor points coincide in world\n * space. Using local anchors and a local axis helps when saving and loading a\n * game.\n *\n * @prop {boolean} enableMotor Enable/disable the joint motor.\n * @prop {float} maxMotorTorque The maximum motor torque, usually in N-m.\n * @prop {float} motorSpeed The desired motor speed in radians per second.\n * @prop {float} frequencyHz Suspension frequency, zero indicates no suspension.\n * @prop {float} dampingRatio Suspension damping ratio, one indicates critical\n *       damping.\n *\n * @prop {Vec2} localAnchorA The local anchor point relative to bodyA's origin.\n * @prop {Vec2} localAnchorB The local anchor point relative to bodyB's origin.\n * @prop {Vec2} localAxisA The local translation axis in bodyA.\n */\nvar DEFAULTS = {\n  enableMotor : false,\n  maxMotorTorque : 0.0,\n  motorSpeed : 0.0,\n  frequencyHz : 2.0,\n  dampingRatio : 0.7,\n};\n\n/**\n * A wheel joint. This joint provides two degrees of freedom: translation along\n * an axis fixed in bodyA and rotation in the plane. In other words, it is a\n * point to line constraint with a rotational motor and a linear spring/damper.\n * This joint is designed for vehicle suspensions.\n *\n * @param {WheelJointDef} def\n * @param {Body} bodyA\n * @param {Body} bodyB\n */\nfunction WheelJoint(def, bodyA, bodyB, anchor, axis) {\n  if (!(this instanceof WheelJoint)) {\n    return new WheelJoint(def, bodyA, bodyB, anchor, axis);\n  }\n\n  def = options(def, DEFAULTS);\n  Joint.call(this, def, bodyA, bodyB);\n  bodyA = this.m_bodyA;\n  bodyB = this.m_bodyB;\n\n  this.m_type = WheelJoint.TYPE;\n\n  this.m_localAnchorA = Vec2.clone(anchor ? bodyA.getLocalPoint(anchor) : def.localAnchorA || Vec2.zero());\n  this.m_localAnchorB = Vec2.clone(anchor ? bodyB.getLocalPoint(anchor) : def.localAnchorB || Vec2.zero());\n  this.m_localXAxisA = Vec2.clone(axis ? bodyA.getLocalVector(axis) : def.localAxisA || def.localAxis || Vec2.neo(1.0, 0.0));\n  this.m_localYAxisA = Vec2.cross(1.0, this.m_localXAxisA);\n\n  this.m_mass = 0.0;\n  this.m_impulse = 0.0;\n  this.m_motorMass = 0.0;\n  this.m_motorImpulse = 0.0;\n  this.m_springMass = 0.0;\n  this.m_springImpulse = 0.0;\n\n  this.m_maxMotorTorque = def.maxMotorTorque;\n  this.m_motorSpeed = def.motorSpeed;\n  this.m_enableMotor = def.enableMotor;\n\n  this.m_frequencyHz = def.frequencyHz;\n  this.m_dampingRatio = def.dampingRatio;\n\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n\n  // Solver temp\n  this.m_localCenterA; // Vec2\n  this.m_localCenterB; // Vec2\n  this.m_invMassA; // float\n  this.m_invMassB; // float\n  this.m_invIA; // float\n  this.m_invIB; // float\n\n  this.m_ax = Vec2.zero();\n  this.m_ay = Vec2.zero(); // Vec2\n  this.m_sAx;\n  this.m_sBx; // float\n  this.m_sAy;\n  this.m_sBy; // float\n\n  // Linear constraint (point-to-line)\n  // d = pB - pA = xB + rB - xA - rA\n  // C = dot(ay, d)\n  // Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA,\n  // rA))\n  // = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB,\n  // ay), vB)\n  // J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]\n\n  // Spring linear constraint\n  // C = dot(ax, d)\n  // Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) +\n  // dot(cross(rB, ax), vB)\n  // J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]\n\n  // Motor rotational constraint\n  // Cdot = wB - wA\n  // J = [0 0 -1 0 0 1]\n}\n\nWheelJoint.prototype._serialize = function() {\n  return {\n    type: this.m_type,\n    bodyA: this.m_bodyA,\n    bodyB: this.m_bodyB,\n    collideConnected: this.m_collideConnected,\n\n    enableMotor: this.m_enableMotor,\n    maxMotorTorque: this.m_maxMotorTorque,\n    motorSpeed: this.m_motorSpeed,\n    frequencyHz: this.m_frequencyHz,\n    dampingRatio: this.m_dampingRatio,\n\n    localAnchorA: this.m_localAnchorA,\n    localAnchorB: this.m_localAnchorB,\n    localAxisA: this.m_localXAxisA,\n  };\n};\n\nWheelJoint._deserialize = function(data, world, restore) {\n  data = {...data};\n  data.bodyA = restore(Body, data.bodyA, world);\n  data.bodyB = restore(Body, data.bodyB, world);\n  var joint = new WheelJoint(data);\n  return joint;\n};\n\n/**\n * @internal\n */\nWheelJoint.prototype._setAnchors = function(def) {\n  if (def.anchorA) {\n    this.m_localAnchorA.set(this.m_bodyA.getLocalPoint(def.anchorA));\n  } else if (def.localAnchorA) {\n    this.m_localAnchorA.set(def.localAnchorA);\n  }\n\n  if (def.anchorB) {\n    this.m_localAnchorB.set(this.m_bodyB.getLocalPoint(def.anchorB));\n  } else if (def.localAnchorB) {\n    this.m_localAnchorB.set(def.localAnchorB);\n  }\n\n  if (def.localAxisA) {\n    this.m_localXAxisA.set(def.localAxisA);\n    this.m_localYAxisA.set(Vec2.cross(1.0, def.localAxisA));\n  }\n}\n\n/**\n * The local anchor point relative to bodyA's origin.\n */\nWheelJoint.prototype.getLocalAnchorA = function() {\n  return this.m_localAnchorA;\n}\n\n/**\n * The local anchor point relative to bodyB's origin.\n */\nWheelJoint.prototype.getLocalAnchorB = function() {\n  return this.m_localAnchorB;\n}\n\n/**\n * The local joint axis relative to bodyA.\n */\nWheelJoint.prototype.getLocalAxisA = function() {\n  return this.m_localXAxisA;\n}\n\n/**\n * Get the current joint translation, usually in meters.\n */\nWheelJoint.prototype.getJointTranslation = function() {\n  var bA = this.m_bodyA;\n  var bB = this.m_bodyB;\n\n  var pA = bA.getWorldPoint(this.m_localAnchorA); // Vec2\n  var pB = bB.getWorldPoint(this.m_localAnchorB); // Vec2\n  var d = Vec2.sub(pB, pA); // Vec2\n  var axis = bA.getWorldVector(this.m_localXAxisA); // Vec2\n\n  var translation = Vec2.dot(d, axis); // float\n  return translation;\n}\n\n/**\n * Get the current joint translation speed, usually in meters per second.\n */\nWheelJoint.prototype.getJointSpeed = function() {\n  var wA = this.m_bodyA.m_angularVelocity;\n  var wB = this.m_bodyB.m_angularVelocity;\n  return wB - wA;\n}\n\n/**\n * Is the joint motor enabled?\n */\nWheelJoint.prototype.isMotorEnabled = function() {\n  return this.m_enableMotor;\n}\n\n/**\n * Enable/disable the joint motor.\n */\nWheelJoint.prototype.enableMotor = function(flag) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_enableMotor = flag;\n}\n\n/**\n * Set the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.setMotorSpeed = function(speed) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_motorSpeed = speed;\n}\n\n/**\n * Get the motor speed, usually in radians per second.\n */\nWheelJoint.prototype.getMotorSpeed = function() {\n  return this.m_motorSpeed;\n}\n\n/**\n * Set/Get the maximum motor force, usually in N-m.\n */\nWheelJoint.prototype.setMaxMotorTorque = function(torque) {\n  this.m_bodyA.setAwake(true);\n  this.m_bodyB.setAwake(true);\n  this.m_maxMotorTorque = torque;\n}\n\nWheelJoint.prototype.getMaxMotorTorque = function() {\n  return this.m_maxMotorTorque;\n}\n\n/**\n * Get the current motor torque given the inverse time step, usually in N-m.\n */\nWheelJoint.prototype.getMotorTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\n/**\n * Set/Get the spring frequency in hertz. Setting the frequency to zero disables\n * the spring.\n */\nWheelJoint.prototype.setSpringFrequencyHz = function(hz) {\n  this.m_frequencyHz = hz;\n}\n\nWheelJoint.prototype.getSpringFrequencyHz = function() {\n  return this.m_frequencyHz;\n}\n\n/**\n * Set/Get the spring damping ratio\n */\nWheelJoint.prototype.setSpringDampingRatio = function(ratio) {\n  this.m_dampingRatio = ratio;\n}\n\nWheelJoint.prototype.getSpringDampingRatio = function() {\n  return this.m_dampingRatio;\n}\n\nWheelJoint.prototype.getAnchorA = function() {\n  return this.m_bodyA.getWorldPoint(this.m_localAnchorA);\n}\n\nWheelJoint.prototype.getAnchorB = function() {\n  return this.m_bodyB.getWorldPoint(this.m_localAnchorB);\n}\n\nWheelJoint.prototype.getReactionForce = function(inv_dt) {\n  return Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax).mul(inv_dt);\n}\n\nWheelJoint.prototype.getReactionTorque = function(inv_dt) {\n  return inv_dt * this.m_motorImpulse;\n}\n\nWheelJoint.prototype.initVelocityConstraints = function(step) {\n  this.m_localCenterA = this.m_bodyA.m_sweep.localCenter;\n  this.m_localCenterB = this.m_bodyB.m_sweep.localCenter;\n  this.m_invMassA = this.m_bodyA.m_invMass;\n  this.m_invMassB = this.m_bodyB.m_invMass;\n  this.m_invIA = this.m_bodyA.m_invI;\n  this.m_invIB = this.m_bodyB.m_invI;\n\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  // Compute the effective masses.\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA); // Vec2\n\n  // Point to line constraint\n  {\n    this.m_ay = Rot.mulVec2(qA, this.m_localYAxisA);\n    this.m_sAy = Vec2.cross(Vec2.add(d, rA), this.m_ay);\n    this.m_sBy = Vec2.cross(rB, this.m_ay);\n\n    this.m_mass = mA + mB + iA * this.m_sAy * this.m_sAy + iB * this.m_sBy\n        * this.m_sBy;\n\n    if (this.m_mass > 0.0) {\n      this.m_mass = 1.0 / this.m_mass;\n    }\n  }\n\n  // Spring constraint\n  this.m_springMass = 0.0;\n  this.m_bias = 0.0;\n  this.m_gamma = 0.0;\n  if (this.m_frequencyHz > 0.0) {\n    this.m_ax = Rot.mulVec2(qA, this.m_localXAxisA);\n    this.m_sAx = Vec2.cross(Vec2.add(d, rA), this.m_ax);\n    this.m_sBx = Vec2.cross(rB, this.m_ax);\n\n    var invMass = mA + mB + iA * this.m_sAx * this.m_sAx + iB * this.m_sBx\n        * this.m_sBx; // float\n\n    if (invMass > 0.0) {\n      this.m_springMass = 1.0 / invMass;\n\n      var C = Vec2.dot(d, this.m_ax); // float\n\n      // Frequency\n      var omega = 2.0 * Math.PI * this.m_frequencyHz; // float\n\n      // Damping coefficient\n      var d = 2.0 * this.m_springMass * this.m_dampingRatio * omega; // float\n\n      // Spring stiffness\n      var k = this.m_springMass * omega * omega; // float\n\n      // magic formulas\n      var h = step.dt; // float\n      this.m_gamma = h * (d + h * k);\n      if (this.m_gamma > 0.0) {\n        this.m_gamma = 1.0 / this.m_gamma;\n      }\n\n      this.m_bias = C * h * k * this.m_gamma;\n\n      this.m_springMass = invMass + this.m_gamma;\n      if (this.m_springMass > 0.0) {\n        this.m_springMass = 1.0 / this.m_springMass;\n      }\n    }\n  } else {\n    this.m_springImpulse = 0.0;\n  }\n\n  // Rotational motor\n  if (this.m_enableMotor) {\n    this.m_motorMass = iA + iB;\n    if (this.m_motorMass > 0.0) {\n      this.m_motorMass = 1.0 / this.m_motorMass;\n    }\n  } else {\n    this.m_motorMass = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  if (step.warmStarting) {\n    // Account for variable time step.\n    this.m_impulse *= step.dtRatio;\n    this.m_springImpulse *= step.dtRatio;\n    this.m_motorImpulse *= step.dtRatio;\n\n    var P = Vec2.combine(this.m_impulse, this.m_ay, this.m_springImpulse, this.m_ax);\n    var LA = this.m_impulse * this.m_sAy + this.m_springImpulse * this.m_sAx + this.m_motorImpulse;\n    var LB = this.m_impulse * this.m_sBy + this.m_springImpulse * this.m_sBx + this.m_motorImpulse;\n\n    vA.subMul(this.m_invMassA, P);\n    wA -= this.m_invIA * LA;\n\n    vB.addMul(this.m_invMassB, P);\n    wB += this.m_invIB * LB;\n\n  } else {\n    this.m_impulse = 0.0;\n    this.m_springImpulse = 0.0;\n    this.m_motorImpulse = 0.0;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solveVelocityConstraints = function(step) {\n  var mA = this.m_invMassA;\n  var mB = this.m_invMassB; // float\n  var iA = this.m_invIA;\n  var iB = this.m_invIB; // float\n\n  var vA = this.m_bodyA.c_velocity.v;\n  var wA = this.m_bodyA.c_velocity.w;\n  var vB = this.m_bodyB.c_velocity.v;\n  var wB = this.m_bodyB.c_velocity.w;\n\n  // Solve spring constraint\n  {\n    var Cdot = Vec2.dot(this.m_ax, vB) - Vec2.dot(this.m_ax, vA) + this.m_sBx\n        * wB - this.m_sAx * wA; // float\n    var impulse = -this.m_springMass\n        * (Cdot + this.m_bias + this.m_gamma * this.m_springImpulse); // float\n    this.m_springImpulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ax); // Vec2\n    var LA = impulse * this.m_sAx; // float\n    var LB = impulse * this.m_sBx; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  // Solve rotational motor constraint\n  {\n    var Cdot = wB - wA - this.m_motorSpeed; // float\n    var impulse = -this.m_motorMass * Cdot; // float\n\n    var oldImpulse = this.m_motorImpulse; // float\n    var maxImpulse = step.dt * this.m_maxMotorTorque; // float\n    this.m_motorImpulse = Math.clamp(this.m_motorImpulse + impulse,\n        -maxImpulse, maxImpulse);\n    impulse = this.m_motorImpulse - oldImpulse;\n\n    wA -= iA * impulse;\n    wB += iB * impulse;\n  }\n\n  // Solve point to line constraint\n  {\n    var Cdot = Vec2.dot(this.m_ay, vB) - Vec2.dot(this.m_ay, vA) + this.m_sBy\n        * wB - this.m_sAy * wA; // float\n    var impulse = -this.m_mass * Cdot; // float\n    this.m_impulse += impulse;\n\n    var P = Vec2.mul(impulse, this.m_ay); // Vec2\n    var LA = impulse * this.m_sAy; // float\n    var LB = impulse * this.m_sBy; // float\n\n    vA.subMul(mA, P);\n    wA -= iA * LA;\n\n    vB.addMul(mB, P);\n    wB += iB * LB;\n  }\n\n  this.m_bodyA.c_velocity.v.set(vA);\n  this.m_bodyA.c_velocity.w = wA;\n  this.m_bodyB.c_velocity.v.set(vB);\n  this.m_bodyB.c_velocity.w = wB;\n}\n\nWheelJoint.prototype.solvePositionConstraints = function(step) {\n  var cA = this.m_bodyA.c_position.c;\n  var aA = this.m_bodyA.c_position.a;\n  var cB = this.m_bodyB.c_position.c;\n  var aB = this.m_bodyB.c_position.a;\n\n  var qA = Rot.neo(aA);\n  var qB = Rot.neo(aB);\n\n  var rA = Rot.mulVec2(qA, Vec2.sub(this.m_localAnchorA, this.m_localCenterA));\n  var rB = Rot.mulVec2(qB, Vec2.sub(this.m_localAnchorB, this.m_localCenterB));\n  var d = Vec2.zero();\n  d.addCombine(1, cB, 1, rB);\n  d.subCombine(1, cA, 1, rA);\n\n  var ay = Rot.mulVec2(qA, this.m_localYAxisA);\n\n  var sAy = Vec2.cross(Vec2.add(d, rA), ay); // float\n  var sBy = Vec2.cross(rB, ay); // float\n\n  var C = Vec2.dot(d, ay); // float\n\n  var k = this.m_invMassA + this.m_invMassB + this.m_invIA * this.m_sAy\n      * this.m_sAy + this.m_invIB * this.m_sBy * this.m_sBy; // float\n\n  var impulse; // float\n  if (k != 0.0) {\n    impulse = -C / k;\n  } else {\n    impulse = 0.0;\n  }\n\n  var P = Vec2.mul(impulse, ay); // Vec2\n  var LA = impulse * sAy; // float\n  var LB = impulse * sBy; // float\n\n  cA.subMul(this.m_invMassA, P);\n  aA -= this.m_invIA * LA;\n  cB.addMul(this.m_invMassB, P);\n  aB += this.m_invIB * LB;\n\n  this.m_bodyA.c_position.c.set(cA);\n  this.m_bodyA.c_position.a = aA;\n  this.m_bodyB.c_position.c.set(cB);\n  this.m_bodyB.c_position.a = aB;\n\n  return Math.abs(C) <= Settings.linearSlop;\n}\n"],"sourceRoot":""}